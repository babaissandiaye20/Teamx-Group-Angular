var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ApiError.html",[0,0.285,1,2.3]],["body/interfaces/ApiError.html",[0,0.156,1,2.86,2,0.534,3,0.107,4,0.091,5,0.242,6,1.399,7,0.156,8,0.366,9,0.538,10,3.211,11,2.009,12,0.277,13,0.025,14,1.191,15,0.335,16,1.83,17,0.361,18,1.554,19,0.786,20,2.232,21,2.232,22,2.232,23,2.232,24,1.399,25,2.86,26,0.974,27,0.842,28,2.232,29,0.786,30,1.147,31,1.259,32,2.232,33,1.587,34,1.587,35,0.852,36,1.399,37,1.147,38,2.232,39,0.852,40,1.399,41,1.147,42,0.852,43,1.399,44,2.49,45,2.283,46,1.587,47,1.939,48,1.399,49,0.852,50,1.399,51,1.255,52,1.255,53,1.83,54,1.259,55,1.587,56,2.283,57,1.587,58,1.054,59,0.584,60,1.259,61,0.606,62,0.606,63,0.736,64,1.528,65,0.606,66,0.606,67,1.587,68,0.606,69,1.587,70,0.107,71,0.387,72,0.534,73,0.904,74,2.183,75,1.587,76,1.464,77,2.785,78,1.587,79,1.587,80,1.399,81,2.708,82,1.259,83,1.587,84,1.399,85,1.587,86,2.216,87,1.587,88,2.009,89,1.587,90,1.587,91,2.232,92,1.399,93,1.587,94,0.904,95,1.587,96,1.399,97,1.054,98,2.186,99,3.159,100,2.532,101,1.587,102,1.587,103,1.399,104,0.613,105,3.159,106,2.606,107,1.587,108,2.213,109,2.394,110,1.587,111,2.213,112,1.587,113,1.587,114,4.198,115,1.587,116,1.399,117,1.399,118,2.182,119,1.399,120,1.399,121,1.399,122,1.399,123,2.009,124,1.587,125,2.418,126,1.147,127,2.009,128,1.587,129,1.259,130,2.232,131,3.125,132,2.394,133,1.399,134,1.259,135,1.147,136,1.259,137,1.259,138,1.587,139,1.587,140,1.587,141,1.587,142,2.447,143,1.054,144,1.587,145,1.587,146,1.587,147,2.532,148,2.506,149,1.587,150,3.159,151,2.532,152,1.587,153,1.587,154,4.198,155,3.939,156,1.587,157,1.587,158,1.587,159,1.587,160,1.587,161,1.587,162,1.587,163,1.939,164,1.587,165,1.259,166,1.587,167,1.587,168,1.286,169,2.532,170,3.179,171,2.532,172,0.606,173,1.587,174,1.587,175,1.587,176,1.399,177,1.587,178,1.587,179,1.587,180,1.399,181,1.8,182,3.179,183,3.159,184,1.587,185,1.399,186,1.587,187,1.587,188,1.587,189,1.587,190,1.587,191,1.587,192,1.587,193,1.399,194,1.399,195,1.587,196,1.587,197,1.587,198,1.587,199,2.532,200,2.532,201,3.159,202,1.587,203,1.587,204,3.159,205,1.399,206,2.506,207,2.785,208,1.587,209,1.587,210,1.587,211,1.399,212,2.785,213,3.159,214,1.399,215,1.587,216,3.159,217,1.587,218,1.587,219,2.009,220,1.587,221,1.587,222,1.587,223,1.587,224,1.587,225,1.587,226,1.587,227,2.532,228,1.587,229,2.532,230,2.785,231,1.587,232,1.587,233,1.399,234,1.399,235,1.587,236,2.009,237,1.587,238,1.399,239,1.587,240,1.587,241,1.587,242,1.587,243,1.587,244,2.532,245,1.587,246,1.587,247,1.587,248,2.532,249,1.587,250,1.587,251,1.587,252,0.01,253,0.01]],["title/interfaces/ApiResponse.html",[0,0.285,254,2.556]],["body/interfaces/ApiResponse.html",[0,0.403,2,1.378,3,0.276,4,0.236,5,0.236,7,0.403,8,0.715,11,3.926,12,0.497,13,0.025,58,2.718,59,0.667,70,0.276,252,0.02,253,0.02,254,4.364,255,4.092,256,3.608,257,2.624,258,3.15,259,4.874,260,1.617,261,1.897,262,4.092,263,4.092,264,1.667,265,1.468,266,3.608]],["title/components/AppComponent.html",[15,0.384,267,1.04]],["body/components/AppComponent.html",[3,0.224,4,0.191,5,0.191,7,0.327,8,0.628,12,0.292,13,0.025,14,1.211,15,0.64,17,0.756,35,1.119,39,1.119,42,1.119,49,1.119,59,0.401,61,2.258,62,2.258,65,1.659,66,1.659,68,1.659,70,0.224,71,0.809,72,1.119,104,0.739,172,1.269,252,0.018,253,0.018,267,1.839,268,1.557,269,1.353,270,1.353,271,1.353,272,3.322,273,1.269,274,2.664,275,5.12,276,1.734,277,1.734,278,1.734,279,5.12,280,5.12,281,5.703,282,1.119,283,1.119,284,4.341,285,5.12,286,1.05,287,3.919,288,2.636,289,3.919,290,3.919,291,3.919,292,3.919,293,1.353,294,1.768,295,1.768,296,1.353,297,2.087,298,1.353,299,1.353,300,1.05,301,1.768,302,1.192,303,1.353,304,1.353,305,1.353,306,1.192,307,1.353,308,1.353,309,1.192,310,1.353,311,1.353,312,1.353,313,1.353,314,1.353,315,1.192,316,0.706,317,1.269,318,1.353]],["title/interfaces/CreateProductDto.html",[0,0.285,51,1.437]],["body/interfaces/CreateProductDto.html",[0,0.523,2,1.23,3,0.246,4,0.21,5,0.316,7,0.359,8,0.667,9,0.98,12,0.466,13,0.025,44,1.81,51,2.286,52,1.81,59,0.713,70,0.358,86,2.379,104,0.966,108,3.486,111,3.486,181,3.187,252,0.019,253,0.019,260,1.655,264,1.487,265,1.31,319,2.64,320,1.81,321,2.242]],["title/interfaces/CreateUserDto.html",[0,0.285,322,1.344]],["body/interfaces/CreateUserDto.html",[0,0.551,2,1.232,3,0.247,4,0.211,5,0.211,7,0.36,8,0.668,12,0.444,13,0.025,59,0.73,70,0.377,168,1.49,252,0.019,253,0.019,257,1.697,260,1.556,261,1.697,264,1.49,265,1.313,316,0.777,320,1.814,322,2.141,323,2.247,324,3.238,325,3.238,326,3.238,327,2.431,328,2.431,329,3.361,330,2.431,331,2.431,332,1.697,333,1.942,334,2.431,335,2.632,336,2.431,337,2.247,338,2.247,339,2.247,340,2.086,341,2.086]],["title/components/DeleteModalComponent.html",[15,0.384,39,0.976]],["body/components/DeleteModalComponent.html",[3,0.17,4,0.145,5,0.145,7,0.249,12,0.441,13,0.025,14,0.819,15,0.555,17,0.575,18,2.574,19,1.252,35,0.85,39,1.539,41,3.886,42,0.85,49,0.85,59,0.552,61,2.177,62,2.177,65,1.375,66,1.375,68,1.375,70,0.17,71,0.615,72,0.85,76,1.668,81,2.225,86,1.563,98,1.668,104,0.612,125,2.209,143,3.208,163,2.209,168,1.028,172,0.965,236,2.855,252,0.015,253,0.015,267,0.906,268,1.291,269,1.028,270,1.028,271,1.028,273,0.965,276,0.906,277,0.906,278,0.906,282,1.539,283,1.539,286,1.669,293,1.028,294,1.466,295,1.466,296,1.028,297,1.861,298,1.028,299,1.028,300,1.723,301,1.466,302,0.906,303,1.028,304,1.028,305,1.028,306,0.906,307,1.028,308,1.028,309,0.906,310,1.028,311,1.028,312,1.028,313,1.028,314,1.028,315,0.906,316,0.536,317,0.965,318,1.028,342,5.376,343,2.227,344,3.599,345,3.599,346,3.599,347,1.212,348,4.57,349,5.391,350,2.855,351,5.168,352,5.698,353,4.946,354,4.193,355,3.173,356,4.193,357,2.526,358,2.526,359,2.526,360,2.526,361,4.259,362,2.979,363,2.526,364,2.526,365,1.212,366,2.979,367,3.697,368,2.526,369,2.526,370,2.979,371,2.526,372,4.245,373,4.245,374,4.245,375,4.245,376,4.245,377,5.391,378,4.245,379,4.245,380,3.599,381,4.245,382,4.245,383,2.855,384,4.245]],["title/pipes/FcfaCurrencyPipe.html",[53,2.095,385,2.095]],["body/pipes/FcfaCurrencyPipe.html",[3,0.264,4,0.226,5,0.226,9,0.831,12,0.344,13,0.025,14,0.891,17,0.891,53,3.482,54,4.319,59,0.582,63,2.233,64,1.522,70,0.264,71,0.954,73,2.231,76,1.815,104,0.888,118,1.7,142,1.94,206,3.106,252,0.02,253,0.02,260,1.45,273,1.496,283,1.318,286,1.237,347,1.318,365,1.318,385,3.482,386,3.915,387,4.817,388,3.915,389,4.617,390,5.681,391,4.617,392,1.594,393,5.681,394,4.617,395,3.199,396,3.106,397,3.771,398,4.617,399,5.681,400,4.617,401,4.617,402,4.617,403,4.617,404,4.617,405,3.106,406,4.617]],["title/interfaces/FindProductDto.html",[0,0.285,321,1.779]],["body/interfaces/FindProductDto.html",[0,0.52,2,1.213,3,0.243,4,0.207,5,0.289,7,0.354,8,0.661,9,1.238,12,0.479,13,0.025,44,1.785,51,1.785,52,1.785,59,0.704,70,0.356,86,2.181,104,0.963,108,3.475,111,3.475,181,2.862,252,0.019,253,0.019,260,1.671,264,2.152,265,1.895,319,2.603,320,1.785,321,2.806]],["title/interfaces/FindUserDto.html",[0,0.285,333,1.539]],["body/interfaces/FindUserDto.html",[0,0.541,2,1.155,3,0.231,4,0.198,5,0.198,7,0.338,8,0.641,9,1.244,12,0.483,13,0.025,59,0.728,70,0.371,168,1.397,252,0.018,253,0.018,257,1.59,260,1.607,261,1.59,264,2.113,265,1.861,316,0.728,320,1.7,322,1.59,323,2.105,324,3.191,325,3.191,326,3.191,327,2.278,328,2.278,329,3.26,330,2.278,331,2.278,332,1.59,333,2.352,334,3.446,335,2.525,336,2.278,337,2.105,338,2.105,339,2.105,340,1.955,341,1.955]],["title/components/FlashScreenComponent.html",[15,0.384,302,1.04]],["body/components/FlashScreenComponent.html",[3,0.2,4,0.171,5,0.171,7,0.291,8,0.581,9,0.629,12,0.26,13,0.025,14,1.115,15,0.605,17,0.674,18,1.818,19,1.468,35,0.997,39,0.997,42,0.997,49,0.997,61,2.226,62,2.226,64,1.271,65,1.536,66,1.536,68,1.536,70,0.2,71,0.722,72,0.997,81,2.134,94,1.688,97,3.252,98,1.373,104,0.777,118,1.286,172,1.132,252,0.017,253,0.017,261,1.373,267,1.062,268,1.442,269,1.206,270,1.206,271,1.206,273,1.132,276,1.062,277,1.062,278,1.062,282,0.997,283,0.997,286,1.443,288,2.35,293,1.206,294,1.637,295,1.637,296,1.206,297,1.994,298,1.206,299,1.206,300,0.936,301,1.637,302,1.756,303,2.199,304,1.206,305,1.206,306,1.756,307,1.206,308,1.206,309,1.062,310,1.206,311,1.206,312,1.206,313,1.206,314,1.206,315,1.062,316,0.629,317,1.132,318,1.206,347,1.354,365,0.997,392,1.206,395,1.967,407,4.896,408,4.896,409,2.962,410,5.385,411,4.743,412,4.743,413,5.385,414,3.494,415,6.227,416,4.743,417,3.494,418,3.494,419,2.141,420,3.494,421,3.494,422,3.494,423,3.494,424,3.494,425,3.494,426,4.743,427,3.19,428,3.494,429,3.494,430,3.494,431,3.494,432,3.545,433,3.545]],["title/components/FooterComponent.html",[15,0.384,277,1.04]],["body/components/FooterComponent.html",[3,0.236,4,0.201,5,0.201,13,0.025,14,0.796,15,0.656,17,0.796,35,1.177,39,1.177,42,1.177,49,1.177,61,2.272,62,2.272,63,1.621,64,1.105,65,1.336,66,1.714,68,1.714,70,0.236,71,0.852,72,1.177,104,0.763,172,1.336,252,0.018,253,0.018,267,1.254,268,1.609,269,1.424,270,1.424,271,1.424,273,1.336,276,1.254,277,1.875,278,1.254,293,1.424,294,1.827,295,1.827,296,1.424,297,2.128,298,1.424,299,1.424,300,1.105,301,1.827,302,1.254,303,1.424,304,1.424,305,1.424,306,1.254,307,1.424,308,1.424,309,1.254,310,1.424,311,1.424,312,1.424,313,1.424,314,1.424,315,1.254,316,0.743,317,1.336,318,1.424,432,3.956,433,3.956,434,3.497,435,5.292,436,5.292,437,5.292,438,3.497,439,5.292,440,4.487,441,5.292,442,5.292]],["title/components/FormModalComponent.html",[15,0.384,35,0.976]],["body/components/FormModalComponent.html",[3,0.168,4,0.144,5,0.144,7,0.245,12,0.462,13,0.025,14,0.948,15,0.472,17,0.568,18,2.556,19,1.236,20,3.671,26,1.531,35,1.53,37,3.978,39,0.84,42,0.84,49,0.84,59,0.301,61,2.173,62,2.173,64,1.127,65,1.363,66,1.363,68,1.363,70,0.168,71,0.608,72,0.84,76,1.654,81,2.552,82,4.085,98,1.654,104,0.607,143,3.419,168,1.696,170,3.671,172,1.967,252,0.015,253,0.015,267,0.895,268,1.279,269,1.016,270,1.016,271,1.016,273,0.953,276,0.895,277,0.895,278,0.895,282,1.619,283,1.619,286,1.718,293,1.016,294,1.453,295,1.453,296,1.016,297,1.85,298,1.016,299,1.016,300,0.788,301,1.453,302,0.895,303,1.016,304,1.016,305,1.016,306,0.895,307,1.016,308,1.016,309,0.895,310,1.016,311,1.016,312,1.016,313,1.016,314,1.016,315,0.895,316,0.53,317,0.953,318,1.016,343,2.199,344,3.567,345,3.567,346,3.567,347,1.201,348,4.544,350,2.83,351,4.808,354,4.164,355,3.145,356,4.164,357,2.494,358,2.494,359,2.494,360,2.494,361,4.007,363,2.494,364,2.494,365,1.201,367,3.671,368,2.494,369,2.494,371,2.494,380,3.567,405,3.605,443,5.504,444,6.073,445,4.912,446,4.912,447,4.912,448,2.942,449,2.942,450,2.942,451,2.942,452,2.942,453,2.942,454,5.36]],["title/interfaces/HttpResponse.html",[0,0.285,455,1.779]],["body/interfaces/HttpResponse.html",[0,0.384,2,1.315,3,0.263,4,0.225,5,0.225,7,0.384,8,0.695,9,1.155,11,3.816,12,0.506,13,0.025,58,3.613,59,0.687,70,0.263,86,2.264,252,0.02,253,0.02,256,3.444,257,2.522,258,3.1,259,4.796,260,1.602,261,2.416,262,5.44,263,3.906,264,1.591,265,1.401,266,3.444,455,2.953,456,3.444]],["title/injectables/HttpService.html",[457,1.18,458,2.095]],["body/injectables/HttpService.html",[3,0.159,4,0.136,5,0.136,7,0.232,8,0.495,9,1.041,12,0.487,13,0.025,14,1.116,17,0.536,27,2.805,29,1.167,30,1.702,59,0.664,70,0.159,71,0.574,73,1.341,74,2.43,76,2.051,94,1.341,104,0.834,118,2.129,123,3.51,142,2.569,252,0.014,253,0.014,257,2.594,258,2.521,259,3.901,261,2.403,274,1.445,282,1.582,283,1.582,286,1.599,300,1.081,347,1.152,365,1.582,385,3.198,392,2.186,395,1.563,419,1.702,455,1.445,457,1.393,458,2.473,459,1.445,460,2.354,461,4.754,462,4.036,463,3.421,464,3.421,465,2.076,466,5.218,467,4.036,468,3.51,469,3.421,470,5.671,471,2.777,472,3.51,473,3.421,474,2.777,475,4.036,476,2.777,477,5.968,478,3.421,479,2.777,480,3.421,481,2.777,482,4.036,483,2.777,484,2.076,485,2.777,486,2.714,487,2.777,488,1.868,489,1.563,490,2.354,491,3.421,492,2.777,493,2.777,494,2.777,495,2.076,496,4.754,497,4.754,498,6.115,499,6.115,500,2.777,501,5.218,502,4.03,503,5.218,504,4.036,505,2.777,506,2.777,507,2.777,508,2.777]],["title/interfaces/IHttpService.html",[0,0.285,486,2.3]],["body/interfaces/IHttpService.html",[0,0.339,2,1.161,3,0.232,4,0.199,5,0.199,7,0.339,9,1.104,12,0.498,13,0.025,14,1.013,27,3.046,29,1.71,59,0.708,70,0.232,104,0.885,252,0.018,253,0.018,257,2.555,261,2.411,286,1.643,300,1.406,347,1.498,365,1.751,392,2.313,455,2.118,456,4.746,463,4.448,464,4.448,468,2.737,469,4.448,470,5.861,472,4.126,473,4.448,478,4.448,480,4.448,486,3.529,488,2.737,509,3.45,510,4.069,511,4.126,512,4.069,513,4.069,514,4.069]],["title/components/LoaderComponent.html",[15,0.384,306,1.04]],["body/components/LoaderComponent.html",[3,0.242,4,0.207,5,0.207,13,0.025,14,0.817,15,0.664,17,0.817,35,1.208,39,1.208,42,1.208,49,1.208,61,2.278,62,2.278,63,2.114,64,1.441,65,1.371,66,1.743,68,1.743,70,0.242,71,0.874,72,1.208,104,0.776,172,1.371,252,0.019,253,0.019,267,1.287,268,1.636,269,1.461,270,1.461,271,1.461,273,1.371,276,1.287,277,1.287,278,1.287,293,1.461,294,1.857,295,1.857,296,1.461,297,2.149,298,1.461,299,1.461,300,1.134,301,1.857,302,1.287,303,1.461,304,1.461,305,1.461,306,1.892,307,1.461,308,1.461,309,1.287,310,1.461,311,1.461,312,1.461,313,1.461,314,1.461,315,1.287,316,0.762,317,1.371,318,1.461,515,3.587,516,5.379,517,5.379,518,5.379]],["title/components/NavbarComponent.html",[15,0.384,278,1.04]],["body/components/NavbarComponent.html",[3,0.233,4,0.199,5,0.199,13,0.025,14,1.014,15,0.653,17,0.787,35,1.164,39,1.164,42,1.164,49,1.164,61,2.269,62,2.269,63,2.064,64,1.407,65,1.702,66,1.702,68,1.702,70,0.233,71,0.842,72,1.164,104,0.758,135,3.219,172,1.321,252,0.018,253,0.018,267,1.24,268,1.597,269,1.407,270,1.407,271,1.407,273,1.321,276,1.24,277,1.24,278,1.866,288,2.742,293,1.407,294,1.813,295,1.813,296,1.407,297,2.119,298,1.407,299,1.407,300,1.092,301,1.813,302,1.24,303,1.407,304,1.407,305,1.407,306,1.24,307,1.407,308,1.407,309,1.24,310,1.407,311,1.407,312,1.407,313,1.407,314,1.407,315,1.24,316,0.734,317,1.321,318,1.407,432,3.927,433,3.927,519,3.456,520,5.253,521,5.812,522,5.812,523,5.253,524,5.253,525,3.927]],["title/injectables/NotificationService.html",[47,1.779,457,1.18]],["body/injectables/NotificationService.html",[3,0.346,4,0.156,5,0.156,7,0.267,8,0.548,9,1.092,10,2.897,12,0.486,13,0.025,14,0.993,17,0.618,27,2.315,28,3.846,29,1.346,47,2.325,58,3.414,59,0.705,70,0.183,71,0.662,74,2.162,76,1.756,98,1.259,104,0.875,109,1.804,118,2.233,142,2.162,252,0.016,253,0.016,258,2.829,260,1.601,274,1.667,282,1.275,283,1.275,286,1.701,347,1.275,365,1.776,392,2.094,427,2.155,457,1.543,459,1.667,489,1.804,511,3.745,526,2.716,527,4.72,528,5.567,529,4.468,530,4.468,531,4.362,532,4.362,533,4.468,534,5.908,535,3.204,536,3.204,537,4.468,538,3.204,539,4.468,540,3.204,541,4.468,542,3.716,543,3.204,544,4.468,545,4.468,546,3.204,547,4.468,548,3.204,549,3.204,550,3.204,551,3.204,552,3.204,553,3.204,554,3.204,555,3.204,556,3.204,557,2.716,558,3.204,559,5.567]],["title/interfaces/PaginatedResponse.html",[0,0.285,340,1.652]],["body/interfaces/PaginatedResponse.html",[0,0.553,2,1.25,3,0.25,4,0.214,5,0.214,7,0.365,8,0.674,12,0.409,13,0.025,59,0.72,70,0.378,168,1.512,252,0.019,253,0.019,257,2.477,260,1.561,261,2.362,264,1.512,265,1.332,316,0.789,320,1.84,322,1.721,323,2.279,324,3.045,325,3.045,326,3.045,327,2.466,328,2.466,329,3.383,330,2.466,331,2.466,332,1.721,333,1.971,334,2.466,335,3.045,336,2.466,337,2.279,338,2.279,339,2.279,340,2.656,341,3.045]],["title/components/PaginationComponent.html",[15,0.384,309,1.04]],["body/components/PaginationComponent.html",[3,0.121,4,0.103,5,0.103,7,0.176,8,0.402,9,0.591,12,0.455,13,0.025,14,0.634,15,0.452,17,0.408,19,0.887,35,0.603,39,0.603,42,0.603,49,0.603,59,0.534,61,2.05,62,2.05,63,1.291,64,0.88,65,1.064,66,1.064,68,1.064,70,0.121,71,0.436,72,0.603,73,1.586,74,2.428,76,0.83,98,2.049,104,0.656,109,2.935,118,0.777,125,2.366,126,2.469,142,1.91,143,2.269,163,2.713,172,0.684,252,0.011,253,0.011,260,1.528,264,1.391,265,1.711,266,3.681,267,0.642,268,0.998,269,0.729,270,0.729,271,0.729,273,0.684,276,0.642,277,0.642,278,0.642,282,1.65,283,1.65,286,1.711,293,0.729,294,1.134,295,1.134,296,0.729,297,1.569,298,0.729,299,0.729,300,0.566,301,1.134,302,0.642,303,0.729,304,0.729,305,0.729,306,0.642,307,0.729,308,0.729,309,1.382,310,0.729,311,0.729,312,0.729,313,0.729,314,0.729,315,0.642,316,0.38,317,0.684,318,0.729,338,2.097,339,2.097,341,2.196,347,0.937,350,2.209,355,2.455,361,3.012,365,1.488,367,2.455,392,1.134,396,1.42,397,2.012,495,2.455,560,1.79,561,4.03,562,3.416,563,3.416,564,3.284,565,3.284,566,4.03,567,4.924,568,4.924,569,4.03,570,4.546,571,4.546,572,3.284,573,2.784,574,4.546,575,4.546,576,4.03,577,4.03,578,2.112,579,2.209,580,2.112,581,2.112,582,2.112,583,2.112,584,3.284,585,4.546,586,2.112,587,2.112,588,3.284,589,2.112,590,2.112,591,2.112,592,4.683,593,2.112,594,2.112,595,2.112,596,2.112,597,2.112,598,2.112,599,2.112,600,2.112,601,4.175,602,2.112,603,1.79,604,1.79,605,3.284,606,4.03,607,4.03,608,2.112,609,2.112,610,4.03,611,2.112,612,5.78,613,2.112,614,4.924,615,5.78,616,2.112,617,2.112,618,2.112,619,2.112,620,3.284,621,1.79,622,3.284,623,1.79,624,2.112,625,2.112,626,2.112,627,2.112,628,3.284,629,2.112,630,3.284,631,2.112,632,2.112,633,2.112,634,2.112,635,2.112,636,2.112,637,2.112,638,4.546,639,2.112,640,2.112,641,2.112,642,2.112,643,2.112,644,2.112,645,2.112,646,4.546,647,2.112,648,2.112,649,2.112,650,2.112,651,2.112,652,3.284,653,3.284,654,3.284,655,3.284]],["title/interfaces/PaginationInfo.html",[0,0.285,335,1.652]],["body/interfaces/PaginationInfo.html",[0,0.549,2,1.215,3,0.243,4,0.208,5,0.208,7,0.355,8,0.662,12,0.464,13,0.025,59,0.718,70,0.376,168,1.47,252,0.019,253,0.019,257,1.673,260,1.653,261,1.673,264,1.47,265,1.294,316,0.766,320,1.788,322,1.673,323,2.215,324,3.013,325,3.013,326,3.013,327,2.397,328,2.397,329,3.339,330,2.397,331,2.397,332,1.673,333,1.915,334,2.397,335,2.865,336,3.512,337,3.246,338,3.246,339,3.246,340,2.056,341,2.056]],["title/interfaces/Product.html",[0,0.285,44,1.437]],["body/interfaces/Product.html",[0,0.522,2,1.222,3,0.245,4,0.209,5,0.29,7,0.357,8,0.664,9,0.976,12,0.48,13,0.025,44,2.277,51,1.799,52,1.799,59,0.718,70,0.357,86,2.374,104,0.965,108,3.482,111,3.482,181,3.182,252,0.019,253,0.019,260,1.654,264,1.478,265,1.302,319,2.624,320,2.626,321,2.228]],["title/components/ProductComponent.html",[15,0.384,72,0.976]],["body/components/ProductComponent.html",[0,0.099,1,1.816,3,0.068,4,0.058,5,0.218,6,0.89,7,0.099,8,0.251,9,0.805,10,2.384,11,0.8,12,0.414,13,0.025,14,1.058,15,0.303,16,1.654,17,0.23,18,1.405,19,0.5,20,2.018,21,2.018,22,2.018,23,2.398,24,0.89,25,2.158,26,0.619,27,0.535,28,2.018,29,0.5,30,0.729,31,0.8,32,1.532,33,1.009,34,1.009,35,0.916,36,0.89,37,0.729,38,1.532,39,0.916,40,0.89,41,0.729,42,0.916,43,0.89,44,2.529,45,2.423,46,1.009,47,2.204,48,0.89,49,0.916,50,0.89,51,0.861,52,0.861,53,1.654,54,1.816,55,1.009,56,2.976,57,1.009,58,0.67,59,0.586,60,0.8,61,1.776,62,1.776,63,0.806,64,1.38,65,0.664,66,0.664,67,1.738,68,0.664,69,1.738,70,0.068,71,0.246,72,0.916,73,0.99,74,2.303,75,2.289,76,1.261,77,2.704,78,1.738,79,2.289,80,2.018,81,2.507,82,2.433,83,2.289,84,1.532,85,2.289,86,2.134,87,3.067,88,1.816,89,2.289,90,2.289,91,1.532,92,2.018,93,2.289,94,0.99,95,2.289,96,2.018,97,1.807,98,2.278,99,2.289,100,1.738,101,2.72,102,1.009,103,0.89,104,0.776,105,2.289,106,1.966,107,1.009,108,1.67,109,2.519,110,1.009,111,1.67,112,1.009,113,2.72,114,3.352,115,1.009,116,0.89,117,0.89,118,1.896,119,0.89,120,0.89,121,0.89,122,0.89,123,1.379,124,1.009,125,2.204,126,0.729,127,1.379,128,1.009,129,0.8,130,1.532,131,2.433,132,2.519,133,0.89,134,0.8,135,1.654,136,0.8,137,0.8,138,1.009,139,1.009,140,1.738,141,2.72,142,2.106,143,0.67,144,1.009,145,1.009,146,1.009,147,1.738,148,1.816,149,1.009,150,2.289,151,1.738,152,1.009,153,1.009,154,3.352,155,3.067,156,1.009,157,1.009,158,1.009,159,1.009,160,1.009,161,1.009,162,1.009,163,1.405,164,1.009,165,0.8,166,1.009,167,2.72,168,1.365,169,1.738,170,2.398,171,1.738,172,0.664,173,1.009,174,1.009,175,1.009,176,0.89,177,1.009,178,1.009,179,1.009,180,0.89,181,2.26,182,2.398,183,2.289,184,1.009,185,2.018,186,2.72,187,1.738,188,1.009,189,1.009,190,1.009,191,1.009,192,1.009,193,0.89,194,0.89,195,1.009,196,1.009,197,1.009,198,1.009,199,1.738,200,1.738,201,2.289,202,1.009,203,1.009,204,2.289,205,0.89,206,1.816,207,2.018,208,1.009,209,1.009,210,1.009,211,0.89,212,2.018,213,2.289,214,0.89,215,1.009,216,2.289,217,1.009,218,1.009,219,3.464,220,1.009,221,1.009,222,1.009,223,1.009,224,1.009,225,1.009,226,1.738,227,1.738,228,1.009,229,1.738,230,2.018,231,1.738,232,1.009,233,0.89,234,0.89,235,1.009,236,1.379,237,2.72,238,2.398,239,1.738,240,1.009,241,2.289,242,2.289,243,3.067,244,1.738,245,1.009,246,2.72,247,1.738,248,1.738,249,1.738,250,1.738,251,1.009,252,0.007,253,0.007,267,0.362,268,0.623,269,0.411,270,0.411,271,0.411,273,0.386,276,0.362,277,0.362,278,0.362,282,1.431,283,1.431,286,1.677,293,0.411,294,0.708,295,0.708,296,0.411,297,1.108,298,0.411,299,0.411,300,0.319,301,0.708,302,0.362,303,0.411,304,0.411,305,0.411,306,0.362,307,0.411,308,0.411,309,0.362,310,0.411,311,0.411,312,0.411,313,0.411,314,0.411,315,0.362,316,0.214,317,0.386,318,0.411,347,0.585,365,1.565,392,1.544,405,2.158,656,2.05,657,2.05,658,2.05,659,2.05,660,2.05,661,2.05,662,2.05,663,1.19,664,2.05,665,1.19,666,1.19,667,1.19,668,1.19,669,1.816,670,1.19,671,1.19,672,1.19,673,1.19,674,1.19,675,1.19,676,1.19,677,1.19,678,1.19,679,1.19,680,1.19,681,1.19,682,1.19,683,1.19,684,1.19,685,1.19,686,1.19,687,1.19,688,1.19,689,1.19,690,1.19,691,1.19,692,1.19,693,2.05,694,1.532,695,1.738,696,2.05,697,2.05,698,2.05,699,3.209,700,2.05,701,3.209,702,2.05,703,2.05,704,2.05,705,2.05,706,3.209,707,2.05,708,2.05,709,1.532,710,2.05,711,3.209,712,2.05,713,2.05,714,1.009,715,2.05,716,1.19,717,1.256,718,1.19,719,1.19,720,1.19,721,1.532,722,1.19,723,1.19,724,1.19,725,1.532,726,1.19,727,1.19,728,1.19,729,1.19,730,1.19,731,1.19,732,1.19,733,1.19,734,1.19,735,1.19,736,1.19,737,1.19,738,1.19,739,1.19]],["title/injectables/ProductService.html",[45,2.095,457,1.18]],["body/injectables/ProductService.html",[3,0.114,4,0.097,5,0.189,7,0.166,8,0.384,9,1.021,10,3.52,12,0.441,13,0.025,14,0.924,17,0.384,27,2.665,29,0.836,31,1.338,44,2.011,45,1.92,51,1.848,52,1.848,59,0.633,64,0.533,70,0.114,71,0.411,74,2.696,76,2.167,77,2.899,81,1.41,84,3.801,86,1.154,88,3.42,91,2.342,94,0.961,98,1.232,104,0.869,118,2.302,125,1.631,126,2.696,129,2.959,131,2.108,132,1.764,134,2.108,135,1.219,136,3.22,142,2.236,163,1.631,165,1.338,168,1.339,181,0.961,193,3.289,214,3.289,219,2.959,252,0.011,253,0.011,257,1.729,258,2.456,274,1.035,282,1.256,283,1.619,286,1.613,300,0.84,321,2.29,347,0.894,365,1.574,383,2.108,392,1.959,397,1.219,419,1.219,455,1.035,457,1.082,458,2.696,459,1.035,465,1.487,468,2.108,472,2.608,488,1.338,489,1.12,490,2.657,491,5.105,495,1.487,511,1.338,579,2.108,623,2.657,709,1.487,717,2.376,721,1.487,725,1.487,740,1.686,741,3.801,742,3.287,743,3.287,744,3.287,745,3.134,746,2.657,747,2.657,748,3.134,749,2.657,750,3.134,751,3.134,752,3.134,753,1.989,754,5.085,755,3.134,756,1.989,757,2.657,758,1.989,759,2.657,760,1.989,761,2.657,762,2.657,763,1.989,764,3.134,765,1.989,766,2.657,767,1.989,768,3.134,769,5.085,770,1.989,771,2.657,772,2.657,773,2.657,774,1.989,775,1.989,776,3.73,777,5.673,778,1.686,779,1.686,780,3.134,781,1.989,782,1.989,783,1.989,784,1.989,785,3.134,786,1.989,787,1.989,788,1.989,789,1.989,790,3.134,791,3.134,792,3.134,793,4.4,794,3.134,795,2.899,796,1.989,797,3.134,798,3.134,799,3.134,800,3.134,801,3.134,802,1.686,803,3.134,804,1.686,805,3.134,806,1.686,807,1.989,808,1.989,809,1.989,810,1.686,811,1.686,812,1.686,813,1.989,814,1.989,815,1.686,816,3.134,817,3.878,818,3.134,819,1.989,820,1.989,821,1.989,822,1.989,823,3.134,824,4.787,825,1.686,826,1.686,827,1.686,828,1.686,829,1.989,830,1.989,831,4.4,832,1.989,833,1.989,834,1.989,835,3.134,836,1.989,837,1.989,838,3.134,839,1.989,840,1.989,841,1.989,842,1.989,843,1.989,844,1.989,845,1.989]],["title/injectables/ProductValidator.html",[56,2.095,457,1.18]],["body/injectables/ProductValidator.html",[3,0.114,4,0.098,5,0.249,7,0.167,8,0.386,9,0.865,12,0.433,13,0.025,14,0.752,17,0.387,25,3.915,26,1.043,44,1.324,51,0.842,52,0.842,54,2.621,56,1.932,59,0.492,60,2.972,64,1.43,70,0.114,71,0.414,74,2.75,86,2.347,88,2.12,104,0.736,106,2.388,108,1.043,109,2.488,111,1.043,118,2.508,125,2.5,127,1.348,132,2.194,142,2.018,148,4.058,163,2.5,165,2.12,181,0.968,219,2.621,252,0.011,253,0.011,260,1.041,274,1.043,282,1.523,283,1.834,286,1.616,347,0.9,365,1.371,383,3.825,392,1.658,395,3.005,396,2.621,397,1.228,457,1.088,459,1.043,489,1.128,579,2.621,669,2.12,694,2.913,709,1.498,714,1.699,717,1.932,721,3.303,725,3.591,741,4.893,742,3.303,743,3.303,771,2.672,772,2.672,773,2.672,776,3.746,795,2.356,825,2.672,826,1.699,827,1.699,828,3.303,846,1.699,847,3.897,848,3.897,849,3.897,850,3.897,851,3.303,852,2.356,853,3.152,854,3.152,855,3.152,856,3.152,857,2.356,858,2.004,859,3.152,860,2.004,861,3.152,862,2.004,863,3.152,864,2.004,865,3.152,866,2.004,867,2.004,868,2.004,869,3.152,870,2.004,871,3.152,872,2.004,873,2.004,874,2.004,875,2.672,876,3.152,877,3.152,878,2.672,879,3.152,880,2.004,881,2.004,882,3.152,883,3.303,884,3.746,885,1.699,886,1.699,887,1.699,888,1.699,889,1.699,890,5.101,891,3.152,892,3.152,893,3.152,894,3.152,895,4.418,896,4.418,897,2.004,898,2.004,899,3.152,900,2.004,901,2.004,902,2.004,903,2.004,904,2.004,905,3.152,906,3.152,907,1.699,908,3.746,909,3.746,910,1.699,911,2.004,912,1.699,913,3.303,914,2.004,915,1.699,916,1.699,917,2.004,918,2.004,919,2.004,920,2.004,921,3.746,922,3.152,923,3.303,924,3.897,925,3.152,926,3.152,927,2.004,928,3.152,929,2.004,930,2.672,931,2.004,932,2.004,933,2.004,934,2.004,935,2.004,936,2.004,937,2.004,938,2.004,939,2.004,940,2.004,941,2.004,942,2.004,943,2.004,944,1.699]],["title/components/SidebarComponent.html",[15,0.384,276,1.04]],["body/components/SidebarComponent.html",[3,0.24,4,0.205,5,0.205,13,0.024,14,0.81,15,0.662,17,0.81,35,1.198,39,1.198,42,1.198,49,1.198,61,2.276,62,2.276,63,2.103,64,1.434,65,1.36,66,1.734,68,1.734,70,0.24,71,0.867,72,1.198,104,0.772,135,3.28,172,1.36,252,0.019,253,0.019,267,1.276,268,1.627,269,1.449,270,1.449,271,1.449,273,1.36,276,1.887,277,1.276,278,1.276,293,1.449,294,1.848,295,1.848,296,1.449,297,2.142,298,1.449,299,1.449,300,1.125,301,1.848,302,1.276,303,1.449,304,1.449,305,1.449,306,1.276,307,1.449,308,1.449,309,1.276,310,1.449,311,1.449,312,1.449,313,1.449,314,1.449,315,1.276,316,0.756,317,1.36,318,1.449,525,4.001,945,3.559,946,5.352,947,5.352,948,5.352]],["title/components/SkeletonComponent.html",[15,0.384,42,0.976]],["body/components/SkeletonComponent.html",[3,0.2,4,0.171,5,0.171,7,0.292,12,0.464,13,0.025,14,0.917,15,0.606,16,3.305,17,0.677,18,2.807,19,1.473,35,1,39,1,42,1.651,49,1,59,0.359,61,2.227,62,2.227,63,1.868,64,1.549,65,1.54,66,1.54,68,1.54,70,0.2,71,0.724,72,1,73,2.296,81,1.577,97,3.256,98,1.378,104,0.686,132,1.973,137,3.628,143,3.404,168,1.21,172,1.135,211,2.62,252,0.017,253,0.017,267,1.066,268,1.445,269,1.21,270,1.21,271,1.21,273,1.135,276,1.066,277,1.066,278,1.066,282,1.54,283,1.54,286,1.549,293,1.21,294,1.641,295,1.641,296,1.21,297,1.997,298,1.21,299,1.21,300,0.939,301,1.641,302,1.066,303,1.21,304,1.21,305,1.21,306,1.066,307,1.21,308,1.21,309,1.066,310,1.21,311,1.21,312,1.21,313,1.21,314,1.21,315,1.066,316,0.631,317,1.135,318,1.21,347,1.357,350,3.197,365,1,427,2.358,949,2.972,950,4.753,951,4.753,952,4.753,953,5.394,954,3.505,955,3.505,956,5.783,957,4.03,958,4.753,959,4.03,960,4.753,961,4.753,962,3.505,963,3.505,964,3.505,965,2.972,966,2.972]],["title/interfaces/Toast.html",[0,0.285,542,2.095]],["body/interfaces/Toast.html",[0,0.394,2,1.347,3,0.37,4,0.231,5,0.231,7,0.394,8,0.706,9,1.037,10,3.499,12,0.513,13,0.025,58,3.643,59,0.691,70,0.27,252,0.02,253,0.02,258,3.126,260,1.464,531,5.268,532,5.268,534,5.485,542,3.529,967,4.001]],["title/components/ToastComponent.html",[15,0.384,49,0.976]],["body/components/ToastComponent.html",[3,0.196,4,0.168,5,0.168,7,0.286,8,0.574,9,0.844,12,0.397,13,0.025,14,1.158,15,0.599,16,3.269,17,0.662,18,2.776,19,1.442,27,2.4,29,1.442,35,0.979,39,0.979,42,0.979,47,3.223,49,1.636,59,0.546,61,2.221,62,2.221,63,1.349,64,0.919,65,1.518,66,1.518,68,1.518,70,0.196,71,0.709,72,0.979,73,2.263,94,1.658,97,3.228,98,2.253,104,0.827,172,1.112,185,3.502,252,0.016,253,0.016,258,1.658,267,1.043,268,1.425,269,1.185,270,1.185,271,1.185,273,1.112,276,1.043,277,1.043,278,1.043,286,1.536,293,1.185,294,1.618,295,1.618,296,1.185,297,1.979,298,1.185,299,1.185,300,0.919,301,1.618,302,1.043,303,1.185,304,1.185,305,1.185,306,1.043,307,1.185,308,1.185,309,1.043,310,1.185,311,1.185,312,1.185,313,1.185,314,1.185,315,1.043,316,0.618,317,1.112,318,1.185,347,1.337,365,1.337,392,1.618,419,2.103,438,2.909,527,5.087,542,3.269,557,3.972,968,2.909,969,4.685,970,4.685,971,4.685,972,3.431,973,4.685,974,4.685,975,3.431,976,3.431,977,3.431,978,3.431,979,3.431,980,3.431,981,3.431,982,4.685,983,4.685,984,4.685]],["title/interfaces/UpdateProductDto.html",[0,0.285,52,1.437]],["body/interfaces/UpdateProductDto.html",[0,0.52,2,1.215,3,0.243,4,0.208,5,0.314,7,0.355,8,0.662,9,1.217,12,0.464,13,0.025,44,1.788,51,1.788,52,2.269,59,0.712,70,0.356,86,2.37,104,0.964,108,3.477,111,3.477,181,3.178,252,0.019,253,0.019,260,1.653,264,1.47,265,1.294,319,2.609,320,1.788,321,2.215]],["title/interfaces/UpdateUserDto.html",[0,0.285,332,1.344]],["body/interfaces/UpdateUserDto.html",[0,0.549,2,1.217,3,0.244,4,0.208,5,0.208,7,0.356,8,0.663,9,1.185,12,0.442,13,0.025,59,0.729,70,0.376,168,1.472,252,0.019,253,0.019,257,1.676,260,1.551,261,1.676,264,1.472,265,1.297,316,0.768,320,1.792,322,1.676,323,2.22,324,3.229,325,3.229,326,3.229,327,2.401,328,2.401,329,3.342,330,2.401,331,2.401,332,2.125,333,1.919,334,2.401,335,2.612,336,2.401,337,2.22,338,2.22,339,2.22,340,2.06,341,2.06]],["title/interfaces/User.html",[0,0.285,316,0.616]],["body/interfaces/User.html",[0,0.539,2,1.137,3,0.228,4,0.195,5,0.195,7,0.332,8,0.634,9,1.164,12,0.496,13,0.025,59,0.727,70,0.369,168,1.985,252,0.018,253,0.018,257,1.566,260,1.523,261,1.566,264,1.376,265,1.212,316,0.932,320,2.557,322,1.566,323,2.074,324,3.179,325,3.179,326,3.179,327,3.426,328,3.426,329,3.797,330,3.426,331,3.426,332,1.566,333,1.793,334,2.244,335,2.501,336,2.244,337,2.074,338,2.074,339,2.074,340,1.925,341,1.925]],["title/components/UserComponent.html",[15,0.384,315,1.04]],["body/components/UserComponent.html",[3,0.085,4,0.073,5,0.073,7,0.124,8,0.303,9,0.848,10,2.975,12,0.421,13,0.025,14,1.092,15,0.357,16,1.947,17,0.287,19,0.624,21,2.375,22,3.076,23,2.77,24,2.375,26,0.773,27,1.43,29,0.624,30,0.91,31,0.999,32,1.849,35,1.058,36,1.11,37,0.91,38,1.849,39,1.058,40,1.11,41,0.91,42,1.058,43,1.11,47,2.452,48,1.11,49,1.058,50,1.11,59,0.541,61,1.891,62,1.891,63,0.972,64,1.372,65,0.801,66,0.801,68,0.801,70,0.085,71,0.307,72,0.424,73,1.195,74,2.22,80,2.375,81,2.441,82,2.137,86,1.886,92,2.375,94,1.195,96,1.849,97,2.086,98,2.013,103,1.11,104,0.739,106,1.947,116,1.11,117,1.11,118,2.042,119,1.11,120,1.11,121,1.11,122,1.11,123,2.492,125,2.666,126,0.91,129,0.999,130,2.77,131,2.492,132,0.836,133,1.11,134,2.137,136,2.492,137,2.492,142,1.867,163,2.312,168,0.854,172,0.481,176,1.849,180,1.11,182,2.375,194,1.11,205,1.11,206,2.137,207,2.375,212,2.77,230,1.849,233,2.375,234,1.11,236,0.999,238,2.77,252,0.009,253,0.009,260,0.35,265,0.966,267,0.452,268,0.752,269,0.513,270,0.513,271,0.513,273,0.481,276,0.452,277,0.452,278,0.452,282,1.462,283,1.462,286,1.697,293,0.513,294,0.854,295,0.854,296,0.513,297,1.279,298,0.513,299,0.513,300,0.398,301,0.854,302,0.452,303,0.513,304,0.513,305,0.513,306,0.452,307,0.513,308,0.513,309,1.127,310,0.513,311,0.513,312,0.513,313,0.513,314,0.513,315,1.127,316,1.187,317,0.481,318,0.513,322,0.972,324,1.79,325,1.79,326,1.79,332,0.972,337,1.654,341,0.718,347,0.706,365,1.614,392,1.626,395,0.836,396,0.999,405,1.664,427,0.999,440,2.097,525,3.076,562,2.694,563,2.694,573,2.097,579,1.664,592,1.849,601,2.694,603,1.259,604,1.259,621,1.259,669,1.664,694,1.849,695,2.097,717,2.271,802,1.259,806,1.259,811,1.259,812,2.097,852,1.849,857,1.849,965,2.097,966,1.259,985,1.259,986,3.178,987,3.178,988,2.473,989,2.473,990,3.178,991,3.178,992,3.178,993,3.178,994,3.178,995,3.705,996,2.473,997,3.705,998,3.705,999,2.473,1000,2.473,1001,2.473,1002,3.705,1003,3.705,1004,1.485,1005,3.169,1006,3.169,1007,2.473,1008,1.485,1009,2.473,1010,1.485,1011,1.485,1012,1.485,1013,1.485,1014,1.485,1015,2.473,1016,1.485,1017,2.473,1018,1.485,1019,2.473,1020,1.485,1021,2.473,1022,1.485,1023,2.473,1024,1.485,1025,1.485,1026,1.485,1027,1.485,1028,1.485,1029,1.485,1030,1.485,1031,1.485,1032,1.485,1033,1.485,1034,1.485,1035,1.485,1036,1.485,1037,1.485,1038,1.485,1039,1.485,1040,1.485,1041,1.485,1042,1.485,1043,1.485,1044,1.485,1045,4.115,1046,1.485,1047,1.485,1048,1.485,1049,3.767,1050,1.485,1051,1.485,1052,1.485,1053,1.485,1054,1.485,1055,1.485,1056,3.705,1057,1.485,1058,1.485,1059,1.485,1060,1.485,1061,1.485,1062,1.485,1063,1.485,1064,1.485,1065,1.485,1066,1.485,1067,2.473,1068,1.485,1069,1.485,1070,1.485,1071,1.485,1072,3.178,1073,3.178,1074,3.178,1075,2.473,1076,2.473,1077,1.485,1078,1.485,1079,1.485,1080,1.485,1081,1.485,1082,1.485,1083,1.485,1084,1.485,1085,1.485,1086,1.485,1087,2.473,1088,2.473,1089,2.473,1090,1.485,1091,1.485,1092,3.178,1093,1.485,1094,3.178,1095,1.485,1096,1.485,1097,1.485,1098,1.485,1099,1.485,1100,1.485,1101,1.485,1102,1.485,1103,1.485,1104,1.485,1105,2.473,1106,3.705,1107,3.141,1108,3.705,1109,2.473,1110,2.473,1111,1.485,1112,1.485,1113,1.485,1114,1.485,1115,1.485,1116,1.485]],["title/injectables/UserService.html",[457,1.18,1005,2.3]],["body/injectables/UserService.html",[3,0.207,4,0.177,5,0.177,7,0.302,8,0.595,9,1.133,12,0.478,13,0.025,14,1.18,17,0.698,27,3.035,29,1.52,30,2.218,59,0.684,70,0.207,71,0.747,74,2.303,94,1.748,104,0.908,118,2.25,252,0.017,253,0.017,258,2.648,274,1.883,282,1.033,283,1.033,286,1.722,300,1.301,316,1.176,322,2.303,332,2.303,333,2.636,347,1.386,365,1.744,392,2.172,419,2.218,455,1.883,457,1.677,458,3.59,459,1.883,465,2.705,468,3.267,472,3.687,488,2.434,489,2.037,511,2.434,744,4.117,746,4.117,747,4.117,749,4.117,757,4.117,759,4.117,761,3.068,762,4.117,766,4.117,778,3.068,779,3.068,804,3.068,810,3.068,815,3.068,1005,3.267,1049,4.117,1117,3.068,1118,4.857,1119,4.857,1120,3.619,1121,3.619,1122,3.619,1123,3.619,1124,3.619,1125,3.619,1126,3.619]],["title/injectables/UserValidator.html",[457,1.18,1006,2.3]],["body/injectables/UserValidator.html",[3,0.163,4,0.139,5,0.139,7,0.238,8,0.504,9,0.951,12,0.434,13,0.025,14,0.931,17,0.55,25,4.283,26,1.482,59,0.573,60,3.551,64,1.292,70,0.163,71,0.588,74,2.635,86,2.309,104,0.762,106,2.955,118,2.472,127,1.915,142,2.026,148,4.283,252,0.014,253,0.014,260,0.968,274,1.482,282,1.376,283,1.841,286,1.611,316,0.74,322,1.119,324,1.376,325,2.33,326,1.376,332,1.119,347,1.173,365,1.507,383,2.764,392,1.823,395,2.314,397,2.955,457,1.419,459,1.482,489,1.603,502,3.484,669,3.551,717,2.518,741,4.689,795,2.128,851,4.088,852,3.072,857,3.072,875,3.484,878,3.484,883,4.088,884,4.088,885,3.484,886,3.484,887,3.484,888,3.484,889,3.484,907,2.414,908,4.088,909,3.484,910,2.414,912,3.484,913,2.414,915,4.088,916,2.414,921,3.484,923,2.414,930,2.414,944,2.414,1006,2.764,1107,3.484,1127,2.414,1128,4.822,1129,4.822,1130,4.11,1131,4.11,1132,4.11,1133,2.847,1134,4.11,1135,2.847,1136,4.11,1137,2.847,1138,4.11,1139,2.847,1140,2.847,1141,2.847,1142,4.11,1143,4.11,1144,2.847,1145,4.11,1146,4.822,1147,2.847,1148,2.847,1149,2.847,1150,2.847,1151,2.847,1152,2.847,1153,4.822,1154,2.847,1155,2.847,1156,2.847,1157,2.847,1158,2.847,1159,2.847,1160,2.847,1161,2.847,1162,2.847]],["title/coverage.html",[1163,3.962]],["body/coverage.html",[0,0.572,1,2.301,5,0.167,6,3.495,12,0.254,13,0.025,15,0.761,35,0.976,37,2.096,39,0.976,41,2.096,42,0.976,44,1.437,45,2.096,47,1.78,49,0.976,51,1.437,52,1.437,53,2.096,56,2.096,72,0.976,76,1.344,109,4.03,252,0.016,253,0.016,254,2.557,255,2.9,256,3.495,267,1.04,272,2.9,276,1.04,277,1.04,278,1.04,302,1.04,306,1.04,309,1.04,315,1.04,316,0.616,319,3.508,321,1.78,322,1.344,323,3.22,332,1.344,333,1.539,335,1.652,340,1.652,342,2.9,343,3.495,385,2.096,387,2.9,388,2.9,407,2.9,408,2.9,409,2.9,434,2.9,443,2.9,455,1.78,456,3.495,457,2.136,458,2.096,460,2.9,484,2.557,486,2.301,509,2.9,515,2.9,519,2.9,526,2.9,542,2.096,560,2.9,740,2.9,846,2.9,945,2.9,949,2.9,957,2.9,967,2.9,968,2.9,985,2.9,1005,2.301,1006,2.301,1117,2.9,1127,2.9,1163,2.9,1164,3.42,1165,3.42,1166,3.42,1167,4.675,1168,2.9,1169,4.675,1170,2.9,1171,6.334,1172,5.725,1173,2.9,1174,3.42,1175,6.334,1176,5.326,1177,4.675,1178,5.326,1179,3.42,1180,3.42,1181,3.42,1182,5.326,1183,3.42,1184,3.42,1185,3.42]],["title/dependencies.html",[1186,2.418,1187,3.488]],["body/dependencies.html",[13,0.025,17,0.983,19,2.14,26,2.651,29,2.14,252,0.021,253,0.021,288,3.426,1187,4.318,1188,5.093,1189,6.99,1190,5.093,1191,6.028,1192,5.11,1193,5.093,1194,5.093,1195,5.093,1196,5.093,1197,5.093,1198,5.093]],["title/index.html",[7,0.238,1199,2.852,1200,2.852]],["body/index.html",[4,0.199,13,0.018,15,0.653,76,1.602,252,0.018,253,0.018,265,1.24,268,1.24,282,1.499,284,3.456,317,1.321,386,3.456,959,3.456,1192,3.456,1201,4.077,1202,5.812,1203,4.077,1204,5.253,1205,6.352,1206,6.352,1207,3.456,1208,4.077,1209,5.253,1210,5.812,1211,4.077,1212,4.077,1213,6.352,1214,6.504,1215,6.504,1216,4.077,1217,5.253,1218,4.077,1219,4.077,1220,4.077,1221,5.253,1222,4.077,1223,4.077,1224,4.077,1225,4.077,1226,4.077,1227,5.253,1228,5.253,1229,4.077,1230,4.077,1231,4.077,1232,5.812,1233,4.077,1234,4.077,1235,4.077,1236,4.077,1237,4.077,1238,4.077,1239,5.812,1240,4.077,1241,4.077,1242,4.077,1243,4.077,1244,4.077,1245,4.077,1246,3.456,1247,4.077,1248,4.077,1249,4.077,1250,5.253,1251,5.812,1252,4.077,1253,4.077,1254,4.077,1255,4.077,1256,4.077,1257,4.077,1258,5.812,1259,4.077,1260,6.504,1261,4.077,1262,5.253,1263,4.077,1264,4.077,1265,4.077,1266,4.077,1267,4.077,1268,4.077,1269,4.077,1270,4.077,1271,4.077,1272,4.077,1273,4.077,1274,4.077,1275,4.077,1276,4.077,1277,4.077,1278,3.047,1279,4.077,1280,4.077]],["title/modules.html",[1281,3.962]],["body/modules.html",[13,0.022,252,0.022,253,0.022,1281,4.726]],["title/overview.html",[1278,3.494]],["body/overview.html",[2,1.558,13,0.022,252,0.022,253,0.022,268,1.66,385,3.346,459,2.841,592,4.081,1278,4.081,1282,5.46,1283,5.46,1284,5.46]],["title/properties.html",[8,0.504,1186,2.418]],["body/properties.html",[8,0.678,13,0.023,252,0.022,253,0.022,1207,4.689,1285,5.531]],["title/miscellaneous/variables.html",[1286,2.418,1287,3.488]],["body/miscellaneous/variables.html",[7,0.422,12,0.447,13,0.025,64,1.355,81,2.275,252,0.021,253,0.021,282,1.713,283,1.713,484,4.487,1168,4.287,1170,5.089,1173,4.287,1246,4.287,1286,4.287,1287,4.287,1288,5.057,1289,5.057,1290,5.057,1291,5.057,1292,5.057,1293,5.057,1294,5.057,1295,5.057,1296,5.057,1297,5.057,1298,5.057]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"interfaces/CreateProductDto.html":{},"interfaces/CreateUserDto.html":{},"components/DeleteModalComponent.html":{},"pipes/FcfaCurrencyPipe.html":{},"interfaces/FindProductDto.html":{},"interfaces/FindUserDto.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"interfaces/HttpResponse.html":{},"injectables/HttpService.html":{},"interfaces/IHttpService.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"injectables/NotificationService.html":{},"interfaces/PaginatedResponse.html":{},"components/PaginationComponent.html":{},"interfaces/PaginationInfo.html":{},"interfaces/Product.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"interfaces/UpdateProductDto.html":{},"interfaces/UpdateUserDto.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"injectables/UserValidator.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":109,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/NotificationService.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"injectables/ProductValidator.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1285,"title":{},"body":{"properties.html":{}}}],["0.15.0",{"_index":1198,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1171,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1183,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1177,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1184,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1167,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":1179,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1181,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":1174,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1172,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1175,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1176,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1180,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1178,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1182,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":592,"title":{},"body":{"components/PaginationComponent.html":{},"components/UserComponent.html":{},"overview.html":{}}}],["10",{"_index":579,"title":{},"body":{"components/PaginationComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{},"components/UserComponent.html":{}}}],["100",{"_index":914,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["10000000",{"_index":869,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["1024",{"_index":776,"title":{},"body":{"injectables/ProductService.html":{},"injectables/ProductValidator.html":{}}}],["10mb",{"_index":882,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["13",{"_index":1282,"title":{},"body":{"overview.html":{}}}],["15",{"_index":1284,"title":{},"body":{"overview.html":{}}}],["19.1.0",{"_index":1189,"title":{},"body":{"dependencies.html":{}}}],["19.1.6",{"_index":1208,"title":{},"body":{"index.html":{}}}],["2",{"_index":397,"title":{},"body":{"pipes/FcfaCurrencyPipe.html":{},"components/PaginationComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{},"injectables/UserValidator.html":{}}}],["2,50",{"_index":1143,"title":{},"body":{"injectables/UserValidator.html":{}}}],["2.3.0",{"_index":1196,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":502,"title":{},"body":{"injectables/HttpService.html":{},"injectables/UserValidator.html":{}}}],["201",{"_index":506,"title":{},"body":{"injectables/HttpService.html":{}}}],["2025",{"_index":439,"title":{},"body":{"components/FooterComponent.html":{}}}],["2500",{"_index":431,"title":{},"body":{"components/FlashScreenComponent.html":{}}}],["3",{"_index":640,"title":{},"body":{"components/PaginationComponent.html":{}}}],["3000",{"_index":544,"title":{},"body":{"injectables/NotificationService.html":{}}}],["5",{"_index":637,"title":{},"body":{"components/PaginationComponent.html":{}}}],["50",{"_index":1151,"title":{},"body":{"injectables/UserValidator.html":{}}}],["500",{"_index":430,"title":{},"body":{"components/FlashScreenComponent.html":{}}}],["5000",{"_index":966,"title":{},"body":{"components/SkeletonComponent.html":{},"components/UserComponent.html":{}}}],["5mb",{"_index":780,"title":{},"body":{"injectables/ProductService.html":{}}}],["6",{"_index":1283,"title":{},"body":{"overview.html":{}}}],["600",{"_index":701,"title":{},"body":{"components/ProductComponent.html":{}}}],["7.8.0",{"_index":1194,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":877,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["999999",{"_index":871,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["_]{2,100",{"_index":879,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["_id",{"_index":320,"title":{},"body":{"interfaces/CreateProductDto.html":{},"interfaces/CreateUserDto.html":{},"interfaces/FindProductDto.html":{},"interfaces/FindUserDto.html":{},"interfaces/PaginatedResponse.html":{},"interfaces/PaginationInfo.html":{},"interfaces/Product.html":{},"interfaces/UpdateProductDto.html":{},"interfaces/UpdateUserDto.html":{},"interfaces/User.html":{}}}],["a._id",{"_index":1055,"title":{},"body":{"components/UserComponent.html":{}}}],["abstractcontrol",{"_index":25,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"injectables/ProductValidator.html":{},"injectables/UserValidator.html":{}}}],["action",{"_index":382,"title":{},"body":{"components/DeleteModalComponent.html":{}}}],["actions",{"_index":1109,"title":{},"body":{"components/UserComponent.html":{}}}],["actual",{"_index":896,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["actual_component",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{}}}],["actuallength",{"_index":1149,"title":{},"body":{"injectables/UserValidator.html":{}}}],["actualvalue",{"_index":889,"title":{},"body":{"injectables/ProductValidator.html":{},"injectables/UserValidator.html":{}}}],["actuelle",{"_index":607,"title":{},"body":{"components/PaginationComponent.html":{}}}],["actuels",{"_index":634,"title":{},"body":{"components/PaginationComponent.html":{}}}],["additional",{"_index":1270,"title":{},"body":{"index.html":{}}}],["address",{"_index":324,"title":{},"body":{"interfaces/CreateUserDto.html":{},"interfaces/FindUserDto.html":{},"interfaces/PaginatedResponse.html":{},"interfaces/PaginationInfo.html":{},"interfaces/UpdateUserDto.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"injectables/UserValidator.html":{}}}],["address_max_length",{"_index":1128,"title":{},"body":{"injectables/UserValidator.html":{}}}],["address_min_length",{"_index":1129,"title":{},"body":{"injectables/UserValidator.html":{}}}],["adresse",{"_index":1108,"title":{},"body":{"components/UserComponent.html":{}}}],["affich",{"_index":424,"title":{},"body":{"components/FlashScreenComponent.html":{}}}],["affichage",{"_index":652,"title":{},"body":{"components/PaginationComponent.html":{}}}],["ajout",{"_index":211,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"components/SkeletonComponent.html":{}}}],["ajouter",{"_index":405,"title":{},"body":{"pipes/FcfaCurrencyPipe.html":{},"components/FormModalComponent.html":{},"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["allitems",{"_index":576,"title":{},"body":{"components/PaginationComponent.html":{}}}],["allowed_file_types",{"_index":742,"title":{},"body":{"injectables/ProductService.html":{},"injectables/ProductValidator.html":{}}}],["allowedtypes",{"_index":902,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["allusers",{"_index":990,"title":{},"body":{"components/UserComponent.html":{}}}],["angular",{"_index":1205,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1188,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":19,"title":{},"body":{"interfaces/ApiError.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FormModalComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":483,"title":{},"body":{"injectables/HttpService.html":{}}}],["angular/compiler",{"_index":1190,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":17,"title":{},"body":{"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"pipes/FcfaCurrencyPipe.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"injectables/HttpService.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"injectables/NotificationService.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"injectables/UserValidator.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":26,"title":{},"body":{"interfaces/ApiError.html":{},"components/FormModalComponent.html":{},"components/ProductComponent.html":{},"injectables/ProductValidator.html":{},"components/UserComponent.html":{},"injectables/UserValidator.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1191,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":288,"title":{},"body":{"components/AppComponent.html":{},"components/FlashScreenComponent.html":{},"components/NavbarComponent.html":{},"dependencies.html":{}}}],["apierror",{"_index":1,"title":{"interfaces/ApiError.html":{}},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"coverage.html":{}}}],["apierror.error.errors.join",{"_index":222,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["apierror.error.errors.length",{"_index":221,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["apierror.error.message",{"_index":224,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["apierror.error?.errors",{"_index":220,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["apierror.error?.message",{"_index":223,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["apiresponse",{"_index":254,"title":{"interfaces/ApiResponse.html":{}},"body":{"interfaces/ApiResponse.html":{},"coverage.html":{}}}],["apiurl",{"_index":1297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":62,"title":{},"body":{"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{}}}],["app.component.css",{"_index":280,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":279,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":267,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1170,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appelée",{"_index":1061,"title":{},"body":{"components/UserComponent.html":{}}}],["application",{"_index":1221,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":497,"title":{},"body":{"injectables/HttpService.html":{}}}],["applicationconfig",{"_index":1290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array.isarray(response",{"_index":122,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["artifacts",{"_index":1243,"title":{},"body":{"index.html":{}}}],["async",{"_index":185,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"components/ToastComponent.html":{}}}],["asyncpipe",{"_index":987,"title":{},"body":{"components/UserComponent.html":{}}}],["au",{"_index":1156,"title":{},"body":{"injectables/UserValidator.html":{}}}],["aucun",{"_index":695,"title":{},"body":{"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["automatically",{"_index":1222,"title":{},"body":{"index.html":{}}}],["automatiquement",{"_index":494,"title":{},"body":{"injectables/HttpService.html":{}}}],["autorisés",{"_index":920,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["available",{"_index":1235,"title":{},"body":{"index.html":{}}}],["avec",{"_index":206,"title":{},"body":{"interfaces/ApiError.html":{},"pipes/FcfaCurrencyPipe.html":{},"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["await",{"_index":201,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["b",{"_index":1054,"title":{},"body":{"components/UserComponent.html":{}}}],["b._id",{"_index":1057,"title":{},"body":{"components/UserComponent.html":{}}}],["b._id.localecompare(a._id",{"_index":1058,"title":{},"body":{"components/UserComponent.html":{}}}],["baba",{"_index":432,"title":{},"body":{"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/NavbarComponent.html":{}}}],["baseurl",{"_index":461,"title":{},"body":{"injectables/HttpService.html":{}}}],["behaviorsubject",{"_index":28,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/NotificationService.html":{},"components/ProductComponent.html":{}}}],["boolean",{"_index":168,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/CreateUserDto.html":{},"components/DeleteModalComponent.html":{},"interfaces/FindUserDto.html":{},"components/FormModalComponent.html":{},"interfaces/PaginatedResponse.html":{},"interfaces/PaginationInfo.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"components/SkeletonComponent.html":{},"interfaces/UpdateUserDto.html":{},"interfaces/User.html":{},"components/UserComponent.html":{}}}],["break",{"_index":921,"title":{},"body":{"injectables/ProductValidator.html":{},"injectables/UserValidator.html":{}}}],["browser",{"_index":1192,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["build",{"_index":1239,"title":{},"body":{"index.html":{}}}],["buildthis",{"_index":1240,"title":{},"body":{"index.html":{}}}],["calculateitemrange",{"_index":570,"title":{},"body":{"components/PaginationComponent.html":{}}}],["calculatevisiblepages",{"_index":571,"title":{},"body":{"components/PaginationComponent.html":{}}}],["calculer",{"_index":627,"title":{},"body":{"components/PaginationComponent.html":{}}}],["caractères",{"_index":915,"title":{},"body":{"injectables/ProductValidator.html":{},"injectables/UserValidator.html":{}}}],["card",{"_index":956,"title":{},"body":{"components/SkeletonComponent.html":{}}}],["case",{"_index":908,"title":{},"body":{"injectables/ProductValidator.html":{},"injectables/UserValidator.html":{}}}],["catch",{"_index":214,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{}}}],["catcherror",{"_index":31,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"components/UserComponent.html":{}}}],["catcherror(error",{"_index":129,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"components/UserComponent.html":{}}}],["ce",{"_index":378,"title":{},"body":{"components/DeleteModalComponent.html":{}}}],["cet",{"_index":379,"title":{},"body":{"components/DeleteModalComponent.html":{}}}],["cette",{"_index":381,"title":{},"body":{"components/DeleteModalComponent.html":{}}}],["champ",{"_index":944,"title":{},"body":{"injectables/ProductValidator.html":{},"injectables/UserValidator.html":{}}}],["champs",{"_index":1078,"title":{},"body":{"components/UserComponent.html":{}}}],["change",{"_index":1063,"title":{},"body":{"components/UserComponent.html":{}}}],["changent",{"_index":619,"title":{},"body":{"components/PaginationComponent.html":{}}}],["changer",{"_index":713,"title":{},"body":{"components/ProductComponent.html":{}}}],["changes",{"_index":587,"title":{},"body":{"components/PaginationComponent.html":{}}}],["changes['allitems",{"_index":608,"title":{},"body":{"components/PaginationComponent.html":{}}}],["changes['limit",{"_index":609,"title":{},"body":{"components/PaginationComponent.html":{}}}],["chargement",{"_index":133,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["chec",{"_index":820,"title":{},"body":{"injectables/ProductService.html":{}}}],["chiffres",{"_index":917,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["choose",{"_index":1266,"title":{},"body":{"index.html":{}}}],["class",{"_index":71,"title":{},"body":{"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"pipes/FcfaCurrencyPipe.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"injectables/HttpService.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"injectables/NotificationService.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"injectables/UserValidator.html":{}}}],["class=\"font",{"_index":703,"title":{},"body":{"components/ProductComponent.html":{}}}],["cli",{"_index":1206,"title":{},"body":{"index.html":{}}}],["cliquez",{"_index":708,"title":{},"body":{"components/ProductComponent.html":{}}}],["close",{"_index":348,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/FormModalComponent.html":{}}}],["closedeletemodal",{"_index":237,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["closetoast",{"_index":971,"title":{},"body":{"components/ToastComponent.html":{}}}],["closetoast(id",{"_index":974,"title":{},"body":{"components/ToastComponent.html":{}}}],["code",{"_index":1227,"title":{},"body":{"index.html":{}}}],["come",{"_index":1264,"title":{},"body":{"index.html":{}}}],["command",{"_index":1258,"title":{},"body":{"index.html":{}}}],["comme",{"_index":1079,"title":{},"body":{"components/UserComponent.html":{}}}],["commonmodule",{"_index":18,"title":{},"body":{"interfaces/ApiError.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FormModalComponent.html":{},"components/ProductComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{}}}],["compile",{"_index":1241,"title":{},"body":{"index.html":{}}}],["complete",{"_index":1234,"title":{},"body":{"index.html":{}}}],["component",{"_index":15,"title":{"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{}},"body":{"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"index.html":{}}}],["component,eventemitter",{"_index":452,"title":{},"body":{"components/FormModalComponent.html":{}}}],["component/footer/footer.component",{"_index":290,"title":{},"body":{"components/AppComponent.html":{}}}],["component/navbar/navbar.component",{"_index":291,"title":{},"body":{"components/AppComponent.html":{}}}],["component/sidebar/sidebar.component",{"_index":289,"title":{},"body":{"components/AppComponent.html":{}}}],["component_template",{"_index":298,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{}}}],["components",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{},"index.html":{},"overview.html":{}}}],["composant",{"_index":1064,"title":{},"body":{"components/UserComponent.html":{}}}],["confirm",{"_index":349,"title":{},"body":{"components/DeleteModalComponent.html":{}}}],["confirmer",{"_index":372,"title":{},"body":{"components/DeleteModalComponent.html":{}}}],["console.error('erreur",{"_index":235,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["console.error('error",{"_index":136,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"components/UserComponent.html":{}}}],["console.error('format",{"_index":124,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["console.error('impossible",{"_index":1050,"title":{},"body":{"components/UserComponent.html":{}}}],["console.error('validation",{"_index":819,"title":{},"body":{"injectables/ProductService.html":{}}}],["console.log('ajout",{"_index":831,"title":{},"body":{"injectables/ProductService.html":{}}}],["console.log('création",{"_index":797,"title":{},"body":{"injectables/ProductService.html":{}}}],["console.log('formdata",{"_index":801,"title":{},"body":{"injectables/ProductService.html":{}}}],["console.log('mise",{"_index":808,"title":{},"body":{"injectables/ProductService.html":{}}}],["console.log('response",{"_index":1047,"title":{},"body":{"components/UserComponent.html":{}}}],["console.log('validation",{"_index":816,"title":{},"body":{"injectables/ProductService.html":{}}}],["const",{"_index":142,"title":{},"body":{"interfaces/ApiError.html":{},"pipes/FcfaCurrencyPipe.html":{},"injectables/HttpService.html":{},"injectables/NotificationService.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{},"components/UserComponent.html":{},"injectables/UserValidator.html":{}}}],["constructor",{"_index":94,"title":{},"body":{"interfaces/ApiError.html":{},"components/FlashScreenComponent.html":{},"injectables/HttpService.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["constructor(fb",{"_index":1004,"title":{},"body":{"components/UserComponent.html":{}}}],["constructor(http",{"_index":465,"title":{},"body":{"injectables/HttpService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["constructor(notificationservice",{"_index":972,"title":{},"body":{"components/ToastComponent.html":{}}}],["constructor(private",{"_index":419,"title":{},"body":{"components/FlashScreenComponent.html":{},"injectables/HttpService.html":{},"injectables/ProductService.html":{},"components/ToastComponent.html":{},"injectables/UserService.html":{}}}],["constructor(productservice",{"_index":663,"title":{},"body":{"components/ProductComponent.html":{}}}],["constructor(router",{"_index":414,"title":{},"body":{"components/FlashScreenComponent.html":{}}}],["containerclass",{"_index":953,"title":{},"body":{"components/SkeletonComponent.html":{}}}],["contenir",{"_index":1155,"title":{},"body":{"injectables/UserValidator.html":{}}}],["content",{"_index":496,"title":{},"body":{"injectables/HttpService.html":{}}}],["control",{"_index":106,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"injectables/ProductValidator.html":{},"components/UserComponent.html":{},"injectables/UserValidator.html":{}}}],["control.errors",{"_index":180,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["control.value",{"_index":883,"title":{},"body":{"injectables/ProductValidator.html":{},"injectables/UserValidator.html":{}}}],["control?.errors",{"_index":1103,"title":{},"body":{"components/UserComponent.html":{}}}],["control?.invalid",{"_index":177,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["control?.markastouched",{"_index":176,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["control?.updatevalueandvalidity",{"_index":1076,"title":{},"body":{"components/UserComponent.html":{}}}],["correct",{"_index":814,"title":{},"body":{"injectables/ProductService.html":{}}}],["courante",{"_index":1039,"title":{},"body":{"components/UserComponent.html":{}}}],["coverage",{"_index":1163,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cr",{"_index":802,"title":{},"body":{"injectables/ProductService.html":{},"components/UserComponent.html":{}}}],["create",{"_index":744,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["create(productdata",{"_index":752,"title":{},"body":{"injectables/ProductService.html":{}}}],["create(user",{"_index":1119,"title":{},"body":{"injectables/UserService.html":{}}}],["createdat",{"_index":328,"title":{},"body":{"interfaces/CreateUserDto.html":{},"interfaces/FindUserDto.html":{},"interfaces/PaginatedResponse.html":{},"interfaces/PaginationInfo.html":{},"interfaces/UpdateUserDto.html":{},"interfaces/User.html":{}}}],["createdata",{"_index":208,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["createdto",{"_index":1095,"title":{},"body":{"components/UserComponent.html":{}}}],["createformdata",{"_index":745,"title":{},"body":{"injectables/ProductService.html":{}}}],["createformdata(data",{"_index":755,"title":{},"body":{"injectables/ProductService.html":{}}}],["createproductdto",{"_index":51,"title":{"interfaces/CreateProductDto.html":{}},"body":{"interfaces/ApiError.html":{},"interfaces/CreateProductDto.html":{},"interfaces/FindProductDto.html":{},"interfaces/Product.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{},"interfaces/UpdateProductDto.html":{},"coverage.html":{}}}],["createuserdto",{"_index":322,"title":{"interfaces/CreateUserDto.html":{}},"body":{"interfaces/CreateUserDto.html":{},"interfaces/FindUserDto.html":{},"interfaces/PaginatedResponse.html":{},"interfaces/PaginationInfo.html":{},"interfaces/UpdateUserDto.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"injectables/UserValidator.html":{},"coverage.html":{}}}],["createuserform",{"_index":995,"title":{},"body":{"components/UserComponent.html":{}}}],["creating",{"_index":806,"title":{},"body":{"injectables/ProductService.html":{},"components/UserComponent.html":{}}}],["crypto.randomuuid",{"_index":503,"title":{},"body":{"injectables/HttpService.html":{}}}],["création",{"_index":1098,"title":{},"body":{"components/UserComponent.html":{}}}],["currency.pipe",{"_index":55,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["currency.pipe.ts",{"_index":388,"title":{},"body":{"pipes/FcfaCurrencyPipe.html":{},"coverage.html":{}}}],["currency.pipe.ts:8",{"_index":391,"title":{},"body":{"pipes/FcfaCurrencyPipe.html":{}}}],["currententity",{"_index":445,"title":{},"body":{"components/FormModalComponent.html":{}}}],["currentpage",{"_index":339,"title":{},"body":{"interfaces/CreateUserDto.html":{},"interfaces/FindUserDto.html":{},"interfaces/PaginatedResponse.html":{},"components/PaginationComponent.html":{},"interfaces/PaginationInfo.html":{},"interfaces/UpdateUserDto.html":{},"interfaces/User.html":{}}}],["currentpageitems",{"_index":566,"title":{},"body":{"components/PaginationComponent.html":{}}}],["currentproduct",{"_index":83,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["custom",{"_index":961,"title":{},"body":{"components/SkeletonComponent.html":{}}}],["d'éléments",{"_index":603,"title":{},"body":{"components/PaginationComponent.html":{},"components/UserComponent.html":{}}}],["dans",{"_index":812,"title":{},"body":{"injectables/ProductService.html":{},"components/UserComponent.html":{}}}],["data",{"_index":257,"title":{},"body":{"interfaces/ApiResponse.html":{},"interfaces/CreateUserDto.html":{},"interfaces/FindUserDto.html":{},"interfaces/HttpResponse.html":{},"injectables/HttpService.html":{},"interfaces/IHttpService.html":{},"interfaces/PaginatedResponse.html":{},"interfaces/PaginationInfo.html":{},"injectables/ProductService.html":{},"interfaces/UpdateUserDto.html":{},"interfaces/User.html":{}}}],["data.image",{"_index":838,"title":{},"body":{"injectables/ProductService.html":{}}}],["data.image.name",{"_index":839,"title":{},"body":{"injectables/ProductService.html":{}}}],["data.name",{"_index":817,"title":{},"body":{"injectables/ProductService.html":{}}}],["data.name.trim",{"_index":818,"title":{},"body":{"injectables/ProductService.html":{}}}],["data.price",{"_index":824,"title":{},"body":{"injectables/ProductService.html":{}}}],["data.price.tostring",{"_index":834,"title":{},"body":{"injectables/ProductService.html":{}}}],["data.quantity",{"_index":835,"title":{},"body":{"injectables/ProductService.html":{}}}],["data.quantity.tostring",{"_index":837,"title":{},"body":{"injectables/ProductService.html":{}}}],["date",{"_index":329,"title":{},"body":{"interfaces/CreateUserDto.html":{},"interfaces/FindUserDto.html":{},"interfaces/PaginatedResponse.html":{},"interfaces/PaginationInfo.html":{},"interfaces/UpdateUserDto.html":{},"interfaces/User.html":{}}}],["date.now().tostring",{"_index":553,"title":{},"body":{"injectables/NotificationService.html":{}}}],["de",{"_index":125,"title":{},"body":{"interfaces/ApiError.html":{},"components/DeleteModalComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{},"components/UserComponent.html":{}}}],["default",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FormModalComponent.html":{},"injectables/HttpService.html":{},"injectables/NotificationService.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{},"components/SkeletonComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"injectables/UserValidator.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":286,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"pipes/FcfaCurrencyPipe.html":{},"components/FlashScreenComponent.html":{},"components/FormModalComponent.html":{},"injectables/HttpService.html":{},"interfaces/IHttpService.html":{},"injectables/NotificationService.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"injectables/UserValidator.html":{}}}],["delay",{"_index":33,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["delay(800",{"_index":128,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["delete",{"_index":300,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"injectables/HttpService.html":{},"interfaces/IHttpService.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["delete(endpoint",{"_index":469,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/IHttpService.html":{}}}],["delete(id",{"_index":757,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["deletedat",{"_index":331,"title":{},"body":{"interfaces/CreateUserDto.html":{},"interfaces/FindUserDto.html":{},"interfaces/PaginatedResponse.html":{},"interfaces/PaginationInfo.html":{},"interfaces/UpdateUserDto.html":{},"interfaces/User.html":{}}}],["deletemodalcomponent",{"_index":39,"title":{"components/DeleteModalComponent.html":{}},"body":{"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{},"coverage.html":{}}}],["deleteproduct",{"_index":656,"title":{},"body":{"components/ProductComponent.html":{}}}],["deleteproduct(product",{"_index":231,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["deleteuser",{"_index":996,"title":{},"body":{"components/UserComponent.html":{}}}],["deleteuser(user",{"_index":1009,"title":{},"body":{"components/UserComponent.html":{}}}],["deleting",{"_index":1101,"title":{},"body":{"components/UserComponent.html":{}}}],["dependencies",{"_index":1187,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["des",{"_index":134,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"components/UserComponent.html":{}}}],["detailed",{"_index":1275,"title":{},"body":{"index.html":{}}}],["development",{"_index":1209,"title":{},"body":{"index.html":{}}}],["directive",{"_index":296,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{}}}],["directives",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{},"index.html":{}}}],["directory",{"_index":1245,"title":{},"body":{"index.html":{}}}],["displayedusers",{"_index":991,"title":{},"body":{"components/UserComponent.html":{}}}],["disponible",{"_index":696,"title":{},"body":{"components/ProductComponent.html":{}}}],["dist",{"_index":1244,"title":{},"body":{"index.html":{}}}],["diter",{"_index":1070,"title":{},"body":{"components/UserComponent.html":{}}}],["documentation",{"_index":1164,"title":{},"body":{"coverage.html":{}}}],["doit",{"_index":923,"title":{},"body":{"injectables/ProductValidator.html":{},"injectables/UserValidator.html":{}}}],["dom",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{}}}],["données",{"_index":126,"title":{},"body":{"interfaces/ApiError.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"components/UserComponent.html":{}}}],["droits",{"_index":441,"title":{},"body":{"components/FooterComponent.html":{}}}],["du",{"_index":132,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{},"components/SkeletonComponent.html":{},"components/UserComponent.html":{}}}],["duration",{"_index":534,"title":{},"body":{"injectables/NotificationService.html":{},"interfaces/Toast.html":{}}}],["dynamic",{"_index":1193,"title":{},"body":{"dependencies.html":{}}}],["décimales",{"_index":398,"title":{},"body":{"pipes/FcfaCurrencyPipe.html":{}}}],["décorateur",{"_index":964,"title":{},"body":{"components/SkeletonComponent.html":{}}}],["déj",{"_index":423,"title":{},"body":{"components/FlashScreenComponent.html":{}}}],["dépasser",{"_index":1162,"title":{},"body":{"injectables/UserValidator.html":{}}}],["déposez",{"_index":710,"title":{},"body":{"components/ProductComponent.html":{}}}],["e",{"_index":159,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["e.target?.result",{"_index":160,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["e2e",{"_index":1261,"title":{},"body":{"index.html":{}}}],["e2eangular",{"_index":1263,"title":{},"body":{"index.html":{}}}],["editproduct",{"_index":657,"title":{},"body":{"components/ProductComponent.html":{}}}],["editproduct(product",{"_index":239,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["element",{"_index":295,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{}}}],["en",{"_index":705,"title":{},"body":{"components/ProductComponent.html":{}}}],["end",{"_index":1260,"title":{},"body":{"index.html":{}}}],["endindex",{"_index":630,"title":{},"body":{"components/PaginationComponent.html":{}}}],["enditem",{"_index":567,"title":{},"body":{"components/PaginationComponent.html":{}}}],["endpoint",{"_index":472,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/IHttpService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["entier",{"_index":932,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["entityname",{"_index":351,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/FormModalComponent.html":{}}}],["entitypreview",{"_index":352,"title":{},"body":{"components/DeleteModalComponent.html":{}}}],["entitytodelete",{"_index":353,"title":{},"body":{"components/DeleteModalComponent.html":{}}}],["entries",{"_index":841,"title":{},"body":{"injectables/ProductService.html":{}}}],["entries[key",{"_index":843,"title":{},"body":{"injectables/ProductService.html":{}}}],["environment",{"_index":484,"title":{},"body":{"injectables/HttpService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":482,"title":{},"body":{"injectables/HttpService.html":{}}}],["environneemnt/environment",{"_index":485,"title":{},"body":{"injectables/HttpService.html":{}}}],["erreur",{"_index":217,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["error",{"_index":10,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/NotificationService.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"interfaces/Toast.html":{},"components/UserComponent.html":{}}}],["error('erreur",{"_index":791,"title":{},"body":{"injectables/ProductService.html":{}}}],["error('id",{"_index":794,"title":{},"body":{"injectables/ProductService.html":{}}}],["error('le",{"_index":823,"title":{},"body":{"injectables/ProductService.html":{}}}],["error(message",{"_index":533,"title":{},"body":{"injectables/NotificationService.html":{}}}],["errormessage",{"_index":216,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["errormessages",{"_index":189,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["errormessages.length",{"_index":191,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["errors",{"_index":60,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"injectables/ProductValidator.html":{},"injectables/UserValidator.html":{}}}],["errors['invalidtype",{"_index":935,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["errors['max",{"_index":928,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["errors['maxlength",{"_index":1159,"title":{},"body":{"injectables/UserValidator.html":{}}}],["errors['maxsize",{"_index":943,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["errors['min",{"_index":925,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["errors['minlength",{"_index":1154,"title":{},"body":{"injectables/UserValidator.html":{}}}],["errors['notaninteger",{"_index":931,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["errors['notanumber",{"_index":922,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["errors['pattern",{"_index":910,"title":{},"body":{"injectables/ProductValidator.html":{},"injectables/UserValidator.html":{}}}],["errors['required",{"_index":909,"title":{},"body":{"injectables/ProductValidator.html":{},"injectables/UserValidator.html":{}}}],["est",{"_index":383,"title":{},"body":{"components/DeleteModalComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{},"injectables/UserValidator.html":{}}}],["et",{"_index":918,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["event",{"_index":141,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["event.target",{"_index":144,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["eventcoalescing",{"_index":1293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":361,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/FormModalComponent.html":{},"components/PaginationComponent.html":{}}}],["example",{"_index":1214,"title":{},"body":{"index.html":{}}}],["execute",{"_index":1252,"title":{},"body":{"index.html":{}}}],["export",{"_index":70,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"interfaces/CreateProductDto.html":{},"interfaces/CreateUserDto.html":{},"components/DeleteModalComponent.html":{},"pipes/FcfaCurrencyPipe.html":{},"interfaces/FindProductDto.html":{},"interfaces/FindUserDto.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"interfaces/HttpResponse.html":{},"injectables/HttpService.html":{},"interfaces/IHttpService.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"injectables/NotificationService.html":{},"interfaces/PaginatedResponse.html":{},"components/PaginationComponent.html":{},"interfaces/PaginationInfo.html":{},"interfaces/Product.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"interfaces/UpdateProductDto.html":{},"interfaces/UpdateUserDto.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"injectables/UserValidator.html":{}}}],["fadeout",{"_index":413,"title":{},"body":{"components/FlashScreenComponent.html":{}}}],["false",{"_index":81,"title":{},"body":{"interfaces/ApiError.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FormModalComponent.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"components/SkeletonComponent.html":{},"components/UserComponent.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":96,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["fcfa",{"_index":54,"title":{},"body":{"interfaces/ApiError.html":{},"pipes/FcfaCurrencyPipe.html":{},"components/ProductComponent.html":{},"injectables/ProductValidator.html":{}}}],["fcfacurrencypipe",{"_index":53,"title":{"pipes/FcfaCurrencyPipe.html":{}},"body":{"interfaces/ApiError.html":{},"pipes/FcfaCurrencyPipe.html":{},"components/ProductComponent.html":{},"coverage.html":{}}}],["fetching",{"_index":790,"title":{},"body":{"injectables/ProductService.html":{}}}],["fichier",{"_index":165,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{}}}],["fieldname",{"_index":669,"title":{},"body":{"components/ProductComponent.html":{},"injectables/ProductValidator.html":{},"components/UserComponent.html":{},"injectables/UserValidator.html":{}}}],["fields",{"_index":173,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"interfaces/CreateProductDto.html":{},"interfaces/CreateUserDto.html":{},"components/DeleteModalComponent.html":{},"pipes/FcfaCurrencyPipe.html":{},"interfaces/FindProductDto.html":{},"interfaces/FindUserDto.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"interfaces/HttpResponse.html":{},"injectables/HttpService.html":{},"interfaces/IHttpService.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"injectables/NotificationService.html":{},"interfaces/PaginatedResponse.html":{},"components/PaginationComponent.html":{},"interfaces/PaginationInfo.html":{},"interfaces/Product.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"interfaces/UpdateProductDto.html":{},"interfaces/UpdateUserDto.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"injectables/UserValidator.html":{},"coverage.html":{}}}],["file.size",{"_index":905,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["file.type",{"_index":904,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["filereader",{"_index":157,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["files",{"_index":1226,"title":{},"body":{"index.html":{}}}],["filter",{"_index":761,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["fin",{"_index":639,"title":{},"body":{"components/PaginationComponent.html":{}}}],["finalize",{"_index":32,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["finaloptions",{"_index":499,"title":{},"body":{"injectables/HttpService.html":{}}}],["findproductdto",{"_index":321,"title":{"interfaces/FindProductDto.html":{}},"body":{"interfaces/CreateProductDto.html":{},"interfaces/FindProductDto.html":{},"interfaces/Product.html":{},"injectables/ProductService.html":{},"interfaces/UpdateProductDto.html":{},"coverage.html":{}}}],["finduserdto",{"_index":333,"title":{"interfaces/FindUserDto.html":{}},"body":{"interfaces/CreateUserDto.html":{},"interfaces/FindUserDto.html":{},"interfaces/PaginatedResponse.html":{},"interfaces/PaginationInfo.html":{},"interfaces/UpdateUserDto.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["firstname",{"_index":325,"title":{},"body":{"interfaces/CreateUserDto.html":{},"interfaces/FindUserDto.html":{},"interfaces/PaginatedResponse.html":{},"interfaces/PaginationInfo.html":{},"interfaces/UpdateUserDto.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"injectables/UserValidator.html":{}}}],["flash",{"_index":303,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{}}}],["flashscreencomponent",{"_index":302,"title":{"components/FlashScreenComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{},"coverage.html":{}}}],["following",{"_index":1257,"title":{},"body":{"index.html":{}}}],["footer",{"_index":435,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{}}}],["footer.component.css",{"_index":437,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.html",{"_index":436,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":277,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{},"coverage.html":{}}}],["for(toast",{"_index":982,"title":{},"body":{"components/ToastComponent.html":{}}}],["form",{"_index":172,"title":{},"body":{"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{}}}],["format",{"_index":936,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["format(value",{"_index":404,"title":{},"body":{"pipes/FcfaCurrencyPipe.html":{}}}],["formattednumber",{"_index":399,"title":{},"body":{"pipes/FcfaCurrencyPipe.html":{}}}],["formatter",{"_index":394,"title":{},"body":{"pipes/FcfaCurrencyPipe.html":{}}}],["formbuilder",{"_index":23,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["formdata",{"_index":491,"title":{},"body":{"injectables/HttpService.html":{},"injectables/ProductService.html":{}}}],["formdata).pipe",{"_index":805,"title":{},"body":{"injectables/ProductService.html":{}}}],["formdata.append('image",{"_index":840,"title":{},"body":{"injectables/ProductService.html":{}}}],["formdata.append('name",{"_index":832,"title":{},"body":{"injectables/ProductService.html":{}}}],["formdata.append('price",{"_index":833,"title":{},"body":{"injectables/ProductService.html":{}}}],["formdata.append('quantity",{"_index":836,"title":{},"body":{"injectables/ProductService.html":{}}}],["formdata.foreach((value",{"_index":842,"title":{},"body":{"injectables/ProductService.html":{}}}],["formerrors",{"_index":90,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["formgroup",{"_index":22,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["formmodalcomponent",{"_index":35,"title":{"components/FormModalComponent.html":{}},"body":{"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{},"coverage.html":{}}}],["formsmodule",{"_index":20,"title":{},"body":{"interfaces/ApiError.html":{},"components/FormModalComponent.html":{},"components/ProductComponent.html":{}}}],["formtemplate",{"_index":446,"title":{},"body":{"components/FormModalComponent.html":{}}}],["formvalue",{"_index":194,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["formvalue.address",{"_index":1089,"title":{},"body":{"components/UserComponent.html":{}}}],["formvalue.firstname",{"_index":1087,"title":{},"body":{"components/UserComponent.html":{}}}],["formvalue.lastname",{"_index":1088,"title":{},"body":{"components/UserComponent.html":{}}}],["formvalue.name",{"_index":198,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["formvalue.name.trim",{"_index":209,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["formvalue.price",{"_index":199,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["formvalue.quantity",{"_index":200,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["fr",{"_index":401,"title":{},"body":{"pipes/FcfaCurrencyPipe.html":{}}}],["framework",{"_index":1265,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1232,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1203,"title":{},"body":{"index.html":{}}}],["gestion",{"_index":1105,"title":{},"body":{"components/UserComponent.html":{}}}],["get(endpoint",{"_index":473,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/IHttpService.html":{}}}],["getall",{"_index":746,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["getall(filter",{"_index":759,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["getbyid",{"_index":747,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["getbyid(id",{"_index":762,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["geterrormessage",{"_index":852,"title":{},"body":{"injectables/ProductValidator.html":{},"components/UserComponent.html":{},"injectables/UserValidator.html":{}}}],["geterrormessage('address",{"_index":1113,"title":{},"body":{"components/UserComponent.html":{}}}],["geterrormessage('firstname",{"_index":1111,"title":{},"body":{"components/UserComponent.html":{}}}],["geterrormessage('lastname",{"_index":1112,"title":{},"body":{"components/UserComponent.html":{}}}],["geterrormessage(\\'address",{"_index":1116,"title":{},"body":{"components/UserComponent.html":{}}}],["geterrormessage(\\'firstname",{"_index":1114,"title":{},"body":{"components/UserComponent.html":{}}}],["geterrormessage(\\'lastname",{"_index":1115,"title":{},"body":{"components/UserComponent.html":{}}}],["geterrormessage(fieldname",{"_index":857,"title":{},"body":{"injectables/ProductValidator.html":{},"components/UserComponent.html":{},"injectables/UserValidator.html":{}}}],["getfielderror",{"_index":658,"title":{},"body":{"components/ProductComponent.html":{}}}],["getfielderror('image",{"_index":716,"title":{},"body":{"components/ProductComponent.html":{}}}],["getfielderror('name",{"_index":718,"title":{},"body":{"components/ProductComponent.html":{}}}],["getfielderror('price",{"_index":722,"title":{},"body":{"components/ProductComponent.html":{}}}],["getfielderror('quantity",{"_index":726,"title":{},"body":{"components/ProductComponent.html":{}}}],["getfielderror(\\'image",{"_index":730,"title":{},"body":{"components/ProductComponent.html":{}}}],["getfielderror(\\'name",{"_index":731,"title":{},"body":{"components/ProductComponent.html":{}}}],["getfielderror(\\'price",{"_index":734,"title":{},"body":{"components/ProductComponent.html":{}}}],["getfielderror(\\'quantity",{"_index":737,"title":{},"body":{"components/ProductComponent.html":{}}}],["getfielderror(fieldname",{"_index":247,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["getheaders",{"_index":462,"title":{},"body":{"injectables/HttpService.html":{}}}],["getheaders(data",{"_index":475,"title":{},"body":{"injectables/HttpService.html":{}}}],["getting",{"_index":1199,"title":{"index.html":{}},"body":{}}],["gettoasts",{"_index":528,"title":{},"body":{"injectables/NotificationService.html":{}}}],["gif",{"_index":942,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["green",{"_index":700,"title":{},"body":{"components/ProductComponent.html":{}}}],["group",{"_index":1280,"title":{},"body":{"index.html":{}}}],["group.angular",{"_index":285,"title":{},"body":{"components/AppComponent.html":{}}}],["gère",{"_index":493,"title":{},"body":{"injectables/HttpService.html":{}}}],["hasfielderror",{"_index":659,"title":{},"body":{"components/ProductComponent.html":{}}}],["hasfielderror(fieldname",{"_index":249,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["headers",{"_index":498,"title":{},"body":{"injectables/HttpService.html":{}}}],["helpbuilding",{"_index":1238,"title":{},"body":{"index.html":{}}}],["html",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{}}}],["htmlinputelement",{"_index":145,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["http",{"_index":468,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/IHttpService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["http://localhost:3000",{"_index":1298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1220,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":466,"title":{},"body":{"injectables/HttpService.html":{}}}],["httpheaders",{"_index":477,"title":{},"body":{"injectables/HttpService.html":{}}}],["httpresponse",{"_index":455,"title":{"interfaces/HttpResponse.html":{}},"body":{"interfaces/HttpResponse.html":{},"injectables/HttpService.html":{},"interfaces/IHttpService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["httpservice",{"_index":458,"title":{"injectables/HttpService.html":{}},"body":{"injectables/HttpService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["ici",{"_index":712,"title":{},"body":{"components/ProductComponent.html":{}}}],["id",{"_index":258,"title":{},"body":{"interfaces/ApiResponse.html":{},"interfaces/HttpResponse.html":{},"injectables/HttpService.html":{},"injectables/NotificationService.html":{},"injectables/ProductService.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":1165,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":649,"title":{},"body":{"components/PaginationComponent.html":{}}}],["ihttpservice",{"_index":486,"title":{"interfaces/IHttpService.html":{}},"body":{"injectables/HttpService.html":{},"interfaces/IHttpService.html":{},"coverage.html":{}}}],["image",{"_index":181,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/CreateProductDto.html":{},"interfaces/FindProductDto.html":{},"interfaces/Product.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{},"interfaces/UpdateProductDto.html":{}}}],["image/gif",{"_index":773,"title":{},"body":{"injectables/ProductService.html":{},"injectables/ProductValidator.html":{}}}],["image/jpeg",{"_index":771,"title":{},"body":{"injectables/ProductService.html":{},"injectables/ProductValidator.html":{}}}],["image/png",{"_index":772,"title":{},"body":{"injectables/ProductService.html":{},"injectables/ProductValidator.html":{}}}],["imageerrors",{"_index":183,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["implements",{"_index":73,"title":{},"body":{"interfaces/ApiError.html":{},"pipes/FcfaCurrencyPipe.html":{},"injectables/HttpService.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{}}}],["import",{"_index":14,"title":{},"body":{"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"pipes/FcfaCurrencyPipe.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"injectables/HttpService.html":{},"interfaces/IHttpService.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"injectables/NotificationService.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"injectables/UserValidator.html":{}}}],["imports",{"_index":65,"title":{},"body":{"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{}}}],["includes",{"_index":1229,"title":{},"body":{"index.html":{}}}],["including",{"_index":1274,"title":{},"body":{"index.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/ApiError.html":{},"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"interfaces/CreateProductDto.html":{},"interfaces/CreateUserDto.html":{},"components/DeleteModalComponent.html":{},"interfaces/FindProductDto.html":{},"interfaces/FindUserDto.html":{},"components/FlashScreenComponent.html":{},"components/FormModalComponent.html":{},"interfaces/HttpResponse.html":{},"injectables/HttpService.html":{},"interfaces/IHttpService.html":{},"injectables/NotificationService.html":{},"interfaces/PaginatedResponse.html":{},"components/PaginationComponent.html":{},"interfaces/PaginationInfo.html":{},"interfaces/Product.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{},"components/SkeletonComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"interfaces/UpdateProductDto.html":{},"interfaces/UpdateUserDto.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"injectables/UserValidator.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"interfaces/CreateProductDto.html":{},"interfaces/CreateUserDto.html":{},"components/DeleteModalComponent.html":{},"pipes/FcfaCurrencyPipe.html":{},"interfaces/FindProductDto.html":{},"interfaces/FindUserDto.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"interfaces/HttpResponse.html":{},"injectables/HttpService.html":{},"interfaces/IHttpService.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"injectables/NotificationService.html":{},"interfaces/PaginatedResponse.html":{},"components/PaginationComponent.html":{},"interfaces/PaginationInfo.html":{},"interfaces/Product.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"interfaces/UpdateProductDto.html":{},"interfaces/UpdateUserDto.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"injectables/UserValidator.html":{}}}],["info(message",{"_index":537,"title":{},"body":{"injectables/NotificationService.html":{}}}],["information",{"_index":1273,"title":{},"body":{"index.html":{}}}],["initform",{"_index":101,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["initiales",{"_index":830,"title":{},"body":{"injectables/ProductService.html":{}}}],["injectable",{"_index":457,"title":{"injectables/HttpService.html":{},"injectables/NotificationService.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{},"injectables/UserService.html":{},"injectables/UserValidator.html":{}},"body":{"injectables/HttpService.html":{},"injectables/NotificationService.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{},"injectables/UserService.html":{},"injectables/UserValidator.html":{},"coverage.html":{}}}],["injectables",{"_index":459,"title":{},"body":{"injectables/HttpService.html":{},"injectables/NotificationService.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{},"injectables/UserService.html":{},"injectables/UserValidator.html":{},"overview.html":{}}}],["input",{"_index":143,"title":{},"body":{"interfaces/ApiError.html":{},"components/DeleteModalComponent.html":{},"components/FormModalComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SkeletonComponent.html":{}}}],["input.files",{"_index":146,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["input.files[0",{"_index":147,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["input.value",{"_index":153,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["inputs",{"_index":350,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/FormModalComponent.html":{},"components/PaginationComponent.html":{},"components/SkeletonComponent.html":{}}}],["instanceof",{"_index":490,"title":{},"body":{"injectables/HttpService.html":{},"injectables/ProductService.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ApiError.html":{},"interfaces/ApiResponse.html":{},"interfaces/CreateProductDto.html":{},"interfaces/CreateUserDto.html":{},"interfaces/FindProductDto.html":{},"interfaces/FindUserDto.html":{},"interfaces/HttpResponse.html":{},"interfaces/IHttpService.html":{},"interfaces/PaginatedResponse.html":{},"interfaces/PaginationInfo.html":{},"interfaces/Product.html":{},"interfaces/Toast.html":{},"interfaces/UpdateProductDto.html":{},"interfaces/UpdateUserDto.html":{},"interfaces/User.html":{}},"body":{"interfaces/ApiError.html":{},"interfaces/ApiResponse.html":{},"interfaces/CreateProductDto.html":{},"interfaces/CreateUserDto.html":{},"interfaces/FindProductDto.html":{},"interfaces/FindUserDto.html":{},"interfaces/HttpResponse.html":{},"interfaces/IHttpService.html":{},"interfaces/PaginatedResponse.html":{},"interfaces/PaginationInfo.html":{},"interfaces/Product.html":{},"components/ProductComponent.html":{},"interfaces/Toast.html":{},"interfaces/UpdateProductDto.html":{},"interfaces/UpdateUserDto.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/ApiResponse.html":{},"interfaces/CreateProductDto.html":{},"interfaces/CreateUserDto.html":{},"interfaces/FindProductDto.html":{},"interfaces/FindUserDto.html":{},"interfaces/HttpResponse.html":{},"interfaces/IHttpService.html":{},"interfaces/PaginatedResponse.html":{},"interfaces/PaginationInfo.html":{},"interfaces/Product.html":{},"interfaces/Toast.html":{},"interfaces/UpdateProductDto.html":{},"interfaces/UpdateUserDto.html":{},"interfaces/User.html":{},"overview.html":{}}}],["intl.numberformat('fr",{"_index":400,"title":{},"body":{"pipes/FcfaCurrencyPipe.html":{}}}],["invalide",{"_index":127,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"injectables/ProductValidator.html":{},"injectables/UserValidator.html":{}}}],["invalides",{"_index":651,"title":{},"body":{"components/PaginationComponent.html":{}}}],["invalidtype",{"_index":901,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["irréversible",{"_index":384,"title":{},"body":{"components/DeleteModalComponent.html":{}}}],["isdeleted",{"_index":327,"title":{},"body":{"interfaces/CreateUserDto.html":{},"interfaces/FindUserDto.html":{},"interfaces/PaginatedResponse.html":{},"interfaces/PaginationInfo.html":{},"interfaces/UpdateUserDto.html":{},"interfaces/User.html":{}}}],["isediting",{"_index":82,"title":{},"body":{"interfaces/ApiError.html":{},"components/FormModalComponent.html":{},"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["isfieldtouched",{"_index":660,"title":{},"body":{"components/ProductComponent.html":{}}}],["isfieldtouched(fieldname",{"_index":250,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["isformvalid",{"_index":997,"title":{},"body":{"components/UserComponent.html":{}}}],["isloading",{"_index":79,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["isnan(numvalue",{"_index":892,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["isnan(pagenumber",{"_index":648,"title":{},"body":{"components/PaginationComponent.html":{}}}],["issa",{"_index":433,"title":{},"body":{"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/NavbarComponent.html":{}}}],["isupdate",{"_index":769,"title":{},"body":{"injectables/ProductService.html":{}}}],["isvalid",{"_index":170,"title":{},"body":{"interfaces/ApiError.html":{},"components/FormModalComponent.html":{},"components/ProductComponent.html":{}}}],["item",{"_index":960,"title":{},"body":{"components/SkeletonComponent.html":{}}}],["itemsperpage",{"_index":337,"title":{},"body":{"interfaces/CreateUserDto.html":{},"interfaces/FindUserDto.html":{},"interfaces/PaginatedResponse.html":{},"interfaces/PaginationInfo.html":{},"interfaces/UpdateUserDto.html":{},"interfaces/User.html":{},"components/UserComponent.html":{}}}],["jour",{"_index":623,"title":{},"body":{"components/PaginationComponent.html":{},"injectables/ProductService.html":{}}}],["jpg",{"_index":940,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["json.stringify(entries",{"_index":845,"title":{},"body":{"injectables/ProductService.html":{}}}],["karma",{"_index":1253,"title":{},"body":{"index.html":{}}}],["key",{"_index":91,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{}}}],["l'adresse",{"_index":1153,"title":{},"body":{"injectables/UserValidator.html":{}}}],["l'enregistrement",{"_index":218,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["l'utilisateur",{"_index":1069,"title":{},"body":{"components/UserComponent.html":{}}}],["l\\'image",{"_index":714,"title":{},"body":{"components/ProductComponent.html":{},"injectables/ProductValidator.html":{}}}],["l\\'utilisateur",{"_index":1094,"title":{},"body":{"components/UserComponent.html":{}}}],["l\\\\'image",{"_index":729,"title":{},"body":{"components/ProductComponent.html":{}}}],["la",{"_index":163,"title":{},"body":{"interfaces/ApiError.html":{},"components/DeleteModalComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{},"components/UserComponent.html":{}}}],["lastaddedid",{"_index":992,"title":{},"body":{"components/UserComponent.html":{}}}],["lastname",{"_index":326,"title":{},"body":{"interfaces/CreateUserDto.html":{},"interfaces/FindUserDto.html":{},"interfaces/PaginatedResponse.html":{},"interfaces/PaginationInfo.html":{},"interfaces/UpdateUserDto.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"injectables/UserValidator.html":{}}}],["lastpage",{"_index":263,"title":{},"body":{"interfaces/ApiResponse.html":{},"interfaces/HttpResponse.html":{}}}],["le",{"_index":395,"title":{},"body":{"pipes/FcfaCurrencyPipe.html":{},"components/FlashScreenComponent.html":{},"injectables/HttpService.html":{},"injectables/ProductValidator.html":{},"components/UserComponent.html":{},"injectables/UserValidator.html":{}}}],["lecture",{"_index":164,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["legend",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{}}}],["les",{"_index":601,"title":{},"body":{"components/PaginationComponent.html":{},"components/UserComponent.html":{}}}],["lettres",{"_index":916,"title":{},"body":{"injectables/ProductValidator.html":{},"injectables/UserValidator.html":{}}}],["limit",{"_index":264,"title":{},"body":{"interfaces/ApiResponse.html":{},"interfaces/CreateProductDto.html":{},"interfaces/CreateUserDto.html":{},"interfaces/FindProductDto.html":{},"interfaces/FindUserDto.html":{},"interfaces/HttpResponse.html":{},"interfaces/PaginatedResponse.html":{},"components/PaginationComponent.html":{},"interfaces/PaginationInfo.html":{},"interfaces/Product.html":{},"interfaces/UpdateProductDto.html":{},"interfaces/UpdateUserDto.html":{},"interfaces/User.html":{}}}],["list",{"_index":959,"title":{},"body":{"components/SkeletonComponent.html":{},"index.html":{}}}],["literal",{"_index":11,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/ApiResponse.html":{},"interfaces/HttpResponse.html":{},"components/ProductComponent.html":{}}}],["loader",{"_index":516,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader'},{'name",{"_index":307,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{}}}],["loader.component.css",{"_index":518,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.component.html",{"_index":517,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader/loader.component",{"_index":418,"title":{},"body":{"components/FlashScreenComponent.html":{}}}],["loadercomponent",{"_index":306,"title":{"components/LoaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{},"coverage.html":{}}}],["loading",{"_index":137,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"components/SkeletonComponent.html":{},"components/UserComponent.html":{}}}],["loadproducts",{"_index":113,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["loadusers",{"_index":998,"title":{},"body":{"components/UserComponent.html":{}}}],["local",{"_index":1212,"title":{},"body":{"index.html":{}}}],["localstorage.getitem('splashshown",{"_index":425,"title":{},"body":{"components/FlashScreenComponent.html":{}}}],["localstorage.setitem('splashshown",{"_index":429,"title":{},"body":{"components/FlashScreenComponent.html":{}}}],["logformdata",{"_index":748,"title":{},"body":{"injectables/ProductService.html":{}}}],["logformdata(formdata",{"_index":764,"title":{},"body":{"injectables/ProductService.html":{}}}],["lors",{"_index":131,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"components/UserComponent.html":{}}}],["lorsque",{"_index":1062,"title":{},"body":{"components/UserComponent.html":{}}}],["lément",{"_index":380,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/FormModalComponent.html":{}}}],["léments",{"_index":628,"title":{},"body":{"components/PaginationComponent.html":{}}}],["manquant",{"_index":821,"title":{},"body":{"injectables/ProductService.html":{}}}],["map",{"_index":30,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/HttpService.html":{},"components/ProductComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["map((response",{"_index":116,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["map(response",{"_index":501,"title":{},"body":{"injectables/HttpService.html":{}}}],["marquer",{"_index":1077,"title":{},"body":{"components/UserComponent.html":{}}}],["matching",{"_index":253,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"interfaces/CreateProductDto.html":{},"interfaces/CreateUserDto.html":{},"components/DeleteModalComponent.html":{},"pipes/FcfaCurrencyPipe.html":{},"interfaces/FindProductDto.html":{},"interfaces/FindUserDto.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"interfaces/HttpResponse.html":{},"injectables/HttpService.html":{},"interfaces/IHttpService.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"injectables/NotificationService.html":{},"interfaces/PaginatedResponse.html":{},"components/PaginationComponent.html":{},"interfaces/PaginationInfo.html":{},"interfaces/Product.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"interfaces/UpdateProductDto.html":{},"interfaces/UpdateUserDto.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"injectables/UserValidator.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(this.total",{"_index":613,"title":{},"body":{"components/PaginationComponent.html":{}}}],["math.min(startindex",{"_index":631,"title":{},"body":{"components/PaginationComponent.html":{}}}],["math.min(this.currentpage",{"_index":645,"title":{},"body":{"components/PaginationComponent.html":{}}}],["max",{"_index":895,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["max_file_size",{"_index":743,"title":{},"body":{"injectables/ProductService.html":{},"injectables/ProductValidator.html":{}}}],["max_price",{"_index":847,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["max_quantity",{"_index":848,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["maximum",{"_index":828,"title":{},"body":{"injectables/ProductService.html":{},"injectables/ProductValidator.html":{}}}],["maximumfractiondigits",{"_index":403,"title":{},"body":{"pipes/FcfaCurrencyPipe.html":{}}}],["maxlength",{"_index":1147,"title":{},"body":{"injectables/UserValidator.html":{}}}],["maxsize",{"_index":906,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["maxvisiblepages",{"_index":636,"title":{},"body":{"components/PaginationComponent.html":{}}}],["message",{"_index":58,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/ApiResponse.html":{},"interfaces/HttpResponse.html":{},"injectables/NotificationService.html":{},"components/ProductComponent.html":{},"interfaces/Toast.html":{}}}],["meta",{"_index":262,"title":{},"body":{"interfaces/ApiResponse.html":{},"interfaces/HttpResponse.html":{}}}],["metadata",{"_index":273,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"pipes/FcfaCurrencyPipe.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{}}}],["method",{"_index":807,"title":{},"body":{"injectables/ProductService.html":{}}}],["methods",{"_index":347,"title":{},"body":{"components/DeleteModalComponent.html":{},"pipes/FcfaCurrencyPipe.html":{},"components/FlashScreenComponent.html":{},"components/FormModalComponent.html":{},"injectables/HttpService.html":{},"interfaces/IHttpService.html":{},"injectables/NotificationService.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"injectables/UserValidator.html":{}}}],["mettre",{"_index":622,"title":{},"body":{"components/PaginationComponent.html":{}}}],["milieu",{"_index":641,"title":{},"body":{"components/PaginationComponent.html":{}}}],["millions",{"_index":881,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["min_price",{"_index":849,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["min_quantity",{"_index":850,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["minimum",{"_index":926,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["minimumfractiondigits",{"_index":402,"title":{},"body":{"pipes/FcfaCurrencyPipe.html":{}}}],["miscellaneous",{"_index":1286,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mise",{"_index":809,"title":{},"body":{"injectables/ProductService.html":{}}}],["modal",{"_index":344,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/FormModalComponent.html":{}}}],["modal'},{'name",{"_index":301,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{}}}],["modal.component",{"_index":38,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["modal.component.css",{"_index":346,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/FormModalComponent.html":{}}}],["modal.component.html",{"_index":345,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/FormModalComponent.html":{}}}],["modal.component.ts",{"_index":343,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/FormModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:11",{"_index":360,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/FormModalComponent.html":{}}}],["modal.component.ts:12",{"_index":357,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/FormModalComponent.html":{}}}],["modal.component.ts:13",{"_index":358,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/FormModalComponent.html":{}}}],["modal.component.ts:14",{"_index":359,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/FormModalComponent.html":{}}}],["modal.component.ts:15",{"_index":448,"title":{},"body":{"components/FormModalComponent.html":{}}}],["modal.component.ts:16",{"_index":363,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/FormModalComponent.html":{}}}],["modal.component.ts:17",{"_index":362,"title":{},"body":{"components/DeleteModalComponent.html":{}}}],["modal.component.ts:18",{"_index":449,"title":{},"body":{"components/FormModalComponent.html":{}}}],["modal.component.ts:19",{"_index":364,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/FormModalComponent.html":{}}}],["modal.component.ts:21",{"_index":450,"title":{},"body":{"components/FormModalComponent.html":{}}}],["modal.component.ts:24",{"_index":366,"title":{},"body":{"components/DeleteModalComponent.html":{}}}],["modal.component.ts:26",{"_index":451,"title":{},"body":{"components/FormModalComponent.html":{}}}],["modal/delete",{"_index":41,"title":{},"body":{"interfaces/ApiError.html":{},"components/DeleteModalComponent.html":{},"components/ProductComponent.html":{},"components/UserComponent.html":{},"coverage.html":{}}}],["modal/form",{"_index":37,"title":{},"body":{"interfaces/ApiError.html":{},"components/FormModalComponent.html":{},"components/ProductComponent.html":{},"components/UserComponent.html":{},"coverage.html":{}}}],["modifi",{"_index":205,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["modification",{"_index":1093,"title":{},"body":{"components/UserComponent.html":{}}}],["modifier",{"_index":454,"title":{},"body":{"components/FormModalComponent.html":{}}}],["modify",{"_index":1225,"title":{},"body":{"index.html":{}}}],["modules",{"_index":1281,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["moins",{"_index":1157,"title":{},"body":{"injectables/UserValidator.html":{}}}],["more",{"_index":1272,"title":{},"body":{"index.html":{}}}],["méthode",{"_index":621,"title":{},"body":{"components/PaginationComponent.html":{},"components/UserComponent.html":{}}}],["n'est",{"_index":1150,"title":{},"body":{"injectables/UserValidator.html":{}}}],["n\\'est",{"_index":911,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["name",{"_index":104,"title":{},"body":{"interfaces/ApiError.html":{},"components/AppComponent.html":{},"interfaces/CreateProductDto.html":{},"components/DeleteModalComponent.html":{},"pipes/FcfaCurrencyPipe.html":{},"interfaces/FindProductDto.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"injectables/HttpService.html":{},"interfaces/IHttpService.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"injectables/NotificationService.html":{},"components/PaginationComponent.html":{},"interfaces/Product.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"interfaces/UpdateProductDto.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"injectables/UserValidator.html":{}}}],["name_pattern",{"_index":851,"title":{},"body":{"injectables/ProductValidator.html":{},"injectables/UserValidator.html":{}}}],["namefor",{"_index":1233,"title":{},"body":{"index.html":{}}}],["navbar",{"_index":520,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{}}}],["navbar.component.css",{"_index":524,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":523,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":278,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{},"coverage.html":{}}}],["navigate",{"_index":1219,"title":{},"body":{"index.html":{}}}],["navigateur",{"_index":492,"title":{},"body":{"injectables/HttpService.html":{}}}],["ne",{"_index":1160,"title":{},"body":{"injectables/UserValidator.html":{}}}],["needs",{"_index":1269,"title":{},"body":{"index.html":{}}}],["new",{"_index":76,"title":{},"body":{"interfaces/ApiError.html":{},"components/DeleteModalComponent.html":{},"pipes/FcfaCurrencyPipe.html":{},"components/FormModalComponent.html":{},"injectables/HttpService.html":{},"injectables/NotificationService.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":233,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["ng",{"_index":1215,"title":{},"body":{"index.html":{}}}],["ngclass",{"_index":986,"title":{},"body":{"components/UserComponent.html":{}}}],["ngfor",{"_index":562,"title":{},"body":{"components/PaginationComponent.html":{},"components/UserComponent.html":{}}}],["ngif",{"_index":563,"title":{},"body":{"components/PaginationComponent.html":{},"components/UserComponent.html":{}}}],["ngonchanges",{"_index":572,"title":{},"body":{"components/PaginationComponent.html":{}}}],["ngonchanges(changes",{"_index":584,"title":{},"body":{"components/PaginationComponent.html":{}}}],["ngoninit",{"_index":97,"title":{},"body":{"interfaces/ApiError.html":{},"components/FlashScreenComponent.html":{},"components/ProductComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{}}}],["nom",{"_index":717,"title":{},"body":{"components/ProductComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{},"components/UserComponent.html":{},"injectables/UserValidator.html":{}}}],["nombre",{"_index":396,"title":{},"body":{"pipes/FcfaCurrencyPipe.html":{},"components/PaginationComponent.html":{},"injectables/ProductValidator.html":{},"components/UserComponent.html":{}}}],["non",{"_index":937,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["nos",{"_index":693,"title":{},"body":{"components/ProductComponent.html":{}}}],["notaninteger",{"_index":898,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["notanumber",{"_index":893,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["notificationservice",{"_index":47,"title":{"injectables/NotificationService.html":{}},"body":{"interfaces/ApiError.html":{},"injectables/NotificationService.html":{},"components/ProductComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{},"coverage.html":{}}}],["null",{"_index":86,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/CreateProductDto.html":{},"components/DeleteModalComponent.html":{},"interfaces/FindProductDto.html":{},"interfaces/HttpResponse.html":{},"interfaces/Product.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{},"interfaces/UpdateProductDto.html":{},"components/UserComponent.html":{},"injectables/UserValidator.html":{}}}],["number",{"_index":260,"title":{},"body":{"interfaces/ApiResponse.html":{},"interfaces/CreateProductDto.html":{},"interfaces/CreateUserDto.html":{},"pipes/FcfaCurrencyPipe.html":{},"interfaces/FindProductDto.html":{},"interfaces/FindUserDto.html":{},"interfaces/HttpResponse.html":{},"injectables/NotificationService.html":{},"interfaces/PaginatedResponse.html":{},"components/PaginationComponent.html":{},"interfaces/PaginationInfo.html":{},"interfaces/Product.html":{},"injectables/ProductValidator.html":{},"interfaces/Toast.html":{},"interfaces/UpdateProductDto.html":{},"interfaces/UpdateUserDto.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"injectables/UserValidator.html":{}}}],["number(page",{"_index":647,"title":{},"body":{"components/PaginationComponent.html":{}}}],["number(value",{"_index":891,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["number.isinteger(numvalue",{"_index":897,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["numvalue",{"_index":890,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["object",{"_index":1296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.entries(filter).foreach(([key",{"_index":783,"title":{},"body":{"injectables/ProductService.html":{}}}],["object.keys(this.productform.controls).foreach(key",{"_index":174,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["object.keys(this.userform.controls).foreach(key",{"_index":1081,"title":{},"body":{"components/UserComponent.html":{}}}],["object.values(this.formerrors",{"_index":190,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["observable",{"_index":27,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/HttpService.html":{},"interfaces/IHttpService.html":{},"injectables/NotificationService.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["onchanges",{"_index":561,"title":{},"body":{"components/PaginationComponent.html":{}}}],["ondeleteclick",{"_index":661,"title":{},"body":{"components/ProductComponent.html":{}}}],["ondeleteclick(product",{"_index":226,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["one",{"_index":1267,"title":{},"body":{"index.html":{}}}],["onfieldblur",{"_index":999,"title":{},"body":{"components/UserComponent.html":{}}}],["onfieldblur(fieldname",{"_index":1015,"title":{},"body":{"components/UserComponent.html":{}}}],["onfileselected",{"_index":662,"title":{},"body":{"components/ProductComponent.html":{}}}],["onfileselected(event",{"_index":140,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["oninit",{"_index":16,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{}}}],["onpagechange",{"_index":573,"title":{},"body":{"components/PaginationComponent.html":{},"components/UserComponent.html":{}}}],["onpagechange(page",{"_index":588,"title":{},"body":{"components/PaginationComponent.html":{}}}],["onpagechange(pageusers",{"_index":1017,"title":{},"body":{"components/UserComponent.html":{}}}],["open",{"_index":1218,"title":{},"body":{"index.html":{}}}],["openaddmodal",{"_index":238,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["opendeletemodal",{"_index":1000,"title":{},"body":{"components/UserComponent.html":{}}}],["opendeletemodal(user",{"_index":1021,"title":{},"body":{"components/UserComponent.html":{}}}],["openeditmodal",{"_index":1001,"title":{},"body":{"components/UserComponent.html":{}}}],["openeditmodal(user",{"_index":1023,"title":{},"body":{"components/UserComponent.html":{}}}],["optimizes",{"_index":1247,"title":{},"body":{"index.html":{}}}],["optional",{"_index":9,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/CreateProductDto.html":{},"pipes/FcfaCurrencyPipe.html":{},"interfaces/FindProductDto.html":{},"interfaces/FindUserDto.html":{},"components/FlashScreenComponent.html":{},"interfaces/HttpResponse.html":{},"injectables/HttpService.html":{},"interfaces/IHttpService.html":{},"injectables/NotificationService.html":{},"components/PaginationComponent.html":{},"interfaces/Product.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"interfaces/UpdateProductDto.html":{},"interfaces/UpdateUserDto.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"injectables/UserValidator.html":{}}}],["options",{"_index":470,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/IHttpService.html":{}}}],["ou",{"_index":709,"title":{},"body":{"components/ProductComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{}}}],["output",{"_index":367,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/FormModalComponent.html":{},"components/PaginationComponent.html":{}}}],["outputs",{"_index":355,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/FormModalComponent.html":{},"components/PaginationComponent.html":{}}}],["overview",{"_index":1278,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":1186,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":265,"title":{},"body":{"interfaces/ApiResponse.html":{},"interfaces/CreateProductDto.html":{},"interfaces/CreateUserDto.html":{},"interfaces/FindProductDto.html":{},"interfaces/FindUserDto.html":{},"interfaces/HttpResponse.html":{},"interfaces/PaginatedResponse.html":{},"components/PaginationComponent.html":{},"interfaces/PaginationInfo.html":{},"interfaces/Product.html":{},"interfaces/UpdateProductDto.html":{},"interfaces/UpdateUserDto.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"index.html":{}}}],["pageitemschange",{"_index":577,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagenumber",{"_index":646,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pages",{"_index":638,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pageusers",{"_index":1019,"title":{},"body":{"components/UserComponent.html":{}}}],["paginatedresponse",{"_index":340,"title":{"interfaces/PaginatedResponse.html":{}},"body":{"interfaces/CreateUserDto.html":{},"interfaces/FindUserDto.html":{},"interfaces/PaginatedResponse.html":{},"interfaces/PaginationInfo.html":{},"interfaces/UpdateUserDto.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["pagination",{"_index":341,"title":{},"body":{"interfaces/CreateUserDto.html":{},"interfaces/FindUserDto.html":{},"interfaces/PaginatedResponse.html":{},"components/PaginationComponent.html":{},"interfaces/PaginationInfo.html":{},"interfaces/UpdateUserDto.html":{},"interfaces/User.html":{},"components/UserComponent.html":{}}}],["pagination'},{'name",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{}}}],["pagination.component.css",{"_index":565,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.component.html",{"_index":564,"title":{},"body":{"components/PaginationComponent.html":{}}}],["paginationcomponent",{"_index":309,"title":{"components/PaginationComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{},"coverage.html":{}}}],["paginationinfo",{"_index":335,"title":{"interfaces/PaginationInfo.html":{}},"body":{"interfaces/CreateUserDto.html":{},"interfaces/FindUserDto.html":{},"interfaces/PaginatedResponse.html":{},"interfaces/PaginationInfo.html":{},"interfaces/UpdateUserDto.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["paginer",{"_index":602,"title":{},"body":{"components/PaginationComponent.html":{}}}],["par",{"_index":604,"title":{},"body":{"components/PaginationComponent.html":{},"components/UserComponent.html":{}}}],["parameters",{"_index":392,"title":{},"body":{"pipes/FcfaCurrencyPipe.html":{},"components/FlashScreenComponent.html":{},"injectables/HttpService.html":{},"interfaces/IHttpService.html":{},"injectables/NotificationService.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"injectables/UserValidator.html":{}}}],["partial",{"_index":84,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{}}}],["pas",{"_index":912,"title":{},"body":{"injectables/ProductValidator.html":{},"injectables/UserValidator.html":{}}}],["pattern",{"_index":886,"title":{},"body":{"injectables/ProductValidator.html":{},"injectables/UserValidator.html":{}}}],["performance",{"_index":1248,"title":{},"body":{"index.html":{}}}],["peut",{"_index":1161,"title":{},"body":{"injectables/UserValidator.html":{}}}],["pipe",{"_index":385,"title":{"pipes/FcfaCurrencyPipe.html":{}},"body":{"pipes/FcfaCurrencyPipe.html":{},"injectables/HttpService.html":{},"coverage.html":{},"overview.html":{}}}],["pipes",{"_index":386,"title":{},"body":{"pipes/FcfaCurrencyPipe.html":{},"index.html":{}}}],["pipetransform",{"_index":393,"title":{},"body":{"pipes/FcfaCurrencyPipe.html":{}}}],["png",{"_index":941,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["post",{"_index":463,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/IHttpService.html":{}}}],["post(endpoint",{"_index":478,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/IHttpService.html":{}}}],["pour",{"_index":495,"title":{},"body":{"injectables/HttpService.html":{},"components/PaginationComponent.html":{},"injectables/ProductService.html":{}}}],["powerful",{"_index":1230,"title":{},"body":{"index.html":{}}}],["premier",{"_index":698,"title":{},"body":{"components/ProductComponent.html":{}}}],["première",{"_index":617,"title":{},"body":{"components/PaginationComponent.html":{}}}],["previewimage",{"_index":87,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["price",{"_index":108,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/CreateProductDto.html":{},"interfaces/FindProductDto.html":{},"interfaces/Product.html":{},"components/ProductComponent.html":{},"injectables/ProductValidator.html":{},"interfaces/UpdateProductDto.html":{}}}],["private",{"_index":74,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/HttpService.html":{},"injectables/NotificationService.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"injectables/UserValidator.html":{}}}],["prix",{"_index":721,"title":{},"body":{"components/ProductComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{}}}],["product",{"_index":44,"title":{"interfaces/Product.html":{}},"body":{"interfaces/ApiError.html":{},"interfaces/CreateProductDto.html":{},"interfaces/FindProductDto.html":{},"interfaces/Product.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{},"interfaces/UpdateProductDto.html":{},"coverage.html":{}}}],["product'},{'name",{"_index":311,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{}}}],["product._id",{"_index":227,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["product.component.css",{"_index":69,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["product.component.html",{"_index":67,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["product.image",{"_index":245,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["product.name",{"_index":241,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["product.price",{"_index":242,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["product.quantity",{"_index":243,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["product.service.ts",{"_index":813,"title":{},"body":{"injectables/ProductService.html":{}}}],["product.validator",{"_index":57,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["productcomponent",{"_index":72,"title":{"components/ProductComponent.html":{}},"body":{"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{},"coverage.html":{}}}],["productdata",{"_index":754,"title":{},"body":{"injectables/ProductService.html":{}}}],["productform",{"_index":89,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["productform.get('name')?.errors",{"_index":720,"title":{},"body":{"components/ProductComponent.html":{}}}],["productform.get('price')?.errors",{"_index":724,"title":{},"body":{"components/ProductComponent.html":{}}}],["productform.get('quantity')?.errors",{"_index":728,"title":{},"body":{"components/ProductComponent.html":{}}}],["productform.get(\\'name\\')?.errors",{"_index":733,"title":{},"body":{"components/ProductComponent.html":{}}}],["productform.get(\\'price\\')?.errors",{"_index":736,"title":{},"body":{"components/ProductComponent.html":{}}}],["productform.get(\\'quantity\\')?.errors",{"_index":739,"title":{},"body":{"components/ProductComponent.html":{}}}],["production",{"_index":1246,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["products",{"_index":77,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{}}}],["productservice",{"_index":45,"title":{"injectables/ProductService.html":{}},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"coverage.html":{}}}],["productssubject",{"_index":75,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["producttodelete",{"_index":93,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["productvalidator",{"_index":56,"title":{"injectables/ProductValidator.html":{}},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"injectables/ProductValidator.html":{},"coverage.html":{}}}],["productvalidator.geterrormessage('name",{"_index":719,"title":{},"body":{"components/ProductComponent.html":{}}}],["productvalidator.geterrormessage('price",{"_index":723,"title":{},"body":{"components/ProductComponent.html":{}}}],["productvalidator.geterrormessage('quantity",{"_index":727,"title":{},"body":{"components/ProductComponent.html":{}}}],["productvalidator.geterrormessage(\\'name",{"_index":732,"title":{},"body":{"components/ProductComponent.html":{}}}],["productvalidator.geterrormessage(\\'price",{"_index":735,"title":{},"body":{"components/ProductComponent.html":{}}}],["productvalidator.geterrormessage(\\'quantity",{"_index":738,"title":{},"body":{"components/ProductComponent.html":{}}}],["produit",{"_index":219,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{}}}],["produits",{"_index":135,"title":{},"body":{"interfaces/ApiError.html":{},"components/NavbarComponent.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"components/SidebarComponent.html":{}}}],["project",{"_index":1202,"title":{},"body":{"index.html":{}}}],["promise",{"_index":187,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/ApiError.html":{},"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"interfaces/CreateProductDto.html":{},"interfaces/CreateUserDto.html":{},"interfaces/FindProductDto.html":{},"interfaces/FindUserDto.html":{},"components/FlashScreenComponent.html":{},"interfaces/HttpResponse.html":{},"injectables/HttpService.html":{},"injectables/NotificationService.html":{},"interfaces/PaginatedResponse.html":{},"components/PaginationComponent.html":{},"interfaces/PaginationInfo.html":{},"interfaces/Product.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"interfaces/UpdateProductDto.html":{},"interfaces/UpdateUserDto.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"injectables/UserValidator.html":{},"properties.html":{}}}],["providedin",{"_index":489,"title":{},"body":{"injectables/HttpService.html":{},"injectables/NotificationService.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{},"injectables/UserService.html":{},"injectables/UserValidator.html":{}}}],["providehttpclient",{"_index":1295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":1294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":1292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["précédent",{"_index":654,"title":{},"body":{"components/PaginationComponent.html":{}}}],["prénom",{"_index":1107,"title":{},"body":{"components/UserComponent.html":{},"injectables/UserValidator.html":{}}}],["public",{"_index":95,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["put",{"_index":464,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/IHttpService.html":{}}}],["put(endpoint",{"_index":480,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/IHttpService.html":{}}}],["quand",{"_index":618,"title":{},"body":{"components/PaginationComponent.html":{}}}],["quantit",{"_index":725,"title":{},"body":{"components/ProductComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{}}}],["quantity",{"_index":111,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/CreateProductDto.html":{},"interfaces/FindProductDto.html":{},"interfaces/Product.html":{},"components/ProductComponent.html":{},"injectables/ProductValidator.html":{},"interfaces/UpdateProductDto.html":{}}}],["queryparams",{"_index":781,"title":{},"body":{"injectables/ProductService.html":{}}}],["queryparams.append(key",{"_index":784,"title":{},"body":{"injectables/ProductService.html":{}}}],["queryparams.tostring",{"_index":788,"title":{},"body":{"injectables/ProductService.html":{}}}],["reactiveformsmodule",{"_index":21,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["reader",{"_index":156,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["reader.onerror",{"_index":161,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["reader.onload",{"_index":158,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["reader.readasdataurl(file",{"_index":166,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["readonly",{"_index":741,"title":{},"body":{"injectables/ProductService.html":{},"injectables/ProductValidator.html":{},"injectables/UserValidator.html":{}}}],["received",{"_index":1048,"title":{},"body":{"components/UserComponent.html":{}}}],["red",{"_index":702,"title":{},"body":{"components/ProductComponent.html":{}}}],["reference",{"_index":1279,"title":{},"body":{"index.html":{}}}],["references",{"_index":1276,"title":{},"body":{"index.html":{}}}],["refreshusers",{"_index":1002,"title":{},"body":{"components/UserComponent.html":{}}}],["reload",{"_index":1223,"title":{},"body":{"index.html":{}}}],["remove",{"_index":529,"title":{},"body":{"injectables/NotificationService.html":{}}}],["remove(id",{"_index":539,"title":{},"body":{"injectables/NotificationService.html":{}}}],["required",{"_index":884,"title":{},"body":{"injectables/ProductValidator.html":{},"injectables/UserValidator.html":{}}}],["requiredlength",{"_index":1148,"title":{},"body":{"injectables/UserValidator.html":{}}}],["requiredpattern",{"_index":887,"title":{},"body":{"injectables/ProductValidator.html":{},"injectables/UserValidator.html":{}}}],["requis",{"_index":795,"title":{},"body":{"injectables/ProductService.html":{},"injectables/ProductValidator.html":{},"injectables/UserValidator.html":{}}}],["requise",{"_index":930,"title":{},"body":{"injectables/ProductValidator.html":{},"injectables/UserValidator.html":{}}}],["resetform",{"_index":246,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["resources",{"_index":1271,"title":{},"body":{"index.html":{}}}],["response",{"_index":123,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/HttpService.html":{},"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["response.data",{"_index":121,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["response.data._id",{"_index":1097,"title":{},"body":{"components/UserComponent.html":{}}}],["response.data.data",{"_index":119,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["response.interface",{"_index":488,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/IHttpService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["response.interface.ts",{"_index":256,"title":{},"body":{"interfaces/ApiResponse.html":{},"interfaces/HttpResponse.html":{},"coverage.html":{}}}],["response?.data",{"_index":120,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["response?.data?.data",{"_index":117,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["results",{"_index":252,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"interfaces/CreateProductDto.html":{},"interfaces/CreateUserDto.html":{},"components/DeleteModalComponent.html":{},"pipes/FcfaCurrencyPipe.html":{},"interfaces/FindProductDto.html":{},"interfaces/FindUserDto.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"interfaces/HttpResponse.html":{},"injectables/HttpService.html":{},"interfaces/IHttpService.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"injectables/NotificationService.html":{},"interfaces/PaginatedResponse.html":{},"components/PaginationComponent.html":{},"interfaces/PaginationInfo.html":{},"interfaces/Product.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"interfaces/UpdateProductDto.html":{},"interfaces/UpdateUserDto.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"injectables/UserValidator.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":118,"title":{},"body":{"interfaces/ApiError.html":{},"pipes/FcfaCurrencyPipe.html":{},"components/FlashScreenComponent.html":{},"injectables/HttpService.html":{},"injectables/NotificationService.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"injectables/UserValidator.html":{}}}],["returns",{"_index":365,"title":{},"body":{"components/DeleteModalComponent.html":{},"pipes/FcfaCurrencyPipe.html":{},"components/FlashScreenComponent.html":{},"components/FormModalComponent.html":{},"injectables/HttpService.html":{},"interfaces/IHttpService.html":{},"injectables/NotificationService.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"injectables/UserValidator.html":{}}}],["reçues",{"_index":798,"title":{},"body":{"injectables/ProductService.html":{}}}],["root",{"_index":274,"title":{},"body":{"components/AppComponent.html":{},"injectables/HttpService.html":{},"injectables/NotificationService.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{},"injectables/UserService.html":{},"injectables/UserValidator.html":{}}}],["root'},{'name",{"_index":299,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{}}}],["router",{"_index":415,"title":{},"body":{"components/FlashScreenComponent.html":{}}}],["routerlink",{"_index":521,"title":{},"body":{"components/NavbarComponent.html":{}}}],["routerlinkactive",{"_index":522,"title":{},"body":{"components/NavbarComponent.html":{}}}],["routeroutlet",{"_index":275,"title":{},"body":{"components/AppComponent.html":{}}}],["routeroutlet,sidebarcomponent,footercomponent,navbarcomponent",{"_index":292,"title":{},"body":{"components/AppComponent.html":{}}}],["row",{"_index":958,"title":{},"body":{"components/SkeletonComponent.html":{}}}],["run",{"_index":1213,"title":{},"body":{"index.html":{}}}],["runner",{"_index":1255,"title":{},"body":{"index.html":{}}}],["running",{"_index":1217,"title":{},"body":{"index.html":{}}}],["rupture",{"_index":707,"title":{},"body":{"components/ProductComponent.html":{}}}],["rxjs",{"_index":29,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/HttpService.html":{},"interfaces/IHttpService.html":{},"injectables/NotificationService.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":34,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["récupération",{"_index":792,"title":{},"body":{"injectables/ProductService.html":{}}}],["réinitialiser",{"_index":616,"title":{},"body":{"components/PaginationComponent.html":{}}}],["réponse",{"_index":1052,"title":{},"body":{"components/UserComponent.html":{}}}],["réservés",{"_index":442,"title":{},"body":{"components/FooterComponent.html":{}}}],["résultats",{"_index":653,"title":{},"body":{"components/PaginationComponent.html":{}}}],["réussie",{"_index":829,"title":{},"body":{"injectables/ProductService.html":{}}}],["s",{"_index":878,"title":{},"body":{"injectables/ProductValidator.html":{},"injectables/UserValidator.html":{}}}],["save",{"_index":444,"title":{},"body":{"components/FormModalComponent.html":{}}}],["saveproduct",{"_index":186,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["saveuser",{"_index":1003,"title":{},"body":{"components/UserComponent.html":{}}}],["scaffolding",{"_index":1228,"title":{},"body":{"index.html":{}}}],["schematics",{"_index":1236,"title":{},"body":{"index.html":{}}}],["screen",{"_index":410,"title":{},"body":{"components/FlashScreenComponent.html":{}}}],["screen'},{'name",{"_index":304,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{}}}],["screen.component.css",{"_index":412,"title":{},"body":{"components/FlashScreenComponent.html":{}}}],["screen.component.html",{"_index":411,"title":{},"body":{"components/FlashScreenComponent.html":{}}}],["screen.component.ts",{"_index":409,"title":{},"body":{"components/FlashScreenComponent.html":{},"coverage.html":{}}}],["screen.component.ts:12",{"_index":416,"title":{},"body":{"components/FlashScreenComponent.html":{}}}],["screen.component.ts:16",{"_index":417,"title":{},"body":{"components/FlashScreenComponent.html":{}}}],["screen/flash",{"_index":408,"title":{},"body":{"components/FlashScreenComponent.html":{},"coverage.html":{}}}],["search",{"_index":334,"title":{},"body":{"interfaces/CreateUserDto.html":{},"interfaces/FindUserDto.html":{},"interfaces/PaginatedResponse.html":{},"interfaces/PaginationInfo.html":{},"interfaces/UpdateUserDto.html":{},"interfaces/User.html":{}}}],["selectedfile",{"_index":85,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["selector",{"_index":61,"title":{},"body":{"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{}}}],["semibold",{"_index":704,"title":{},"body":{"components/ProductComponent.html":{}}}],["serveonce",{"_index":1216,"title":{},"body":{"index.html":{}}}],["server",{"_index":1210,"title":{},"body":{"index.html":{}}}],["service.interface",{"_index":487,"title":{},"body":{"injectables/HttpService.html":{}}}],["service.interface.ts",{"_index":509,"title":{},"body":{"interfaces/IHttpService.html":{},"coverage.html":{}}}],["service.interface.ts:6",{"_index":512,"title":{},"body":{"interfaces/IHttpService.html":{}}}],["service.interface.ts:7",{"_index":513,"title":{},"body":{"interfaces/IHttpService.html":{}}}],["service.interface.ts:8",{"_index":514,"title":{},"body":{"interfaces/IHttpService.html":{}}}],["service.interface.ts:9",{"_index":510,"title":{},"body":{"interfaces/IHttpService.html":{}}}],["service/notification/notification.service",{"_index":978,"title":{},"body":{"components/ToastComponent.html":{}}}],["service/notification/toast.interface",{"_index":977,"title":{},"body":{"components/ToastComponent.html":{}}}],["service/product.service",{"_index":46,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["service/user.service",{"_index":1036,"title":{},"body":{"components/UserComponent.html":{}}}],["settimeout",{"_index":427,"title":{},"body":{"components/FlashScreenComponent.html":{},"injectables/NotificationService.html":{},"components/SkeletonComponent.html":{},"components/UserComponent.html":{}}}],["shared/component/delete",{"_index":40,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["shared/component/form",{"_index":36,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["shared/component/toast/toast.component",{"_index":50,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["shared/pagination/pagination.component",{"_index":1038,"title":{},"body":{"components/UserComponent.html":{}}}],["shared/service/http/http",{"_index":778,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["shared/service/http/http.service",{"_index":779,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["shared/service/notification/notification.service",{"_index":48,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["shared/skeleton/skeleton.component",{"_index":43,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["show",{"_index":530,"title":{},"body":{"injectables/NotificationService.html":{}}}],["show(message",{"_index":541,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showdeletemodal",{"_index":92,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["showformmodal",{"_index":80,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["si",{"_index":421,"title":{},"body":{"components/FlashScreenComponent.html":{}}}],["sidebar",{"_index":946,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar'},{'name",{"_index":312,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{}}}],["sidebar.component.css",{"_index":948,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.html",{"_index":947,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebarcomponent",{"_index":276,"title":{"components/SidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{},"coverage.html":{}}}],["simplechanges",{"_index":585,"title":{},"body":{"components/PaginationComponent.html":{}}}],["skeleton",{"_index":950,"title":{},"body":{"components/SkeletonComponent.html":{}}}],["skeleton'},{'name",{"_index":313,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{}}}],["skeleton.component.css",{"_index":952,"title":{},"body":{"components/SkeletonComponent.html":{}}}],["skeleton.component.html",{"_index":951,"title":{},"body":{"components/SkeletonComponent.html":{}}}],["skeletoncomponent",{"_index":42,"title":{"components/SkeletonComponent.html":{}},"body":{"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{},"coverage.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"interfaces/CreateProductDto.html":{},"interfaces/CreateUserDto.html":{},"components/DeleteModalComponent.html":{},"pipes/FcfaCurrencyPipe.html":{},"interfaces/FindProductDto.html":{},"interfaces/FindUserDto.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"interfaces/HttpResponse.html":{},"injectables/HttpService.html":{},"interfaces/IHttpService.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"injectables/NotificationService.html":{},"interfaces/PaginatedResponse.html":{},"components/PaginationComponent.html":{},"interfaces/PaginationInfo.html":{},"interfaces/Product.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"interfaces/UpdateProductDto.html":{},"interfaces/UpdateUserDto.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"injectables/UserValidator.html":{},"index.html":{}}}],["speed",{"_index":1249,"title":{},"body":{"index.html":{}}}],["splash",{"_index":422,"title":{},"body":{"components/FlashScreenComponent.html":{}}}],["src/.../app.config.ts",{"_index":1288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":272,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":287,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1168,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/component/flash",{"_index":407,"title":{},"body":{"components/FlashScreenComponent.html":{},"coverage.html":{}}}],["src/app/component/footer/footer.component.ts",{"_index":434,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/component/loader/loader.component.ts",{"_index":515,"title":{},"body":{"components/LoaderComponent.html":{},"coverage.html":{}}}],["src/app/component/navbar/navbar.component.ts",{"_index":519,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/component/sidebar/sidebar.component.ts",{"_index":945,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/app/environneemnt/environment.ts",{"_index":1173,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/fcfa",{"_index":387,"title":{},"body":{"pipes/FcfaCurrencyPipe.html":{},"coverage.html":{}}}],["src/app/pages/product/product.component.ts",{"_index":6,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"coverage.html":{}}}],["src/app/pages/product/product.component.ts:114",{"_index":676,"title":{},"body":{"components/ProductComponent.html":{}}}],["src/app/pages/product/product.component.ts:145",{"_index":680,"title":{},"body":{"components/ProductComponent.html":{}}}],["src/app/pages/product/product.component.ts:175",{"_index":679,"title":{},"body":{"components/ProductComponent.html":{}}}],["src/app/pages/product/product.component.ts:229",{"_index":675,"title":{},"body":{"components/ProductComponent.html":{}}}],["src/app/pages/product/product.component.ts:238",{"_index":666,"title":{},"body":{"components/ProductComponent.html":{}}}],["src/app/pages/product/product.component.ts:256",{"_index":665,"title":{},"body":{"components/ProductComponent.html":{}}}],["src/app/pages/product/product.component.ts:261",{"_index":677,"title":{},"body":{"components/ProductComponent.html":{}}}],["src/app/pages/product/product.component.ts:267",{"_index":667,"title":{},"body":{"components/ProductComponent.html":{}}}],["src/app/pages/product/product.component.ts:282",{"_index":678,"title":{},"body":{"components/ProductComponent.html":{}}}],["src/app/pages/product/product.component.ts:290",{"_index":668,"title":{},"body":{"components/ProductComponent.html":{}}}],["src/app/pages/product/product.component.ts:294",{"_index":670,"title":{},"body":{"components/ProductComponent.html":{}}}],["src/app/pages/product/product.component.ts:298",{"_index":672,"title":{},"body":{"components/ProductComponent.html":{}}}],["src/app/pages/product/product.component.ts:41",{"_index":688,"title":{},"body":{"components/ProductComponent.html":{}}}],["src/app/pages/product/product.component.ts:42",{"_index":687,"title":{},"body":{"components/ProductComponent.html":{}}}],["src/app/pages/product/product.component.ts:43",{"_index":684,"title":{},"body":{"components/ProductComponent.html":{}}}],["src/app/pages/product/product.component.ts:45",{"_index":692,"title":{},"body":{"components/ProductComponent.html":{}}}],["src/app/pages/product/product.component.ts:46",{"_index":683,"title":{},"body":{"components/ProductComponent.html":{}}}],["src/app/pages/product/product.component.ts:47",{"_index":681,"title":{},"body":{"components/ProductComponent.html":{}}}],["src/app/pages/product/product.component.ts:48",{"_index":690,"title":{},"body":{"components/ProductComponent.html":{}}}],["src/app/pages/product/product.component.ts:49",{"_index":685,"title":{},"body":{"components/ProductComponent.html":{}}}],["src/app/pages/product/product.component.ts:51",{"_index":686,"title":{},"body":{"components/ProductComponent.html":{}}}],["src/app/pages/product/product.component.ts:52",{"_index":682,"title":{},"body":{"components/ProductComponent.html":{}}}],["src/app/pages/product/product.component.ts:54",{"_index":691,"title":{},"body":{"components/ProductComponent.html":{}}}],["src/app/pages/product/product.component.ts:55",{"_index":664,"title":{},"body":{"components/ProductComponent.html":{}}}],["src/app/pages/product/product.component.ts:60",{"_index":689,"title":{},"body":{"components/ProductComponent.html":{}}}],["src/app/pages/product/product.component.ts:64",{"_index":674,"title":{},"body":{"components/ProductComponent.html":{}}}],["src/app/pages/product/product.component.ts:69",{"_index":671,"title":{},"body":{"components/ProductComponent.html":{}}}],["src/app/pages/product/product.component.ts:86",{"_index":673,"title":{},"body":{"components/ProductComponent.html":{}}}],["src/app/pages/product/product.ts",{"_index":319,"title":{},"body":{"interfaces/CreateProductDto.html":{},"interfaces/FindProductDto.html":{},"interfaces/Product.html":{},"interfaces/UpdateProductDto.html":{},"coverage.html":{}}}],["src/app/pages/product/product.validator.ts",{"_index":846,"title":{},"body":{"injectables/ProductValidator.html":{},"coverage.html":{}}}],["src/app/pages/product/product.validator.ts:10",{"_index":873,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["src/app/pages/product/product.validator.ts:108",{"_index":860,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["src/app/pages/product/product.validator.ts:11",{"_index":870,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["src/app/pages/product/product.validator.ts:12",{"_index":874,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["src/app/pages/product/product.validator.ts:13",{"_index":872,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["src/app/pages/product/product.validator.ts:134",{"_index":858,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["src/app/pages/product/product.validator.ts:14",{"_index":867,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["src/app/pages/product/product.validator.ts:15",{"_index":868,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["src/app/pages/product/product.validator.ts:17",{"_index":862,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["src/app/pages/product/product.validator.ts:36",{"_index":864,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["src/app/pages/product/product.validator.ts:70",{"_index":866,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["src/app/pages/product/product.validator.ts:9",{"_index":880,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["src/app/pages/product/service/product.service.ts",{"_index":740,"title":{},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["src/app/pages/product/service/product.service.ts:102",{"_index":758,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/pages/product/service/product.service.ts:105",{"_index":770,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/pages/product/service/product.service.ts:11",{"_index":775,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/pages/product/service/product.service.ts:12",{"_index":774,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/pages/product/service/product.service.ts:13",{"_index":751,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/pages/product/service/product.service.ts:141",{"_index":756,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/pages/product/service/product.service.ts:169",{"_index":765,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/pages/product/service/product.service.ts:17",{"_index":760,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/pages/product/service/product.service.ts:39",{"_index":763,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/pages/product/service/product.service.ts:55",{"_index":753,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/pages/product/service/product.service.ts:76",{"_index":767,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/pages/user/service/user.service.ts",{"_index":1117,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/pages/user/service/user.service.ts:12",{"_index":1118,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/pages/user/service/user.service.ts:16",{"_index":1122,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/pages/user/service/user.service.ts:20",{"_index":1123,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/pages/user/service/user.service.ts:24",{"_index":1120,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/pages/user/service/user.service.ts:29",{"_index":1124,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/pages/user/service/user.service.ts:33",{"_index":1121,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/pages/user/user.component.ts",{"_index":985,"title":{},"body":{"components/UserComponent.html":{},"coverage.html":{}}}],["src/app/pages/user/user.component.ts:103",{"_index":1025,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/pages/user/user.component.ts:110",{"_index":1018,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/pages/user/user.component.ts:114",{"_index":1020,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/pages/user/user.component.ts:120",{"_index":1024,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/pages/user/user.component.ts:131",{"_index":1022,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/pages/user/user.component.ts:136",{"_index":1016,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/pages/user/user.component.ts:142",{"_index":1026,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/pages/user/user.component.ts:201",{"_index":1010,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/pages/user/user.component.ts:217",{"_index":1012,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/pages/user/user.component.ts:221",{"_index":1011,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/pages/user/user.component.ts:34",{"_index":1031,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/pages/user/user.component.ts:35",{"_index":1027,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/pages/user/user.component.ts:36",{"_index":1028,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/pages/user/user.component.ts:37",{"_index":1035,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/pages/user/user.component.ts:38",{"_index":1032,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/pages/user/user.component.ts:40",{"_index":1030,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/pages/user/user.component.ts:42",{"_index":1034,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/pages/user/user.component.ts:43",{"_index":1029,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/pages/user/user.component.ts:44",{"_index":1033,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/pages/user/user.component.ts:45",{"_index":1007,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/pages/user/user.component.ts:56",{"_index":1008,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/pages/user/user.component.ts:64",{"_index":1014,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/pages/user/user.component.ts:68",{"_index":1013,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/pages/user/user.ts",{"_index":323,"title":{},"body":{"interfaces/CreateUserDto.html":{},"interfaces/FindUserDto.html":{},"interfaces/PaginatedResponse.html":{},"interfaces/PaginationInfo.html":{},"interfaces/UpdateUserDto.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["src/app/pages/user/user.validator.ts",{"_index":1127,"title":{},"body":{"injectables/UserValidator.html":{},"coverage.html":{}}}],["src/app/pages/user/user.validator.ts:10",{"_index":1141,"title":{},"body":{"injectables/UserValidator.html":{}}}],["src/app/pages/user/user.validator.ts:11",{"_index":1140,"title":{},"body":{"injectables/UserValidator.html":{}}}],["src/app/pages/user/user.validator.ts:13",{"_index":1137,"title":{},"body":{"injectables/UserValidator.html":{}}}],["src/app/pages/user/user.validator.ts:32",{"_index":1139,"title":{},"body":{"injectables/UserValidator.html":{}}}],["src/app/pages/user/user.validator.ts:51",{"_index":1135,"title":{},"body":{"injectables/UserValidator.html":{}}}],["src/app/pages/user/user.validator.ts:79",{"_index":1133,"title":{},"body":{"injectables/UserValidator.html":{}}}],["src/app/pages/user/user.validator.ts:9",{"_index":1144,"title":{},"body":{"injectables/UserValidator.html":{}}}],["src/app/shared/component/delete",{"_index":342,"title":{},"body":{"components/DeleteModalComponent.html":{},"coverage.html":{}}}],["src/app/shared/component/form",{"_index":443,"title":{},"body":{"components/FormModalComponent.html":{},"coverage.html":{}}}],["src/app/shared/component/toast/toast.component.ts",{"_index":968,"title":{},"body":{"components/ToastComponent.html":{},"coverage.html":{}}}],["src/app/shared/component/toast/toast.component.ts:14",{"_index":973,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/shared/component/toast/toast.component.ts:20",{"_index":976,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/shared/component/toast/toast.component.ts:22",{"_index":975,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/shared/pagination/pagination.component.ts",{"_index":560,"title":{},"body":{"components/PaginationComponent.html":{},"coverage.html":{}}}],["src/app/shared/pagination/pagination.component.ts:12",{"_index":578,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/shared/pagination/pagination.component.ts:13",{"_index":580,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/shared/pagination/pagination.component.ts:14",{"_index":581,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/shared/pagination/pagination.component.ts:16",{"_index":593,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/shared/pagination/pagination.component.ts:17",{"_index":598,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/shared/pagination/pagination.component.ts:18",{"_index":597,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/shared/pagination/pagination.component.ts:19",{"_index":599,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/shared/pagination/pagination.component.ts:22",{"_index":594,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/shared/pagination/pagination.component.ts:24",{"_index":596,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/shared/pagination/pagination.component.ts:25",{"_index":595,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/shared/pagination/pagination.component.ts:27",{"_index":586,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/shared/pagination/pagination.component.ts:37",{"_index":591,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/shared/pagination/pagination.component.ts:44",{"_index":590,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/shared/pagination/pagination.component.ts:53",{"_index":583,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/shared/pagination/pagination.component.ts:74",{"_index":582,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/shared/pagination/pagination.component.ts:79",{"_index":589,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/shared/service/http/api",{"_index":255,"title":{},"body":{"interfaces/ApiResponse.html":{},"coverage.html":{}}}],["src/app/shared/service/http/http",{"_index":456,"title":{},"body":{"interfaces/HttpResponse.html":{},"interfaces/IHttpService.html":{},"coverage.html":{}}}],["src/app/shared/service/http/http.service.ts",{"_index":460,"title":{},"body":{"injectables/HttpService.html":{},"coverage.html":{}}}],["src/app/shared/service/http/http.service.ts:13",{"_index":467,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/shared/service/http/http.service.ts:17",{"_index":476,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/shared/service/http/http.service.ts:26",{"_index":474,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/shared/service/http/http.service.ts:42",{"_index":479,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/shared/service/http/http.service.ts:56",{"_index":481,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/shared/service/http/http.service.ts:70",{"_index":471,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/shared/service/notification/notification.service.ts",{"_index":526,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{}}}],["src/app/shared/service/notification/notification.service.ts:10",{"_index":549,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/shared/service/notification/notification.service.ts:12",{"_index":536,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/shared/service/notification/notification.service.ts:16",{"_index":543,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/shared/service/notification/notification.service.ts:31",{"_index":540,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/shared/service/notification/notification.service.ts:36",{"_index":546,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/shared/service/notification/notification.service.ts:40",{"_index":535,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/shared/service/notification/notification.service.ts:44",{"_index":538,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/shared/service/notification/notification.service.ts:48",{"_index":548,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/shared/service/notification/toast.interface.ts",{"_index":967,"title":{},"body":{"interfaces/Toast.html":{},"coverage.html":{}}}],["src/app/shared/skeleton/skeleton.component.ts",{"_index":949,"title":{},"body":{"components/SkeletonComponent.html":{},"coverage.html":{}}}],["src/app/shared/skeleton/skeleton.component.ts:12",{"_index":962,"title":{},"body":{"components/SkeletonComponent.html":{}}}],["src/app/shared/skeleton/skeleton.component.ts:13",{"_index":954,"title":{},"body":{"components/SkeletonComponent.html":{}}}],["src/app/shared/skeleton/skeleton.component.ts:14",{"_index":955,"title":{},"body":{"components/SkeletonComponent.html":{}}}],["src/app/shared/skeleton/skeleton.component.ts:17",{"_index":963,"title":{},"body":{"components/SkeletonComponent.html":{}}}],["standalone",{"_index":63,"title":{},"body":{"interfaces/ApiError.html":{},"pipes/FcfaCurrencyPipe.html":{},"components/FooterComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{}}}],["standalone:true",{"_index":438,"title":{},"body":{"components/FooterComponent.html":{},"components/ToastComponent.html":{}}}],["start",{"_index":1211,"title":{},"body":{"index.html":{}}}],["started",{"_index":1200,"title":{"index.html":{}},"body":{}}],["startindex",{"_index":629,"title":{},"body":{"components/PaginationComponent.html":{}}}],["startitem",{"_index":568,"title":{},"body":{"components/PaginationComponent.html":{}}}],["statements",{"_index":1166,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":259,"title":{},"body":{"interfaces/ApiResponse.html":{},"interfaces/HttpResponse.html":{},"injectables/HttpService.html":{}}}],["stock",{"_index":706,"title":{},"body":{"components/ProductComponent.html":{}}}],["stocker",{"_index":1068,"title":{},"body":{"components/UserComponent.html":{}}}],["store",{"_index":1242,"title":{},"body":{"index.html":{}}}],["string",{"_index":59,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"interfaces/CreateProductDto.html":{},"interfaces/CreateUserDto.html":{},"components/DeleteModalComponent.html":{},"pipes/FcfaCurrencyPipe.html":{},"interfaces/FindProductDto.html":{},"interfaces/FindUserDto.html":{},"components/FormModalComponent.html":{},"interfaces/HttpResponse.html":{},"injectables/HttpService.html":{},"interfaces/IHttpService.html":{},"injectables/NotificationService.html":{},"interfaces/PaginatedResponse.html":{},"components/PaginationComponent.html":{},"interfaces/PaginationInfo.html":{},"interfaces/Product.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{},"components/SkeletonComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"interfaces/UpdateProductDto.html":{},"interfaces/UpdateUserDto.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"injectables/UserValidator.html":{}}}],["styleurl",{"_index":68,"title":{},"body":{"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{}}}],["subscribe(products",{"_index":138,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["success",{"_index":531,"title":{},"body":{"injectables/NotificationService.html":{},"interfaces/Toast.html":{}}}],["success(message",{"_index":545,"title":{},"body":{"injectables/NotificationService.html":{}}}],["succès",{"_index":207,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["such",{"_index":1237,"title":{},"body":{"index.html":{}}}],["suits",{"_index":1268,"title":{},"body":{"index.html":{}}}],["suivant",{"_index":655,"title":{},"body":{"components/PaginationComponent.html":{}}}],["support",{"_index":938,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["suppression",{"_index":236,"title":{},"body":{"interfaces/ApiError.html":{},"components/DeleteModalComponent.html":{},"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["supprim",{"_index":234,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["supprimer",{"_index":377,"title":{},"body":{"components/DeleteModalComponent.html":{}}}],["sur",{"_index":606,"title":{},"body":{"components/PaginationComponent.html":{}}}],["switch",{"_index":907,"title":{},"body":{"injectables/ProductValidator.html":{},"injectables/UserValidator.html":{}}}],["symbole",{"_index":406,"title":{},"body":{"pipes/FcfaCurrencyPipe.html":{}}}],["sûr",{"_index":375,"title":{},"body":{"components/DeleteModalComponent.html":{}}}],["t",{"_index":261,"title":{},"body":{"interfaces/ApiResponse.html":{},"interfaces/CreateUserDto.html":{},"interfaces/FindUserDto.html":{},"components/FlashScreenComponent.html":{},"interfaces/HttpResponse.html":{},"injectables/HttpService.html":{},"interfaces/IHttpService.html":{},"interfaces/PaginatedResponse.html":{},"interfaces/PaginationInfo.html":{},"interfaces/UpdateUserDto.html":{},"interfaces/User.html":{}}}],["table",{"_index":957,"title":{},"body":{"components/SkeletonComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1185,"title":{},"body":{"coverage.html":{}}}],["teamx",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["teamxgroupangular",{"_index":1201,"title":{},"body":{"index.html":{}}}],["template",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{}}}],["templateref",{"_index":447,"title":{},"body":{"components/FormModalComponent.html":{}}}],["templateurl",{"_index":66,"title":{},"body":{"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{}}}],["tes",{"_index":373,"title":{},"body":{"components/DeleteModalComponent.html":{}}}],["test",{"_index":1254,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1262,"title":{},"body":{"index.html":{}}}],["testrunning",{"_index":1259,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1251,"title":{},"body":{"index.html":{}}}],["text",{"_index":699,"title":{},"body":{"components/ProductComponent.html":{}}}],["this.address_max_length",{"_index":1146,"title":{},"body":{"injectables/UserValidator.html":{}}}],["this.address_min_length",{"_index":1158,"title":{},"body":{"injectables/UserValidator.html":{}}}],["this.allitems.length",{"_index":611,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.allitems.slice(startindex",{"_index":633,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.allowed_file_types",{"_index":903,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["this.allowed_file_types.includes(file.type",{"_index":900,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["this.allusers",{"_index":1060,"title":{},"body":{"components/UserComponent.html":{}}}],["this.calculateitemrange",{"_index":625,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.calculatevisiblepages",{"_index":624,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.close",{"_index":371,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/FormModalComponent.html":{}}}],["this.createformdata(productdata",{"_index":800,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.createuserform",{"_index":1041,"title":{},"body":{"components/UserComponent.html":{}}}],["this.currentpage",{"_index":615,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.currentpageitems",{"_index":632,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.currentproduct",{"_index":244,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["this.currentproduct._id",{"_index":196,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["this.delete$.emit(this.entitytodelete",{"_index":370,"title":{},"body":{"components/DeleteModalComponent.html":{}}}],["this.displayedusers",{"_index":1065,"title":{},"body":{"components/UserComponent.html":{}}}],["this.enditem",{"_index":644,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.endpoint}${queryparams.tostring",{"_index":787,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.fadeout",{"_index":428,"title":{},"body":{"components/FlashScreenComponent.html":{}}}],["this.fb.group",{"_index":103,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["this.formerrors",{"_index":169,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["this.formerrors['image",{"_index":150,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["this.formerrors[fieldname",{"_index":248,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["this.formerrors[key",{"_index":178,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["this.getheaders(data",{"_index":504,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.delete(`${this.baseurl}${endpoint",{"_index":508,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.delete(`${this.endpoint}/${id",{"_index":815,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["this.http.get(`${this.baseurl}${endpoint",{"_index":500,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.get(`${this.endpoint}/${id",{"_index":1126,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`${this.endpoint}/${id}`).pipe",{"_index":796,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.http.get(this.endpoint",{"_index":1125,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(url).pipe",{"_index":789,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.http.post(`${this.baseurl}${endpoint",{"_index":505,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.post(this.endpoint",{"_index":804,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["this.http.put(`${this.baseurl}${endpoint",{"_index":507,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.put(`${this.endpoint}/${id",{"_index":810,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["this.initform",{"_index":100,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["this.isediting",{"_index":182,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["this.isloading",{"_index":114,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["this.lastaddedid",{"_index":1056,"title":{},"body":{"components/UserComponent.html":{}}}],["this.limit",{"_index":614,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.loading",{"_index":965,"title":{},"body":{"components/SkeletonComponent.html":{},"components/UserComponent.html":{}}}],["this.loadproducts",{"_index":99,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["this.loadusers().subscribe(users",{"_index":1059,"title":{},"body":{"components/UserComponent.html":{}}}],["this.logformdata(formdata",{"_index":803,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.max_file_size",{"_index":825,"title":{},"body":{"injectables/ProductService.html":{},"injectables/ProductValidator.html":{}}}],["this.max_price",{"_index":894,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["this.max_price.tolocalestring",{"_index":929,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["this.max_quantity",{"_index":899,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["this.max_quantity.tolocalestring",{"_index":934,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["this.min_price",{"_index":927,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["this.min_quantity",{"_index":933,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["this.name_pattern",{"_index":888,"title":{},"body":{"injectables/ProductValidator.html":{},"injectables/UserValidator.html":{}}}],["this.name_pattern.test(value",{"_index":885,"title":{},"body":{"injectables/ProductValidator.html":{},"injectables/UserValidator.html":{}}}],["this.notificationservice.error(\"erreur",{"_index":162,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["this.notificationservice.error('erreur",{"_index":130,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["this.notificationservice.error('produit",{"_index":228,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["this.notificationservice.error(errormessage",{"_index":225,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["this.notificationservice.error(errormessages[0",{"_index":192,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["this.notificationservice.error(this.formerrors['image",{"_index":152,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["this.notificationservice.gettoasts",{"_index":980,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.notificationservice.remove(id",{"_index":981,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.notificationservice.success('produit",{"_index":204,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["this.notificationservice.success('utilisateur",{"_index":1092,"title":{},"body":{"components/UserComponent.html":{}}}],["this.pageitemschange.emit(this.currentpageitems",{"_index":635,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.previewimage",{"_index":155,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["this.productform",{"_index":102,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["this.productform.get(fieldname)?.touched",{"_index":251,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["this.productform.get(key",{"_index":175,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["this.productform.patchvalue",{"_index":240,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["this.productform.value",{"_index":195,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["this.productservice.create(createdata).topromise",{"_index":210,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["this.productservice.delete(product._id).subscribe",{"_index":232,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["this.productservice.getall().pipe",{"_index":115,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["this.productservice.update(this.currentproduct._id",{"_index":202,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["this.productssubject.asobservable",{"_index":78,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["this.productssubject.next(products",{"_index":139,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["this.producttodelete",{"_index":229,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["this.productvalidator.geterrormessage",{"_index":179,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["this.productvalidator.geterrormessage('image",{"_index":151,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["this.productvalidator.validateimage(file",{"_index":149,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["this.productvalidator.validateimage(this.selectedfile",{"_index":184,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["this.productvalidator.validatename(control",{"_index":107,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["this.productvalidator.validateprice(control",{"_index":110,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["this.productvalidator.validatequantity(control",{"_index":112,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["this.refreshusers",{"_index":1045,"title":{},"body":{"components/UserComponent.html":{}}}],["this.remove(id",{"_index":555,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.resetform",{"_index":213,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["this.router.navigate(['/users",{"_index":426,"title":{},"body":{"components/FlashScreenComponent.html":{}}}],["this.save$.emit(this.currententity",{"_index":453,"title":{},"body":{"components/FormModalComponent.html":{}}}],["this.selectedfile",{"_index":154,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["this.show(message",{"_index":559,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.showdeletemodal",{"_index":230,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["this.showformmodal",{"_index":212,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["this.startitem",{"_index":643,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.toasts",{"_index":979,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toasts$.asobservable",{"_index":551,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.toasts$.next([...this.toasts$.value",{"_index":554,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.toasts$.next(toasts",{"_index":558,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.toasts$.value.filter(toast",{"_index":556,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.total",{"_index":610,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.totalpages",{"_index":612,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.updatecurrentpageitems",{"_index":626,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.updatepage",{"_index":620,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.userform",{"_index":1040,"title":{},"body":{"components/UserComponent.html":{}}}],["this.userform.get(fieldname",{"_index":1075,"title":{},"body":{"components/UserComponent.html":{}}}],["this.userform.get(key",{"_index":1082,"title":{},"body":{"components/UserComponent.html":{}}}],["this.userform.invalid",{"_index":1083,"title":{},"body":{"components/UserComponent.html":{}}}],["this.userform.patchvalue",{"_index":1071,"title":{},"body":{"components/UserComponent.html":{}}}],["this.userform.reset",{"_index":1066,"title":{},"body":{"components/UserComponent.html":{}}}],["this.userform.valid",{"_index":1102,"title":{},"body":{"components/UserComponent.html":{}}}],["this.userform.value",{"_index":1084,"title":{},"body":{"components/UserComponent.html":{}}}],["this.userservice.create(createdto).subscribe",{"_index":1096,"title":{},"body":{"components/UserComponent.html":{}}}],["this.userservice.delete(user._id).subscribe",{"_index":1100,"title":{},"body":{"components/UserComponent.html":{}}}],["this.userservice.getall().pipe",{"_index":1046,"title":{},"body":{"components/UserComponent.html":{}}}],["this.userservice.update(this.usertodelete._id",{"_index":1090,"title":{},"body":{"components/UserComponent.html":{}}}],["this.usertodelete",{"_index":1067,"title":{},"body":{"components/UserComponent.html":{}}}],["this.usertodelete?._id",{"_index":1085,"title":{},"body":{"components/UserComponent.html":{}}}],["this.uservalidator.geterrormessage(fieldname",{"_index":1104,"title":{},"body":{"components/UserComponent.html":{}}}],["this.uservalidator.validateaddress.bind(this.uservalidator",{"_index":1044,"title":{},"body":{"components/UserComponent.html":{}}}],["this.uservalidator.validatefirstname.bind(this.uservalidator",{"_index":1042,"title":{},"body":{"components/UserComponent.html":{}}}],["this.uservalidator.validatelastname.bind(this.uservalidator",{"_index":1043,"title":{},"body":{"components/UserComponent.html":{}}}],["this.validateform",{"_index":188,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["this.validateproductdata(productdata",{"_index":799,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.visible",{"_index":368,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/FormModalComponent.html":{}}}],["this.visiblechange.emit(false",{"_index":369,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/FormModalComponent.html":{}}}],["this.visiblepages",{"_index":642,"title":{},"body":{"components/PaginationComponent.html":{}}}],["throw",{"_index":793,"title":{},"body":{"injectables/ProductService.html":{}}}],["throwerror",{"_index":777,"title":{},"body":{"injectables/ProductService.html":{}}}],["tirets",{"_index":919,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["title",{"_index":281,"title":{},"body":{"components/AppComponent.html":{}}}],["toast",{"_index":542,"title":{"interfaces/Toast.html":{}},"body":{"injectables/NotificationService.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["toast'},{'name",{"_index":314,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{}}}],["toast.component.css",{"_index":970,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.component.html",{"_index":969,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.id",{"_index":557,"title":{},"body":{"injectables/NotificationService.html":{},"components/ToastComponent.html":{}}}],["toast.interface",{"_index":550,"title":{},"body":{"injectables/NotificationService.html":{}}}],["toast.message",{"_index":984,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast['type",{"_index":552,"title":{},"body":{"injectables/NotificationService.html":{}}}],["toastcomponent",{"_index":49,"title":{"components/ToastComponent.html":{}},"body":{"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{},"coverage.html":{}}}],["toasts",{"_index":527,"title":{},"body":{"injectables/NotificationService.html":{},"components/ToastComponent.html":{}}}],["tools",{"_index":1231,"title":{},"body":{"index.html":{}}}],["total",{"_index":266,"title":{},"body":{"interfaces/ApiResponse.html":{},"interfaces/HttpResponse.html":{},"components/PaginationComponent.html":{}}}],["totalitems",{"_index":336,"title":{},"body":{"interfaces/CreateUserDto.html":{},"interfaces/FindUserDto.html":{},"interfaces/PaginatedResponse.html":{},"interfaces/PaginationInfo.html":{},"interfaces/UpdateUserDto.html":{},"interfaces/User.html":{}}}],["totalpages",{"_index":338,"title":{},"body":{"interfaces/CreateUserDto.html":{},"interfaces/FindUserDto.html":{},"interfaces/PaginatedResponse.html":{},"components/PaginationComponent.html":{},"interfaces/PaginationInfo.html":{},"interfaces/UpdateUserDto.html":{},"interfaces/User.html":{}}}],["touchés",{"_index":1080,"title":{},"body":{"components/UserComponent.html":{}}}],["tous",{"_index":440,"title":{},"body":{"components/FooterComponent.html":{},"components/UserComponent.html":{}}}],["toutes",{"_index":600,"title":{},"body":{"components/PaginationComponent.html":{}}}],["track",{"_index":983,"title":{},"body":{"components/ToastComponent.html":{}}}],["transform",{"_index":389,"title":{},"body":{"pipes/FcfaCurrencyPipe.html":{}}}],["transform(value",{"_index":390,"title":{},"body":{"pipes/FcfaCurrencyPipe.html":{}}}],["tre",{"_index":924,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["tree",{"_index":271,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{}}}],["trop",{"_index":826,"title":{},"body":{"injectables/ProductService.html":{},"injectables/ProductValidator.html":{}}}],["trouv",{"_index":1110,"title":{},"body":{"components/UserComponent.html":{}}}],["trouver",{"_index":1051,"title":{},"body":{"components/UserComponent.html":{}}}],["true",{"_index":64,"title":{},"body":{"interfaces/ApiError.html":{},"pipes/FcfaCurrencyPipe.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{},"injectables/UserValidator.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":193,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{}}}],["tslib",{"_index":1195,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":12,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"interfaces/CreateProductDto.html":{},"interfaces/CreateUserDto.html":{},"components/DeleteModalComponent.html":{},"pipes/FcfaCurrencyPipe.html":{},"interfaces/FindProductDto.html":{},"interfaces/FindUserDto.html":{},"components/FlashScreenComponent.html":{},"components/FormModalComponent.html":{},"interfaces/HttpResponse.html":{},"injectables/HttpService.html":{},"interfaces/IHttpService.html":{},"injectables/NotificationService.html":{},"interfaces/PaginatedResponse.html":{},"components/PaginationComponent.html":{},"interfaces/PaginationInfo.html":{},"interfaces/Product.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{},"components/SkeletonComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"interfaces/UpdateProductDto.html":{},"interfaces/UpdateUserDto.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"injectables/UserValidator.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["télécharger",{"_index":715,"title":{},"body":{"components/ProductComponent.html":{}}}],["un",{"_index":694,"title":{},"body":{"components/ProductComponent.html":{},"injectables/ProductValidator.html":{},"components/UserComponent.html":{}}}],["undefined",{"_index":88,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{}}}],["une",{"_index":711,"title":{},"body":{"components/ProductComponent.html":{}}}],["uniquement",{"_index":1152,"title":{},"body":{"injectables/UserValidator.html":{}}}],["unit",{"_index":1250,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":215,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["update",{"_index":749,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["update(id",{"_index":766,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["updatecurrentpageitems",{"_index":574,"title":{},"body":{"components/PaginationComponent.html":{}}}],["updatedat",{"_index":330,"title":{},"body":{"interfaces/CreateUserDto.html":{},"interfaces/FindUserDto.html":{},"interfaces/PaginatedResponse.html":{},"interfaces/PaginationInfo.html":{},"interfaces/UpdateUserDto.html":{},"interfaces/User.html":{}}}],["updatedata",{"_index":197,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["updatedata).topromise",{"_index":203,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["updatedto",{"_index":1086,"title":{},"body":{"components/UserComponent.html":{}}}],["updatedto).subscribe",{"_index":1091,"title":{},"body":{"components/UserComponent.html":{}}}],["updatepage",{"_index":575,"title":{},"body":{"components/PaginationComponent.html":{}}}],["updateproductdto",{"_index":52,"title":{"interfaces/UpdateProductDto.html":{}},"body":{"interfaces/ApiError.html":{},"interfaces/CreateProductDto.html":{},"interfaces/FindProductDto.html":{},"interfaces/Product.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{},"interfaces/UpdateProductDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":332,"title":{"interfaces/UpdateUserDto.html":{}},"body":{"interfaces/CreateUserDto.html":{},"interfaces/FindUserDto.html":{},"interfaces/PaginatedResponse.html":{},"interfaces/PaginationInfo.html":{},"interfaces/UpdateUserDto.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"injectables/UserValidator.html":{},"coverage.html":{}}}],["updating",{"_index":811,"title":{},"body":{"injectables/ProductService.html":{},"components/UserComponent.html":{}}}],["url",{"_index":786,"title":{},"body":{"injectables/ProductService.html":{}}}],["urlsearchparams",{"_index":782,"title":{},"body":{"injectables/ProductService.html":{}}}],["use",{"_index":1256,"title":{},"body":{"index.html":{}}}],["user",{"_index":316,"title":{"interfaces/User.html":{}},"body":{"components/AppComponent.html":{},"interfaces/CreateUserDto.html":{},"components/DeleteModalComponent.html":{},"interfaces/FindUserDto.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"interfaces/PaginatedResponse.html":{},"components/PaginationComponent.html":{},"interfaces/PaginationInfo.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"interfaces/UpdateUserDto.html":{},"interfaces/User.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"injectables/UserValidator.html":{},"coverage.html":{}}}],["user._id",{"_index":1099,"title":{},"body":{"components/UserComponent.html":{}}}],["user.address",{"_index":1074,"title":{},"body":{"components/UserComponent.html":{}}}],["user.component.css",{"_index":989,"title":{},"body":{"components/UserComponent.html":{}}}],["user.component.html",{"_index":988,"title":{},"body":{"components/UserComponent.html":{}}}],["user.firstname",{"_index":1072,"title":{},"body":{"components/UserComponent.html":{}}}],["user.lastname",{"_index":1073,"title":{},"body":{"components/UserComponent.html":{}}}],["user.validator",{"_index":1037,"title":{},"body":{"components/UserComponent.html":{}}}],["usercomponent",{"_index":315,"title":{"components/UserComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{},"coverage.html":{}}}],["userform",{"_index":993,"title":{},"body":{"components/UserComponent.html":{}}}],["users",{"_index":1049,"title":{},"body":{"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["users.sort((a",{"_index":1053,"title":{},"body":{"components/UserComponent.html":{}}}],["userservice",{"_index":1005,"title":{"injectables/UserService.html":{}},"body":{"components/UserComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usertodelete",{"_index":994,"title":{},"body":{"components/UserComponent.html":{}}}],["uservalidator",{"_index":1006,"title":{"injectables/UserValidator.html":{}},"body":{"components/UserComponent.html":{},"injectables/UserValidator.html":{},"coverage.html":{}}}],["using",{"_index":1204,"title":{},"body":{"index.html":{}}}],["utilisateur",{"_index":1106,"title":{},"body":{"components/UserComponent.html":{}}}],["utilisateurs",{"_index":525,"title":{},"body":{"components/NavbarComponent.html":{},"components/SidebarComponent.html":{},"components/UserComponent.html":{}}}],["utilisez",{"_index":939,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["valeurs",{"_index":650,"title":{},"body":{"components/PaginationComponent.html":{}}}],["validate",{"_index":171,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["validateaddress",{"_index":1130,"title":{},"body":{"injectables/UserValidator.html":{}}}],["validateaddress(control",{"_index":1134,"title":{},"body":{"injectables/UserValidator.html":{}}}],["validatefirstname",{"_index":1131,"title":{},"body":{"injectables/UserValidator.html":{}}}],["validatefirstname(control",{"_index":1136,"title":{},"body":{"injectables/UserValidator.html":{}}}],["validateform",{"_index":167,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["validateimage",{"_index":853,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["validateimage(file",{"_index":859,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["validatelastname",{"_index":1132,"title":{},"body":{"injectables/UserValidator.html":{}}}],["validatelastname(control",{"_index":1138,"title":{},"body":{"injectables/UserValidator.html":{}}}],["validatename",{"_index":854,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["validatename(control",{"_index":861,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["validateprice",{"_index":855,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["validateprice(control",{"_index":863,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["validateproductdata",{"_index":750,"title":{},"body":{"injectables/ProductService.html":{}}}],["validateproductdata(data",{"_index":768,"title":{},"body":{"injectables/ProductService.html":{}}}],["validatequantity",{"_index":856,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["validatequantity(control",{"_index":865,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["validationerrors",{"_index":148,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"injectables/ProductValidator.html":{},"injectables/UserValidator.html":{}}}],["validators",{"_index":24,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{},"components/UserComponent.html":{}}}],["validators.required",{"_index":105,"title":{},"body":{"interfaces/ApiError.html":{},"components/ProductComponent.html":{}}}],["valide",{"_index":913,"title":{},"body":{"injectables/ProductValidator.html":{},"injectables/UserValidator.html":{}}}],["value",{"_index":283,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"pipes/FcfaCurrencyPipe.html":{},"components/FlashScreenComponent.html":{},"components/FormModalComponent.html":{},"injectables/HttpService.html":{},"injectables/NotificationService.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductValidator.html":{},"components/SkeletonComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"injectables/UserValidator.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":1145,"title":{},"body":{"injectables/UserValidator.html":{}}}],["value.name",{"_index":844,"title":{},"body":{"injectables/ProductService.html":{}}}],["value.tostring",{"_index":785,"title":{},"body":{"injectables/ProductService.html":{}}}],["var",{"_index":297,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FooterComponent.html":{},"components/FormModalComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"components/SidebarComponent.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{}}}],["variable",{"_index":1169,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1287,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1207,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vide",{"_index":822,"title":{},"body":{"injectables/ProductService.html":{}}}],["visible",{"_index":354,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/FormModalComponent.html":{}}}],["visiblechange",{"_index":356,"title":{},"body":{"components/DeleteModalComponent.html":{},"components/FormModalComponent.html":{}}}],["visiblepages",{"_index":569,"title":{},"body":{"components/PaginationComponent.html":{}}}],["visibles",{"_index":605,"title":{},"body":{"components/PaginationComponent.html":{}}}],["visit",{"_index":1277,"title":{},"body":{"index.html":{}}}],["void",{"_index":98,"title":{},"body":{"interfaces/ApiError.html":{},"components/DeleteModalComponent.html":{},"components/FlashScreenComponent.html":{},"components/FormModalComponent.html":{},"injectables/NotificationService.html":{},"components/PaginationComponent.html":{},"components/ProductComponent.html":{},"injectables/ProductService.html":{},"components/SkeletonComponent.html":{},"components/ToastComponent.html":{},"components/UserComponent.html":{}}}],["volumineux",{"_index":827,"title":{},"body":{"injectables/ProductService.html":{},"injectables/ProductValidator.html":{}}}],["votre",{"_index":697,"title":{},"body":{"components/ProductComponent.html":{}}}],["vouloir",{"_index":376,"title":{},"body":{"components/DeleteModalComponent.html":{}}}],["vous",{"_index":374,"title":{},"body":{"components/DeleteModalComponent.html":{}}}],["vérifier",{"_index":420,"title":{},"body":{"components/FlashScreenComponent.html":{}}}],["warning",{"_index":532,"title":{},"body":{"injectables/NotificationService.html":{},"interfaces/Toast.html":{}}}],["warning(message",{"_index":547,"title":{},"body":{"injectables/NotificationService.html":{}}}],["whenever",{"_index":1224,"title":{},"body":{"index.html":{}}}],["yes",{"_index":511,"title":{},"body":{"interfaces/IHttpService.html":{},"injectables/NotificationService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["z",{"_index":1142,"title":{},"body":{"injectables/UserValidator.html":{}}}],["z0",{"_index":876,"title":{},"body":{"injectables/ProductValidator.html":{}}}],["za",{"_index":875,"title":{},"body":{"injectables/ProductValidator.html":{},"injectables/UserValidator.html":{}}}],["zone.js",{"_index":1197,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ApiError.html":{"url":"interfaces/ApiError.html","title":"interface - ApiError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/product/product.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule, FormGroup, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map, catchError, finalize, delay } from 'rxjs/operators';\nimport { FormModalComponent } from '../../shared/component/form-modal/form-modal.component';\nimport { DeleteModalComponent } from '../../shared/component/delete-modal/delete-modal.component';\nimport { SkeletonComponent } from '../../shared/skeleton/skeleton.component';\nimport { Product } from './product';\nimport { ProductService } from './service/product.service';\nimport { NotificationService } from '../../shared/service/notification/notification.service';\nimport { ToastComponent } from '../../shared/component/toast/toast.component';\nimport { CreateProductDto, UpdateProductDto } from './product';\nimport { FcfaCurrencyPipe } from '../../fcfa-currency.pipe';\nimport { ProductValidator } from './product.validator';\n\ninterface ApiError {\n  error?: {\n    message?: string;\n    errors?: string[];\n  }; \n}\n\n@Component({\n  selector: 'app-product',\n  standalone: true,\n  imports: [\n    ToastComponent,\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FormModalComponent,\n    DeleteModalComponent,\n    FcfaCurrencyPipe,\n    SkeletonComponent\n  ],\n  templateUrl: './product.component.html',\n  styleUrl: './product.component.css'\n})\nexport class ProductComponent implements OnInit {\n  private productsSubject = new BehaviorSubject([]);\n  products$ = this.productsSubject.asObservable();\n  isLoading = true;\n  \n  showFormModal = false;\n  isEditing = false;\n  currentProduct: Partial = {};\n  selectedFile: File | null = null;\n  previewImage: string | undefined | null | File = null;\n\n  productForm!: FormGroup;\n  formErrors: { [key: string]: string } = {};\n\n  showDeleteModal = false;\n  productToDelete: Product | null = null;\n\n  constructor(\n    private productService: ProductService,\n    private notificationService: NotificationService,\n    public productValidator: ProductValidator,  \n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.loadProducts();\n    this.initForm();\n  }\n\n  private initForm(): void {\n    this.productForm = this.fb.group({\n      name: ['', [\n        Validators.required,\n        (control: AbstractControl) => this.productValidator.validateName(control)\n      ]],\n      price: [0, [\n        Validators.required,\n        (control: AbstractControl) => this.productValidator.validatePrice(control)\n      ]],\n      quantity: [0, [\n        Validators.required,\n        (control: AbstractControl) => this.productValidator.validateQuantity(control)\n      ]]\n    });\n  }\n\n  private loadProducts(): void {\n    this.isLoading = true;\n    this.productService.getAll().pipe(\n      map((response: any) => {\n        if (response?.data?.data) {\n          return response.data.data;\n        } else if (response?.data) {\n          return response.data;\n        } else if (Array.isArray(response)) {\n          return response;\n        }\n        console.error('Format de données invalide:', response);\n        return [];\n      }),\n      delay(800),\n      catchError(error => {\n        this.notificationService.error('Erreur lors du chargement des produits');\n        console.error('Error loading products:', error);\n        return [];\n      }),\n      finalize(() => {\n        this.isLoading = false;\n      })\n    ).subscribe(products => {\n      this.productsSubject.next(products);\n    });\n  }\n\n  onFileSelected(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    if (input.files && input.files[0]) {\n      const file = input.files[0];\n      \n      const validationErrors = this.productValidator.validateImage(file);\n      if (validationErrors) {\n        this.formErrors['image'] = this.productValidator.getErrorMessage('image', validationErrors);\n        this.notificationService.error(this.formErrors['image']);\n        input.value = '';\n        this.selectedFile = null;\n        this.previewImage = null;\n        return;\n      }\n\n      this.selectedFile = file;\n      this.formErrors['image'] = '';\n      \n      const reader = new FileReader();\n      reader.onload = (e) => {\n        this.previewImage = e.target?.result as string;\n      };\n      reader.onerror = () => {\n        this.notificationService.error(\"Erreur lors de la lecture du fichier\");\n        this.selectedFile = null;\n        this.previewImage = null;\n      };\n      reader.readAsDataURL(file);\n    }\n  }\n\n  validateForm(): boolean {\n    this.formErrors = {};\n    let isValid = true;\n\n    // Validate form fields\n    Object.keys(this.productForm.controls).forEach(key => {\n      const control = this.productForm.get(key);\n      control?.markAsTouched();\n      \n      if (control?.invalid) {\n        this.formErrors[key] = this.productValidator.getErrorMessage(\n          key, \n          control.errors || {}\n        );\n        isValid = false;\n      }\n    });\n\n    // Validate image for new products\n    if (!this.isEditing) {\n      const imageErrors = this.productValidator.validateImage(this.selectedFile);\n      if (imageErrors) {\n        this.formErrors['image'] = this.productValidator.getErrorMessage('image', imageErrors);\n        isValid = false;\n      }\n    }\n\n    return isValid;\n  }\n\n  async saveProduct(): Promise {\n    if (!this.validateForm()) {\n      const errorMessages = Object.values(this.formErrors);\n      if (errorMessages.length > 0) {\n        this.notificationService.error(errorMessages[0]);\n      }\n      return;\n    }\n\n    try {\n      this.isLoading = true;\n      \n      const formValue = this.productForm.value;\n      \n      if (this.isEditing && this.currentProduct._id) {\n        const updateData: UpdateProductDto = {\n          name: formValue.name,\n          price: formValue.price,\n          quantity: formValue.quantity,\n          image: this.selectedFile || undefined\n        };\n        \n        await this.productService.update(this.currentProduct._id, updateData).toPromise();\n        this.notificationService.success('Produit modifié avec succès');\n      } else {\n        const createData: CreateProductDto = {\n          name: formValue.name.trim(),\n          price: formValue.price,\n          quantity: formValue.quantity,\n          image: this.selectedFile as File\n        };\n        \n        await this.productService.create(createData).toPromise();\n        this.notificationService.success('Produit ajouté avec succès');\n      }\n\n      this.showFormModal = false;\n      await this.loadProducts();\n      this.resetForm();\n    } catch (error: unknown) {\n      const apiError = error as ApiError;\n      let errorMessage = \"Erreur lors de l'enregistrement du produit\";\n      \n      if (apiError.error?.errors && apiError.error.errors.length > 0) {\n        errorMessage = apiError.error.errors.join(', ');\n      } else if (apiError.error?.message) {\n        errorMessage = apiError.error.message;\n      }\n      \n      this.notificationService.error(errorMessage);\n      this.isLoading = false;\n    }\n  }\n\n  onDeleteClick(product: Product): void {\n    if (!product || !product._id) {\n      this.notificationService.error('Produit invalide');\n      return;\n    }\n    this.productToDelete = product;\n    this.showDeleteModal = true;\n  }\n\n  deleteProduct(product: Product) {\n    if (product && product._id) {\n      this.isLoading = true;\n      this.productService.delete(product._id).subscribe({\n        next: () => {\n          this.showDeleteModal = false;\n          this.notificationService.success('Produit supprimé avec succès');\n          this.loadProducts();\n        },\n        error: (error) => {\n          console.error('Erreur lors de la suppression:', error);\n          this.notificationService.error('Erreur lors de la suppression du produit');\n          this.isLoading = false;\n        }\n      });\n    }\n  }\n\n  closeDeleteModal(): void {\n    this.showDeleteModal = false;\n    this.productToDelete = null;\n  }\n\n  openAddModal(): void {\n    this.resetForm();\n    this.isEditing = false;\n    this.showFormModal = true;\n  }\n\n  editProduct(product: Product): void {\n    this.resetForm();\n    this.isEditing = true;\n    \n    this.productForm.patchValue({\n      name: product.name,\n      price: product.price,\n      quantity: product.quantity\n    });\n    \n    this.currentProduct = { ...product };\n    this.previewImage = product.image;\n    this.showFormModal = true;\n  }\n\n  private resetForm(): void {\n    this.initForm();\n    this.formErrors = {};\n    this.currentProduct = {};\n    this.selectedFile = null;\n    this.previewImage = null;\n  }\n\n  getFieldError(fieldName: string): string {\n    return this.formErrors[fieldName] || '';\n  }\n\n  hasFieldError(fieldName: string): boolean {\n    return !!this.formErrors[fieldName];\n  }\n\n  isFieldTouched(fieldName: string): boolean {\n    return this.productForm.get(fieldName)?.touched || false;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiResponse.html":{"url":"interfaces/ApiResponse.html","title":"interface - ApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/service/http/api-response.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ApiResponse {\n  data: {\n    data: T;\n    message: string;\n    meta: {\n      lastPage: number;\n      limit: number;\n      page: number;\n      total: number;\n    }\n  };\n  status: number;\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                                SidebarComponent\n                                FooterComponent\n                                NavbarComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'teamx-group.angular'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { SidebarComponent } from './component/sidebar/sidebar.component';\nimport { FooterComponent } from './component/footer/footer.component';\nimport { NavbarComponent } from './component/navbar/navbar.component';\n@Component({\n  selector: 'app-root',\n  imports: [RouterOutlet,SidebarComponent,FooterComponent,NavbarComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.css'\n})\nexport class AppComponent {\n  title = 'teamx-group.angular';\n}\n\n    \n\n    \n        \n  \n  \n    \n    \n      \n    \n  \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DeleteModalComponent', 'selector': 'app-delete-modal'},{'name': 'FlashScreenComponent', 'selector': 'app-flash-screen'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModalComponent', 'selector': 'app-form-modal'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SkeletonComponent', 'selector': 'app-skeleton'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateProductDto.html":{"url":"interfaces/CreateProductDto.html","title":"interface - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/product/product.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            quantity\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:     string | File | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | File | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Product {\n  _id: string;\n  name: string;\n  price: number;\n  quantity: number;\n  image?: string | null;\n}\n\nexport interface CreateProductDto {\n  name: string;\n  price: number;\n  quantity: number;\n  image?: string | File | null;\n}\n\nexport interface UpdateProductDto {\n  name?: string;\n  price?: number;\n  quantity?: number;\n  image?: string | File | null;\n}\n\nexport interface FindProductDto {\n  name?: string;\n  price?: number;\n  quantity?: number;\n  page?: number;\n  limit?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateUserDto.html":{"url":"interfaces/CreateUserDto.html","title":"interface - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/user/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            firstname\n                                        \n                                \n                                \n                                        \n                                            lastname\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  _id: string;\n  firstname: string;\n  lastname: string;\n  address: string;\n  isDeleted: boolean;\n  createdAt?: Date;\n  updatedAt?: Date;\n  DeletedAt?: Date;\n}\n\nexport interface CreateUserDto {\n  firstname: string;\n  lastname: string;\n  address: string;\n}\n\nexport interface UpdateUserDto {\n  firstname?: string;\n  lastname?: string;\n  address?: string;\n}\n\nexport interface FindUserDto {\n  firstname?: string;\n  lastname?: string;\n  address?: string;\n  page?: number;\n  limit?: number;\n  search?: string;\n}\n\nexport interface PaginationInfo {\n  totalItems: number;\n  itemsPerPage: number; \n  totalPages: number;\n  currentPage: number;\n}\n\nexport interface PaginatedResponse {\n  data: T[];\n  pagination: PaginationInfo;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DeleteModalComponent.html":{"url":"components/DeleteModalComponent.html","title":"component - DeleteModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DeleteModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/component/delete-modal/delete-modal.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-delete-modal\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./delete-modal.component.html\n            \n\n\n\n            \n                styleUrl\n                ./delete-modal.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                confirm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                entityName\n                            \n                            \n                                entityPreview\n                            \n                            \n                                entityToDelete\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                delete$\n                            \n                            \n                                visibleChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        entityName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/component/delete-modal/delete-modal.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        entityPreview\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/component/delete-modal/delete-modal.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        entityToDelete\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/component/delete-modal/delete-modal.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/component/delete-modal/delete-modal.component.ts:11\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        delete$\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/component/delete-modal/delete-modal.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        visibleChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/component/delete-modal/delete-modal.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/component/delete-modal/delete-modal.component.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirm\n                        \n                    \n                \n            \n            \n                \nconfirm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/component/delete-modal/delete-modal.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-delete-modal',\n  imports: [CommonModule ],\n  templateUrl: './delete-modal.component.html',\n  styleUrl: './delete-modal.component.css'\n})\nexport class DeleteModalComponent {\n  @Input() visible = false;\n  @Input() entityName: string = '';\n  @Input() entityPreview: string = '';\n  @Input() entityToDelete: any = null;\n\n  @Output() visibleChange = new EventEmitter();\n  @Output() delete$ = new EventEmitter();\n\n  close() {\n    this.visible = false;\n    this.visibleChange.emit(false);\n  }\n\n  confirm() {\n    this.delete$.emit(this.entityToDelete);\n    this.close();\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      Confirmer la suppression\n      ×\n    \n    \n      Êtes-vous sûr de vouloir supprimer {{ entityName ? 'ce ' + entityName : 'cet élément' }} ?\n      Cette action est irréversible.\n      \n        {{ entityPreview }}\n      \n    \n    \n   \n      \n        Supprimer\n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Confirmer la suppression      ×              Êtes-vous sûr de vouloir supprimer {{ entityName ? \\'ce \\' + entityName : \\'cet élément\\' }} ?      Cette action est irréversible.              {{ entityPreview }}                               Supprimer            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DeleteModalComponent', 'selector': 'app-delete-modal'},{'name': 'FlashScreenComponent', 'selector': 'app-flash-screen'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModalComponent', 'selector': 'app-form-modal'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SkeletonComponent', 'selector': 'app-skeleton'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DeleteModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/FcfaCurrencyPipe.html":{"url":"pipes/FcfaCurrencyPipe.html","title":"pipe - FcfaCurrencyPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  FcfaCurrencyPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/fcfa-currency.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        fcfa\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/fcfa-currency.pipe.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'fcfa',\n  standalone: true\n})\nexport class FcfaCurrencyPipe implements PipeTransform {\n  transform(value: number): string {\n    // Formatter le nombre avec 2 décimales\n    const formattedNumber = new Intl.NumberFormat('fr-FR', {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    }).format(value);\n    \n    // Ajouter le symbole FCFA\n    return `${formattedNumber} FCFA`;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FindProductDto.html":{"url":"interfaces/FindProductDto.html","title":"interface - FindProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FindProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/product/product.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            limit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            page\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            price\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            quantity\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Product {\n  _id: string;\n  name: string;\n  price: number;\n  quantity: number;\n  image?: string | null;\n}\n\nexport interface CreateProductDto {\n  name: string;\n  price: number;\n  quantity: number;\n  image?: string | File | null;\n}\n\nexport interface UpdateProductDto {\n  name?: string;\n  price?: number;\n  quantity?: number;\n  image?: string | File | null;\n}\n\nexport interface FindProductDto {\n  name?: string;\n  price?: number;\n  quantity?: number;\n  page?: number;\n  limit?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FindUserDto.html":{"url":"interfaces/FindUserDto.html","title":"interface - FindUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FindUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/user/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            address\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            firstname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            limit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            page\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            search\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        search\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        search:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  _id: string;\n  firstname: string;\n  lastname: string;\n  address: string;\n  isDeleted: boolean;\n  createdAt?: Date;\n  updatedAt?: Date;\n  DeletedAt?: Date;\n}\n\nexport interface CreateUserDto {\n  firstname: string;\n  lastname: string;\n  address: string;\n}\n\nexport interface UpdateUserDto {\n  firstname?: string;\n  lastname?: string;\n  address?: string;\n}\n\nexport interface FindUserDto {\n  firstname?: string;\n  lastname?: string;\n  address?: string;\n  page?: number;\n  limit?: number;\n  search?: string;\n}\n\nexport interface PaginationInfo {\n  totalItems: number;\n  itemsPerPage: number; \n  totalPages: number;\n  currentPage: number;\n}\n\nexport interface PaginatedResponse {\n  data: T[];\n  pagination: PaginationInfo;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FlashScreenComponent.html":{"url":"components/FlashScreenComponent.html","title":"component - FlashScreenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FlashScreenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/flash-screen/flash-screen.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-flash-screen\n            \n\n\n            \n                imports\n                \n                                LoaderComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./flash-screen.component.html\n            \n\n\n\n            \n                styleUrl\n                ./flash-screen.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fadeOut\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/flash-screen/flash-screen.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/flash-screen/flash-screen.component.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        fadeOut\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/component/flash-screen/flash-screen.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { LoaderComponent } from '../loader/loader.component';\n@Component({\n  selector: 'app-flash-screen',\n  imports: [LoaderComponent],\n  templateUrl: './flash-screen.component.html',\n  styleUrl: './flash-screen.component.css'\n})\nexport class FlashScreenComponent {\n  fadeOut = false;\n\n  constructor(private router: Router) {}\n\n  ngOnInit() {\n    // Vérifier si le splash screen a déjà été affiché\n   /*  if (localStorage.getItem('splashShown')) {\n      this.router.navigate(['/users']);\n      return;\n    } */\n\n    setTimeout(() => {\n      this.fadeOut = true;\n      setTimeout(() => {\n        localStorage.setItem('splashShown', 'true');\n        this.router.navigate(['/users']);\n      }, 500);\n    }, 2500);\n  }\n}\n\n\n    \n\n    \n        \n  \n    Baba Issa\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Baba Issa      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DeleteModalComponent', 'selector': 'app-delete-modal'},{'name': 'FlashScreenComponent', 'selector': 'app-flash-screen'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModalComponent', 'selector': 'app-form-modal'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SkeletonComponent', 'selector': 'app-skeleton'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FlashScreenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/footer/footer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./footer.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  standalone:true,\n  selector: 'app-footer',\n  imports: [],\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.css'\n})\nexport class FooterComponent {\n\n}\n\n    \n\n    \n        \n    \n      © 2025 Baba Issa. Tous droits réservés.\n    \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          © 2025 Baba Issa. Tous droits réservés.      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DeleteModalComponent', 'selector': 'app-delete-modal'},{'name': 'FlashScreenComponent', 'selector': 'app-flash-screen'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModalComponent', 'selector': 'app-form-modal'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SkeletonComponent', 'selector': 'app-skeleton'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormModalComponent.html":{"url":"components/FormModalComponent.html","title":"component - FormModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FormModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/component/form-modal/form-modal.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-form-modal\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./form-modal.component.html\n            \n\n\n\n            \n                styleUrl\n                ./form-modal.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentEntity\n                            \n                            \n                                entityName\n                            \n                            \n                                formTemplate\n                            \n                            \n                                isEditing\n                            \n                            \n                                isValid\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                save$\n                            \n                            \n                                visibleChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentEntity\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/component/form-modal/form-modal.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        entityName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'élément'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/component/form-modal/form-modal.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formTemplate\n                    \n                \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/component/form-modal/form-modal.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isEditing\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/component/form-modal/form-modal.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isValid\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/component/form-modal/form-modal.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/component/form-modal/form-modal.component.ts:11\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        save$\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/component/form-modal/form-modal.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        visibleChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/component/form-modal/form-modal.component.ts:18\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/component/form-modal/form-modal.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/component/form-modal/form-modal.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component,EventEmitter, Input, Output, TemplateRef  } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n@Component({\n  selector: 'app-form-modal',\n  imports: [CommonModule, FormsModule],\n  templateUrl: './form-modal.component.html',\n  styleUrl: './form-modal.component.css'\n})\nexport class FormModalComponent {\n  @Input() visible = false;\n  @Input() isEditing = false;\n  @Input() entityName = 'élément';\n  @Input() currentEntity: any = {};\n  @Input() formTemplate!: TemplateRef;\n  @Input() isValid = true;\n\n  @Output() visibleChange = new EventEmitter();\n  @Output() save$ = new EventEmitter();\n\n  close() {\n    this.visible = false;\n    this.visibleChange.emit(false);\n  }\n\n  save() {\n    this.save$.emit(this.currentEntity);\n    this.close();\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      {{ isEditing ? 'Modifier' : 'Ajouter' }} {{ entityName }}\n      ×\n    \n    \n      \n    \n    \n      \n        {{ isEditing ? 'Modifier' : 'Ajouter' }}\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ isEditing ? \\'Modifier\\' : \\'Ajouter\\' }} {{ entityName }}      ×                                    {{ isEditing ? \\'Modifier\\' : \\'Ajouter\\' }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DeleteModalComponent', 'selector': 'app-delete-modal'},{'name': 'FlashScreenComponent', 'selector': 'app-flash-screen'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModalComponent', 'selector': 'app-form-modal'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SkeletonComponent', 'selector': 'app-skeleton'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FormModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HttpResponse.html":{"url":"interfaces/HttpResponse.html","title":"interface - HttpResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HttpResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/service/http/http-response.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            message\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            meta\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        meta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        meta:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HttpResponse {\n  id: string | null;\n  data: T;\n  status: number;\n  message?: string;\n  meta?: {\n    total: number;\n    page: number;\n    lastPage: number;\n    limit: number;\n  };\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpService.html":{"url":"injectables/HttpService.html","title":"injectable - HttpService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/service/http/http.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                get\n                            \n                            \n                                    Private\n                                getHeaders\n                            \n                            \n                                post\n                            \n                            \n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/service/http/http.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(endpoint: string, options: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/service/http/http.service.ts:70\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(endpoint: string, options: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/service/http/http.service.ts:26\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getHeaders\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHeaders(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/service/http/http.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     HttpHeaders\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        post\n                        \n                    \n                \n            \n            \n                \npost(endpoint: string, data: any, options: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/service/http/http.service.ts:42\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        put\n                        \n                    \n                \n            \n            \n                \nput(endpoint: string, data: any, options: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/service/http/http.service.ts:56\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.apiUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/service/http/http.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, map } from 'rxjs';\nimport { environment } from '../../../environneemnt/environment';\nimport { IHttpService } from './http-service.interface';\nimport { HttpResponse } from './http-response.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService implements IHttpService {\n  private baseUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  private getHeaders(data: any): HttpHeaders {\n    if (data instanceof FormData) {\n      return new HttpHeaders(); // Le navigateur gère automatiquement pour FormData\n    }\n    return new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n  }\n\n  get(endpoint: string, options: any = {}): Observable> {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    const finalOptions = { ...options, headers };\n    \n    return this.http.get(`${this.baseUrl}${endpoint}`, finalOptions)\n      .pipe(\n        map(response => ({\n          data: response as T,\n          status: 200,\n          id: crypto.randomUUID()\n        }))\n      );\n  }\n\n  post(endpoint: string, data: any, options: any = {}): Observable> {\n    const headers = this.getHeaders(data);\n    const finalOptions = { ...options, headers };\n    \n    return this.http.post(`${this.baseUrl}${endpoint}`, data, finalOptions)\n      .pipe(\n        map(response => ({\n          data: response as T,\n          status: 201,\n          id: crypto.randomUUID()\n        }))\n      );\n  }\n\n  put(endpoint: string, data: any, options: any = {}): Observable> {\n    const headers = this.getHeaders(data);\n    const finalOptions = { ...options, headers };\n    \n    return this.http.put(`${this.baseUrl}${endpoint}`, data, finalOptions)\n      .pipe(\n        map(response => ({\n          data: response as T,\n          status: 200,\n          id: crypto.randomUUID()\n        }))\n      );\n  }\n\n  delete(endpoint: string, options: any = {}): Observable> {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    const finalOptions = { ...options, headers };\n    \n    return this.http.delete(`${this.baseUrl}${endpoint}`, finalOptions)\n      .pipe(\n        map(response => ({\n          data: response as T,\n          status: 200,\n          id: crypto.randomUUID()\n        }))\n      );\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IHttpService.html":{"url":"interfaces/IHttpService.html","title":"interface - IHttpService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IHttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/service/http/http-service.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        get\n                                    \n                                \n                                \n                                    \n                                        post\n                                    \n                                \n                                \n                                    \n                                        put\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(endpoint: string, options?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/service/http/http-service.interface.ts:9\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(endpoint: string, options?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/service/http/http-service.interface.ts:6\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        post\n                        \n                    \n                \n            \n            \n                \npost(endpoint: string, data: any, options?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/service/http/http-service.interface.ts:7\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        put\n                        \n                    \n                \n            \n            \n                \nput(endpoint: string, data: any, options?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/service/http/http-service.interface.ts:8\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { HttpResponse } from './http-response.interface';\n\nexport interface IHttpService {\n  get(endpoint: string, options?: any): Observable>;\n  post(endpoint: string, data: any, options?: any): Observable>;\n  put(endpoint: string, data: any, options?: any): Observable>;\n  delete(endpoint: string, options?: any): Observable>;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderComponent.html":{"url":"components/LoaderComponent.html","title":"component - LoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/loader/loader.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loader\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./loader.component.html\n            \n\n\n\n            \n                styleUrl\n                ./loader.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  standalone: true,\n  selector: 'app-loader',\n  imports: [],\n  templateUrl: './loader.component.html',\n  styleUrl: './loader.component.css'\n})\nexport class LoaderComponent {\n\n}\n\n    \n\n    \n        \n    \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DeleteModalComponent', 'selector': 'app-delete-modal'},{'name': 'FlashScreenComponent', 'selector': 'app-flash-screen'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModalComponent', 'selector': 'app-form-modal'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SkeletonComponent', 'selector': 'app-skeleton'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/navbar/navbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                            RouterLinkActive\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./navbar.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterLink, RouterLinkActive } from '@angular/router';\n@Component({\n  standalone: true,\n  selector: 'app-navbar',\n  imports: [RouterLink, RouterLinkActive ],\n  templateUrl: './navbar.component.html',\n  styleUrl: './navbar.component.css'\n})\nexport class NavbarComponent {\n\n}\n\n    \n\n    \n        \n    \n      \n        \n          Baba Issa\n        \n        \n          Utilisateurs\n          Produits\n        \n      \n    \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Baba Issa                          Utilisateurs          Produits                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DeleteModalComponent', 'selector': 'app-delete-modal'},{'name': 'FlashScreenComponent', 'selector': 'app-flash-screen'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModalComponent', 'selector': 'app-form-modal'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SkeletonComponent', 'selector': 'app-skeleton'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/service/notification/notification.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                toasts$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                getToasts\n                            \n                            \n                                info\n                            \n                            \n                                remove\n                            \n                            \n                                show\n                            \n                            \n                                success\n                            \n                            \n                                warning\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: string, duration?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/service/notification/notification.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                duration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getToasts\n                        \n                    \n                \n            \n            \n                \ngetToasts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/service/notification/notification.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        info\n                        \n                    \n                \n            \n            \n                \ninfo(message: string, duration?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/service/notification/notification.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                duration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/service/notification/notification.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow(message: string, type: Toast, duration: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/service/notification/notification.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                type\n                                            \n                                                            Toast\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'info'\n                                            \n\n                                        \n                                        \n                                                duration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    3000\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        success\n                        \n                    \n                \n            \n            \n                \nsuccess(message: string, duration?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/service/notification/notification.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                duration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warning\n                        \n                    \n                \n            \n            \n                \nwarning(message: string, duration?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/service/notification/notification.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                duration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        toasts$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/service/notification/notification.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Toast } from './toast.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n  private toasts$ = new BehaviorSubject([]);\n\n  getToasts(): Observable {\n    return this.toasts$.asObservable();\n  }\n\n  show(message: string, type: Toast['type'] = 'info', duration: number = 3000) {\n    const id = Date.now().toString();\n    const toast: Toast = { id, message, type, duration };\n    \n    this.toasts$.next([...this.toasts$.value, toast]);\n\n    if (duration > 0) {\n      setTimeout(() => {\n        this.remove(id);\n      }, duration);\n    }\n\n    return id;\n  }\n\n  remove(id: string) {\n    const toasts = this.toasts$.value.filter(toast => toast.id !== id);\n    this.toasts$.next(toasts);\n  }\n\n  success(message: string, duration?: number) {\n    return this.show(message, 'success', duration);\n  }\n\n  error(message: string, duration?: number) {\n    return this.show(message, 'error', duration);\n  }\n\n  info(message: string, duration?: number) {\n    return this.show(message, 'info', duration);\n  }\n\n  warning(message: string, duration?: number) {\n    return this.show(message, 'warning', duration);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginatedResponse.html":{"url":"interfaces/PaginatedResponse.html","title":"interface - PaginatedResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaginatedResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/user/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            pagination\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pagination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pagination:         PaginationInfo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PaginationInfo\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  _id: string;\n  firstname: string;\n  lastname: string;\n  address: string;\n  isDeleted: boolean;\n  createdAt?: Date;\n  updatedAt?: Date;\n  DeletedAt?: Date;\n}\n\nexport interface CreateUserDto {\n  firstname: string;\n  lastname: string;\n  address: string;\n}\n\nexport interface UpdateUserDto {\n  firstname?: string;\n  lastname?: string;\n  address?: string;\n}\n\nexport interface FindUserDto {\n  firstname?: string;\n  lastname?: string;\n  address?: string;\n  page?: number;\n  limit?: number;\n  search?: string;\n}\n\nexport interface PaginationInfo {\n  totalItems: number;\n  itemsPerPage: number; \n  totalPages: number;\n  currentPage: number;\n}\n\nexport interface PaginatedResponse {\n  data: T[];\n  pagination: PaginationInfo;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaginationComponent.html":{"url":"components/PaginationComponent.html","title":"component - PaginationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PaginationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/pagination/pagination.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pagination\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            NgFor\n                            NgIf\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./pagination.component.html\n            \n\n\n\n            \n                styleUrl\n                ./pagination.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentPage\n                            \n                            \n                                currentPageItems\n                            \n                            \n                                endItem\n                            \n                            \n                                startItem\n                            \n                            \n                                total\n                            \n                            \n                                totalPages\n                            \n                            \n                                visiblePages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                calculateItemRange\n                            \n                            \n                                    Private\n                                calculateVisiblePages\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                onPageChange\n                            \n                            \n                                    Private\n                                updateCurrentPageItems\n                            \n                            \n                                updatePage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                allItems\n                            \n                            \n                                limit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                pageItemsChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        allItems\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/pagination/pagination.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        limit\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/pagination/pagination.component.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        pageItemsChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/pagination/pagination.component.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        calculateItemRange\n                        \n                    \n                \n            \n            \n                \n                        \n                    calculateItemRange()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pagination/pagination.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        calculateVisiblePages\n                        \n                    \n                \n            \n            \n                \n                        \n                    calculateVisiblePages()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pagination/pagination.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pagination/pagination.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPageChange\n                        \n                    \n                \n            \n            \n                \nonPageChange(page: number | string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pagination/pagination.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateCurrentPageItems\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateCurrentPageItems()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pagination/pagination.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePage\n                        \n                    \n                \n            \n            \n                \nupdatePage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pagination/pagination.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/pagination/pagination.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentPageItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/pagination/pagination.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endItem\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/pagination/pagination.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startItem\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/pagination/pagination.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/pagination/pagination.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalPages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/pagination/pagination.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visiblePages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     (number | string)[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/pagination/pagination.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\nimport { NgFor, NgIf } from '@angular/common';\n\n@Component({\n  standalone: true,\n  selector: 'app-pagination',\n  imports: [NgFor, NgIf],\n  templateUrl: './pagination.component.html',\n  styleUrl: './pagination.component.css'\n})\nexport class PaginationComponent implements OnChanges {\n  @Input() allItems: any[] = []; // Toutes les données à paginer\n  @Input() limit: number = 10;   // Nombre d'éléments par page\n  @Output() pageItemsChange = new EventEmitter(); \n\n  currentPage: number = 1;\n  totalPages: number = 1;\n  total: number = 0;\n  visiblePages: (number | string)[] = [];\n  \n  // Données visibles sur la page actuelle\n  currentPageItems: any[] = [];\n\n  startItem: number = 0;\n  endItem: number = 0;\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['allItems'] || changes['limit']) {\n      this.total = this.allItems.length;\n      this.totalPages = Math.ceil(this.total / this.limit);\n      this.currentPage = 1; // Réinitialiser à la première page quand les données changent\n      this.updatePage();\n    }\n  }\n\n  // Méthode pour mettre à jour la page actuelle\n  updatePage() {\n    this.calculateVisiblePages();\n    this.calculateItemRange();\n    this.updateCurrentPageItems();\n  }\n\n  // Calculer les éléments visibles pour la page actuelle\n  private updateCurrentPageItems() {\n    const startIndex = (this.currentPage - 1) * this.limit;\n    const endIndex = Math.min(startIndex + this.limit, this.total);\n    this.currentPageItems = this.allItems.slice(startIndex, endIndex);\n    \n    // Émettre les éléments actuels\n    this.pageItemsChange.emit(this.currentPageItems);\n  }\n\n  private calculateVisiblePages() {\n    const maxVisiblePages = 5;\n    let pages: (number | string)[] = [];\n\n    if (this.totalPages  i + 1);\n    } else {\n      if (this.currentPage = this.totalPages - 2) {\n        // Fin de la pagination\n        pages = [1, '...', this.totalPages - 3, this.totalPages - 2, this.totalPages - 1, this.totalPages];\n      } else {\n        // Milieu de la pagination\n        pages = [1, '...', this.currentPage - 1, this.currentPage, this.currentPage + 1, '...', this.totalPages];\n      }\n    }\n    this.visiblePages = pages;\n  }\n\n  private calculateItemRange() {\n    this.startItem = (this.currentPage - 1) * this.limit + 1;\n    this.endItem = Math.min(this.currentPage * this.limit, this.total);\n  }\n\n  onPageChange(page: number | string) {\n    const pageNumber = Number(page);\n  \n    if (isNaN(pageNumber) || pageNumber  this.totalPages || pageNumber === this.currentPage) {\n      return; // Ignore les valeurs invalides\n    }\n  \n    this.currentPage = pageNumber;\n    this.updatePage();\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n        Affichage de \n        {{ startItem }}\n        à\n        {{ endItem }}\n        sur\n        {{ total }}\n        résultats\n      \n    \n    \n    \n    \n      \n      \n        Précédent\n        \n          \n        \n      \n\n      \n      \n        \n          \n            {{ page }}\n          \n        \n        \n        \n          ...\n        \n      \n\n      \n      \n        Suivant\n        \n          \n        \n      \n    \n  \n\n\n\n\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      Affichage de         {{ startItem }}        à        {{ endItem }}        sur        {{ total }}        résultats                                          Précédent                                                                          {{ page }}                                            ...                                  Suivant                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DeleteModalComponent', 'selector': 'app-delete-modal'},{'name': 'FlashScreenComponent', 'selector': 'app-flash-screen'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModalComponent', 'selector': 'app-form-modal'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SkeletonComponent', 'selector': 'app-skeleton'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PaginationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginationInfo.html":{"url":"interfaces/PaginationInfo.html","title":"interface - PaginationInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaginationInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/user/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            currentPage\n                                        \n                                \n                                \n                                        \n                                            itemsPerPage\n                                        \n                                \n                                \n                                        \n                                            totalItems\n                                        \n                                \n                                \n                                        \n                                            totalPages\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentPage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currentPage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        itemsPerPage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        itemsPerPage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalItems\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalItems:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalPages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalPages:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  _id: string;\n  firstname: string;\n  lastname: string;\n  address: string;\n  isDeleted: boolean;\n  createdAt?: Date;\n  updatedAt?: Date;\n  DeletedAt?: Date;\n}\n\nexport interface CreateUserDto {\n  firstname: string;\n  lastname: string;\n  address: string;\n}\n\nexport interface UpdateUserDto {\n  firstname?: string;\n  lastname?: string;\n  address?: string;\n}\n\nexport interface FindUserDto {\n  firstname?: string;\n  lastname?: string;\n  address?: string;\n  page?: number;\n  limit?: number;\n  search?: string;\n}\n\nexport interface PaginationInfo {\n  totalItems: number;\n  itemsPerPage: number; \n  totalPages: number;\n  currentPage: number;\n}\n\nexport interface PaginatedResponse {\n  data: T[];\n  pagination: PaginationInfo;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Product.html":{"url":"interfaces/Product.html","title":"interface - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/product/product.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            quantity\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Product {\n  _id: string;\n  name: string;\n  price: number;\n  quantity: number;\n  image?: string | null;\n}\n\nexport interface CreateProductDto {\n  name: string;\n  price: number;\n  quantity: number;\n  image?: string | File | null;\n}\n\nexport interface UpdateProductDto {\n  name?: string;\n  price?: number;\n  quantity?: number;\n  image?: string | File | null;\n}\n\nexport interface FindProductDto {\n  name?: string;\n  price?: number;\n  quantity?: number;\n  page?: number;\n  limit?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProductComponent.html":{"url":"components/ProductComponent.html","title":"component - ProductComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProductComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/product/product.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-product\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                ToastComponent\n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                                FormModalComponent\n                                DeleteModalComponent\n                            FcfaCurrencyPipe\n                                SkeletonComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./product.component.html\n            \n\n\n\n            \n                styleUrl\n                ./product.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentProduct\n                            \n                            \n                                formErrors\n                            \n                            \n                                isEditing\n                            \n                            \n                                isLoading\n                            \n                            \n                                previewImage\n                            \n                            \n                                productForm\n                            \n                            \n                                products$\n                            \n                            \n                                    Private\n                                productsSubject\n                            \n                            \n                                productToDelete\n                            \n                            \n                                    Public\n                                productValidator\n                            \n                            \n                                selectedFile\n                            \n                            \n                                showDeleteModal\n                            \n                            \n                                showFormModal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeDeleteModal\n                            \n                            \n                                deleteProduct\n                            \n                            \n                                editProduct\n                            \n                            \n                                getFieldError\n                            \n                            \n                                hasFieldError\n                            \n                            \n                                    Private\n                                initForm\n                            \n                            \n                                isFieldTouched\n                            \n                            \n                                    Private\n                                loadProducts\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDeleteClick\n                            \n                            \n                                onFileSelected\n                            \n                            \n                                openAddModal\n                            \n                            \n                                    Private\n                                resetForm\n                            \n                            \n                                    Async\n                                saveProduct\n                            \n                            \n                                validateForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(productService: ProductService, notificationService: NotificationService, productValidator: ProductValidator, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/product/product.component.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                        ProductService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productValidator\n                                                  \n                                                        \n                                                                        ProductValidator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeDeleteModal\n                        \n                    \n                \n            \n            \n                \ncloseDeleteModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/product/product.component.ts:256\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \ndeleteProduct(product: Product)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/product/product.component.ts:238\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                product\n                                            \n                                                            Product\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editProduct\n                        \n                    \n                \n            \n            \n                \neditProduct(product: Product)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/product/product.component.ts:267\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                product\n                                            \n                                                            Product\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldError\n                        \n                    \n                \n            \n            \n                \ngetFieldError(fieldName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/product/product.component.ts:290\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasFieldError\n                        \n                    \n                \n            \n            \n                \nhasFieldError(fieldName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/product/product.component.ts:294\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    initForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/product/product.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFieldTouched\n                        \n                    \n                \n            \n            \n                \nisFieldTouched(fieldName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/product/product.component.ts:298\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadProducts\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadProducts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/product/product.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/product/product.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteClick\n                        \n                    \n                \n            \n            \n                \nonDeleteClick(product: Product)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/product/product.component.ts:229\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                product\n                                            \n                                                            Product\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFileSelected\n                        \n                    \n                \n            \n            \n                \nonFileSelected(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/product/product.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openAddModal\n                        \n                    \n                \n            \n            \n                \nopenAddModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/product/product.component.ts:261\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resetForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/product/product.component.ts:282\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        saveProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveProduct()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/product/product.component.ts:175\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateForm\n                        \n                    \n                \n            \n            \n                \nvalidateForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/product/product.component.ts:145\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentProduct\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Partial\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/product/product.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/product/product.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEditing\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/product/product.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/product/product.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previewImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined | null | File\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/product/product.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/product/product.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        products$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.productsSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/product/product.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        productsSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/product/product.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productToDelete\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/product/product.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        productValidator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductValidator\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/product/product.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedFile\n                        \n                    \n                \n            \n                \n                    \n                        Type :     File | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/product/product.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDeleteModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/product/product.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showFormModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/product/product.component.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule, FormGroup, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map, catchError, finalize, delay } from 'rxjs/operators';\nimport { FormModalComponent } from '../../shared/component/form-modal/form-modal.component';\nimport { DeleteModalComponent } from '../../shared/component/delete-modal/delete-modal.component';\nimport { SkeletonComponent } from '../../shared/skeleton/skeleton.component';\nimport { Product } from './product';\nimport { ProductService } from './service/product.service';\nimport { NotificationService } from '../../shared/service/notification/notification.service';\nimport { ToastComponent } from '../../shared/component/toast/toast.component';\nimport { CreateProductDto, UpdateProductDto } from './product';\nimport { FcfaCurrencyPipe } from '../../fcfa-currency.pipe';\nimport { ProductValidator } from './product.validator';\n\ninterface ApiError {\n  error?: {\n    message?: string;\n    errors?: string[];\n  }; \n}\n\n@Component({\n  selector: 'app-product',\n  standalone: true,\n  imports: [\n    ToastComponent,\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FormModalComponent,\n    DeleteModalComponent,\n    FcfaCurrencyPipe,\n    SkeletonComponent\n  ],\n  templateUrl: './product.component.html',\n  styleUrl: './product.component.css'\n})\nexport class ProductComponent implements OnInit {\n  private productsSubject = new BehaviorSubject([]);\n  products$ = this.productsSubject.asObservable();\n  isLoading = true;\n  \n  showFormModal = false;\n  isEditing = false;\n  currentProduct: Partial = {};\n  selectedFile: File | null = null;\n  previewImage: string | undefined | null | File = null;\n\n  productForm!: FormGroup;\n  formErrors: { [key: string]: string } = {};\n\n  showDeleteModal = false;\n  productToDelete: Product | null = null;\n\n  constructor(\n    private productService: ProductService,\n    private notificationService: NotificationService,\n    public productValidator: ProductValidator,  \n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.loadProducts();\n    this.initForm();\n  }\n\n  private initForm(): void {\n    this.productForm = this.fb.group({\n      name: ['', [\n        Validators.required,\n        (control: AbstractControl) => this.productValidator.validateName(control)\n      ]],\n      price: [0, [\n        Validators.required,\n        (control: AbstractControl) => this.productValidator.validatePrice(control)\n      ]],\n      quantity: [0, [\n        Validators.required,\n        (control: AbstractControl) => this.productValidator.validateQuantity(control)\n      ]]\n    });\n  }\n\n  private loadProducts(): void {\n    this.isLoading = true;\n    this.productService.getAll().pipe(\n      map((response: any) => {\n        if (response?.data?.data) {\n          return response.data.data;\n        } else if (response?.data) {\n          return response.data;\n        } else if (Array.isArray(response)) {\n          return response;\n        }\n        console.error('Format de données invalide:', response);\n        return [];\n      }),\n      delay(800),\n      catchError(error => {\n        this.notificationService.error('Erreur lors du chargement des produits');\n        console.error('Error loading products:', error);\n        return [];\n      }),\n      finalize(() => {\n        this.isLoading = false;\n      })\n    ).subscribe(products => {\n      this.productsSubject.next(products);\n    });\n  }\n\n  onFileSelected(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    if (input.files && input.files[0]) {\n      const file = input.files[0];\n      \n      const validationErrors = this.productValidator.validateImage(file);\n      if (validationErrors) {\n        this.formErrors['image'] = this.productValidator.getErrorMessage('image', validationErrors);\n        this.notificationService.error(this.formErrors['image']);\n        input.value = '';\n        this.selectedFile = null;\n        this.previewImage = null;\n        return;\n      }\n\n      this.selectedFile = file;\n      this.formErrors['image'] = '';\n      \n      const reader = new FileReader();\n      reader.onload = (e) => {\n        this.previewImage = e.target?.result as string;\n      };\n      reader.onerror = () => {\n        this.notificationService.error(\"Erreur lors de la lecture du fichier\");\n        this.selectedFile = null;\n        this.previewImage = null;\n      };\n      reader.readAsDataURL(file);\n    }\n  }\n\n  validateForm(): boolean {\n    this.formErrors = {};\n    let isValid = true;\n\n    // Validate form fields\n    Object.keys(this.productForm.controls).forEach(key => {\n      const control = this.productForm.get(key);\n      control?.markAsTouched();\n      \n      if (control?.invalid) {\n        this.formErrors[key] = this.productValidator.getErrorMessage(\n          key, \n          control.errors || {}\n        );\n        isValid = false;\n      }\n    });\n\n    // Validate image for new products\n    if (!this.isEditing) {\n      const imageErrors = this.productValidator.validateImage(this.selectedFile);\n      if (imageErrors) {\n        this.formErrors['image'] = this.productValidator.getErrorMessage('image', imageErrors);\n        isValid = false;\n      }\n    }\n\n    return isValid;\n  }\n\n  async saveProduct(): Promise {\n    if (!this.validateForm()) {\n      const errorMessages = Object.values(this.formErrors);\n      if (errorMessages.length > 0) {\n        this.notificationService.error(errorMessages[0]);\n      }\n      return;\n    }\n\n    try {\n      this.isLoading = true;\n      \n      const formValue = this.productForm.value;\n      \n      if (this.isEditing && this.currentProduct._id) {\n        const updateData: UpdateProductDto = {\n          name: formValue.name,\n          price: formValue.price,\n          quantity: formValue.quantity,\n          image: this.selectedFile || undefined\n        };\n        \n        await this.productService.update(this.currentProduct._id, updateData).toPromise();\n        this.notificationService.success('Produit modifié avec succès');\n      } else {\n        const createData: CreateProductDto = {\n          name: formValue.name.trim(),\n          price: formValue.price,\n          quantity: formValue.quantity,\n          image: this.selectedFile as File\n        };\n        \n        await this.productService.create(createData).toPromise();\n        this.notificationService.success('Produit ajouté avec succès');\n      }\n\n      this.showFormModal = false;\n      await this.loadProducts();\n      this.resetForm();\n    } catch (error: unknown) {\n      const apiError = error as ApiError;\n      let errorMessage = \"Erreur lors de l'enregistrement du produit\";\n      \n      if (apiError.error?.errors && apiError.error.errors.length > 0) {\n        errorMessage = apiError.error.errors.join(', ');\n      } else if (apiError.error?.message) {\n        errorMessage = apiError.error.message;\n      }\n      \n      this.notificationService.error(errorMessage);\n      this.isLoading = false;\n    }\n  }\n\n  onDeleteClick(product: Product): void {\n    if (!product || !product._id) {\n      this.notificationService.error('Produit invalide');\n      return;\n    }\n    this.productToDelete = product;\n    this.showDeleteModal = true;\n  }\n\n  deleteProduct(product: Product) {\n    if (product && product._id) {\n      this.isLoading = true;\n      this.productService.delete(product._id).subscribe({\n        next: () => {\n          this.showDeleteModal = false;\n          this.notificationService.success('Produit supprimé avec succès');\n          this.loadProducts();\n        },\n        error: (error) => {\n          console.error('Erreur lors de la suppression:', error);\n          this.notificationService.error('Erreur lors de la suppression du produit');\n          this.isLoading = false;\n        }\n      });\n    }\n  }\n\n  closeDeleteModal(): void {\n    this.showDeleteModal = false;\n    this.productToDelete = null;\n  }\n\n  openAddModal(): void {\n    this.resetForm();\n    this.isEditing = false;\n    this.showFormModal = true;\n  }\n\n  editProduct(product: Product): void {\n    this.resetForm();\n    this.isEditing = true;\n    \n    this.productForm.patchValue({\n      name: product.name,\n      price: product.price,\n      quantity: product.quantity\n    });\n    \n    this.currentProduct = { ...product };\n    this.previewImage = product.image;\n    this.showFormModal = true;\n  }\n\n  private resetForm(): void {\n    this.initForm();\n    this.formErrors = {};\n    this.currentProduct = {};\n    this.selectedFile = null;\n    this.previewImage = null;\n  }\n\n  getFieldError(fieldName: string): string {\n    return this.formErrors[fieldName] || '';\n  }\n\n  hasFieldError(fieldName: string): boolean {\n    return !!this.formErrors[fieldName];\n  }\n\n  isFieldTouched(fieldName: string): boolean {\n    return this.productForm.get(fieldName)?.touched || false;\n  }\n}\n    \n\n    \n        \n\n  \n  \n    Nos Produits\n    \n      \n      Ajouter un produit\n    \n  \n\n  \n  \n    \n      \n      \n        \n      \n      \n      \n      \n        \n        Aucun produit disponible\n        \n          Ajouter votre premier produit\n        \n      \n\n      \n      \n        \n          \n          \n            \n            \n            \n            \n              \n                \n              \n              \n                \n              \n            \n          \n\n          \n          \n            {{ product.name }}\n            \n              \n                {{ product.price | fcfa }}\n              \n               0 ? 'text-green-600' : 'text-red-600'\" class=\"font-semibold\">\n                {{ product.quantity > 0 ? product.quantity + ' en stock' : 'Rupture de stock' }}\n              \n            \n          \n        \n      \n    \n  \n\n\n\n\n\n\n\n\n  \n    \n    \n      \n        Image du produit {{ isEditing ? '' : '*' }}\n      \n      \n        \n        \n          \n          \n            \n            Cliquez ou déposez une image ici\n          \n        \n        \n        \n        \n        \n        \n        \n          \n          {{ previewImage ? 'Changer l\\'image' : 'Télécharger une image' }}\n        \n        \n        \n          {{ getFieldError('image') }}\n        \n      \n    \n\n    \n    \n      \n        Nom du produit *\n      \n      \n      \n        {{ getFieldError('name') || productValidator.getErrorMessage('name', productForm.get('name')?.errors || {}) }}\n      \n    \n\n    \n    \n      \n        Prix *\n      \n      \n      \n        {{ getFieldError('price') || productValidator.getErrorMessage('price', productForm.get('price')?.errors || {}) }}\n      \n    \n\n    \n    \n      \n        Quantité *\n      \n      \n      \n        {{ getFieldError('quantity') || productValidator.getErrorMessage('quantity', productForm.get('quantity')?.errors || {}) }}\n      \n    \n  \n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Nos Produits                Ajouter un produit                                                                          Aucun produit disponible                  Ajouter votre premier produit                                                                                                                                                                                                                                                    {{ product.name }}                                          {{ product.price | fcfa }}                             0 ? \\'text-green-600\\' : \\'text-red-600\\'\" class=\"font-semibold\">                {{ product.quantity > 0 ? product.quantity + \\' en stock\\' : \\'Rupture de stock\\' }}                                                                                Image du produit {{ isEditing ? \\'\\' : \\'*\\' }}                                                                        Cliquez ou déposez une image ici                                                                                      {{ previewImage ? \\'Changer l\\\\'image\\' : \\'Télécharger une image\\' }}                                  {{ getFieldError(\\'image\\') }}                                        Nom du produit *                          {{ getFieldError(\\'name\\') || productValidator.getErrorMessage(\\'name\\', productForm.get(\\'name\\')?.errors || {}) }}                                Prix *                          {{ getFieldError(\\'price\\') || productValidator.getErrorMessage(\\'price\\', productForm.get(\\'price\\')?.errors || {}) }}                                Quantité *                          {{ getFieldError(\\'quantity\\') || productValidator.getErrorMessage(\\'quantity\\', productForm.get(\\'quantity\\')?.errors || {}) }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DeleteModalComponent', 'selector': 'app-delete-modal'},{'name': 'FlashScreenComponent', 'selector': 'app-flash-screen'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModalComponent', 'selector': 'app-form-modal'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SkeletonComponent', 'selector': 'app-skeleton'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProductComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductService.html":{"url":"injectables/ProductService.html","title":"injectable - ProductService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/product/service/product.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                ALLOWED_FILE_TYPES\n                            \n                            \n                                    Private\n                                endpoint\n                            \n                            \n                                    Private\n                                    Readonly\n                                MAX_FILE_SIZE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Private\n                                createFormData\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                    Private\n                                logFormData\n                            \n                            \n                                update\n                            \n                            \n                                    Private\n                                validateProductData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/product/service/product.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(productData: CreateProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/product/service/product.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productData\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createFormData\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFormData(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/product/service/product.service.ts:141\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FormData\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/product/service/product.service.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(filter?: FindProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/product/service/product.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            FindProductDto\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/product/service/product.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logFormData\n                        \n                    \n                \n            \n            \n                \n                        \n                    logFormData(formData: FormData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/product/service/product.service.ts:169\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                formData\n                                            \n                                                        FormData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, productData: UpdateProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/product/service/product.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                productData\n                                            \n                                                            UpdateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        validateProductData\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateProductData(data: Partial, isUpdate: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/product/service/product.service.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                isUpdate\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        ALLOWED_FILE_TYPES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['image/jpeg', 'image/png', 'image/gif']\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/product/service/product.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        endpoint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'products'\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/product/service/product.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MAX_FILE_SIZE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : 10 * 1024 * 1024\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/product/service/product.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { catchError, Observable, throwError } from \"rxjs\";\nimport { HttpResponse } from \"../../../shared/service/http/http-response.interface\";\nimport { CreateProductDto, FindProductDto, Product, UpdateProductDto } from \"../product\";\nimport { Injectable } from \"@angular/core\";\nimport { HttpService } from \"../../../shared/service/http/http.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n  private endpoint = 'products';\n  private readonly ALLOWED_FILE_TYPES = ['image/jpeg', 'image/png', 'image/gif'];\n  private readonly MAX_FILE_SIZE = 10 * 1024 * 1024; // 5MB\n\n  constructor(private http: HttpService) {}\n\n  getAll(filter?: FindProductDto): Observable> {\n    try {\n      const queryParams = new URLSearchParams();\n      if (filter) {\n        Object.entries(filter).forEach(([key, value]) => {\n          if (value !== undefined && value !== null && value !== '') {\n            queryParams.append(key, value.toString());\n          }\n        });\n      }\n      const url = `${this.endpoint}${queryParams.toString() ? '?' + queryParams.toString() : ''}`;\n      return this.http.get(url).pipe(\n        catchError(error => {\n          console.error('Error fetching products:', error);\n          return throwError(() => new Error('Erreur lors de la récupération des produits'));\n        })\n      );\n    } catch (error) {\n      return throwError(() => error);\n    }\n  }\n\n  getById(id: string): Observable> {\n    try {\n      if (!id) {\n        throw new Error('ID requis');\n      }\n      return this.http.get(`${this.endpoint}/${id}`).pipe(\n        catchError(error => {\n          console.error('Error fetching product:', error);\n          return throwError(() => new Error('Erreur lors de la récupération du produit'));\n        })\n      );\n    } catch (error) {\n      return throwError(() => error);\n    }\n  }\n\n  create(productData: CreateProductDto): Observable> {\n    try {\n      console.log('Création produit - données reçues:', productData);\n      \n      this.validateProductData(productData);\n      const formData = this.createFormData(productData);\n      \n      console.log('FormData créé:', this.logFormData(formData));\n\n      return this.http.post(this.endpoint, formData).pipe(\n        catchError(error => {\n          console.error('Error creating product:', error);\n          return throwError(() => error);\n        })\n      );\n    } catch (error) {\n      console.error('Error in create method:', error);\n      return throwError(() => error);\n    }\n  }\n\n  update(id: string, productData: UpdateProductDto): Observable> {\n    try {\n      console.log('Mise à jour produit - données reçues:', { id, productData });\n      \n      if (!id) {\n        throw new Error('ID requis');\n      }\n      \n      this.validateProductData(productData, true);\n      const formData = this.createFormData(productData);\n      \n      console.log('FormData pour mise à jour:', this.logFormData(formData));\n\n      return this.http.put(`${this.endpoint}/${id}`, formData).pipe(\n        catchError(error => {\n          console.error('Error updating product:', error);\n          return throwError(() => error);\n        })\n      );\n    } catch (error) {\n      return throwError(() => error);\n    }\n  }\n\n // Dans product.service.ts\n// Correct\ndelete(id: string): Observable {\n  return this.http.delete(`${this.endpoint}/${id}`);\n}\n  private validateProductData(data: Partial, isUpdate: boolean = false): void {\n    console.log('Validation des données:', { data, isUpdate });\n    \n    if (!isUpdate || data.name !== undefined) {\n      if (!data.name || !data.name.trim()) {\n        console.error('Validation échec: nom manquant ou vide');\n        throw new Error('Le nom du produit est requis');\n      }\n    }\n\n    if (!isUpdate || data.price !== undefined) {\n      if (data.price === undefined || data.price  this.MAX_FILE_SIZE) {\n        throw new Error('Le fichier est trop volumineux (maximum 5MB)');\n      }\n    }\n\n    console.log('Validation réussie');\n  }\n\n  private createFormData(data: Partial): FormData {\n    console.log('Création FormData - données initiales:', data);\n    const formData = new FormData();\n\n    if (data.name) {\n      const name = data.name.trim();\n      console.log('Ajout nom:', name);\n      formData.append('name', name);\n    }\n\n    if (data.price !== undefined) {\n      console.log('Ajout prix:', data.price);\n      formData.append('price', data.price.toString());\n    }\n\n    if (data.quantity !== undefined) {\n      console.log('Ajout quantité:', data.quantity);\n      formData.append('quantity', data.quantity.toString());\n    }\n\n    if (data.image instanceof File) {\n      console.log('Ajout image:', data.image.name);\n      formData.append('image', data.image);\n    }\n\n    return formData;\n  }\n\n  private logFormData(formData: FormData): string {\n    const entries: { [key: string]: string } = {};\n    formData.forEach((value, key) => {\n      entries[key] = value instanceof File ? value.name : value.toString();\n    });\n    return JSON.stringify(entries, null, 2);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductValidator.html":{"url":"injectables/ProductValidator.html","title":"injectable - ProductValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/product/product.validator.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                ALLOWED_FILE_TYPES\n                            \n                            \n                                    Private\n                                    Readonly\n                                MAX_FILE_SIZE\n                            \n                            \n                                    Private\n                                    Readonly\n                                MAX_PRICE\n                            \n                            \n                                    Private\n                                    Readonly\n                                MAX_QUANTITY\n                            \n                            \n                                    Private\n                                    Readonly\n                                MIN_PRICE\n                            \n                            \n                                    Private\n                                    Readonly\n                                MIN_QUANTITY\n                            \n                            \n                                    Private\n                                    Readonly\n                                NAME_PATTERN\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getErrorMessage\n                            \n                            \n                                validateImage\n                            \n                            \n                                validateName\n                            \n                            \n                                validatePrice\n                            \n                            \n                                validateQuantity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMessage\n                        \n                    \n                \n            \n            \n                \ngetErrorMessage(fieldName: string, errors: ValidationErrors)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/product/product.validator.ts:134\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                errors\n                                            \n                                                        ValidationErrors\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateImage\n                        \n                    \n                \n            \n            \n                \nvalidateImage(file: File | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/product/product.validator.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidationErrors | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateName\n                        \n                    \n                \n            \n            \n                \nvalidateName(control: AbstractControl)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/product/product.validator.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidationErrors | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validatePrice\n                        \n                    \n                \n            \n            \n                \nvalidatePrice(control: AbstractControl)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/product/product.validator.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidationErrors | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateQuantity\n                        \n                    \n                \n            \n            \n                \nvalidateQuantity(control: AbstractControl)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/product/product.validator.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidationErrors | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        ALLOWED_FILE_TYPES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['image/jpeg', 'image/png', 'image/gif']\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/product/product.validator.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MAX_FILE_SIZE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : 10 * 1024 * 1024\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/product/product.validator.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MAX_PRICE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10000000\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/product/product.validator.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MAX_QUANTITY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 999999\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/product/product.validator.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MIN_PRICE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/product/product.validator.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MIN_QUANTITY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/product/product.validator.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        NAME_PATTERN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : /^[a-zA-Z0-9À-ÿ\\s\\-_]{2,100}$/\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/product/product.validator.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AbstractControl, ValidationErrors } from '@angular/forms';\nimport { Product, CreateProductDto, UpdateProductDto } from './product';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductValidator {\n  private readonly NAME_PATTERN = /^[a-zA-Z0-9À-ÿ\\s\\-_]{2,100}$/;\n  private readonly MIN_PRICE = 0;\n  private readonly MAX_PRICE = 10000000; // 10 millions FCFA\n  private readonly MIN_QUANTITY = 0;\n  private readonly MAX_QUANTITY = 999999;\n  private readonly ALLOWED_FILE_TYPES = ['image/jpeg', 'image/png', 'image/gif'];\n  private readonly MAX_FILE_SIZE = 10 * 1024 * 1024; // 10MB\n\n  validateName(control: AbstractControl): ValidationErrors | null {\n    const value = control.value;\n    \n    if (!value) {\n      return { required: true };\n    }\n\n    if (!this.NAME_PATTERN.test(value)) {\n      return {\n        pattern: {\n          requiredPattern: this.NAME_PATTERN,\n          actualValue: value\n        }\n      };\n    }\n\n    return null;\n  }\n\n  validatePrice(control: AbstractControl): ValidationErrors | null {\n    const value = control.value;\n    \n    if (value === null || value === undefined || value === '') {\n      return { required: true };\n    }\n\n    const numValue = Number(value);\n    \n    if (isNaN(numValue)) {\n      return { notANumber: true };\n    }\n\n    if (numValue  this.MAX_PRICE) {\n      return {\n        max: {\n          max: this.MAX_PRICE,\n          actual: numValue\n        }\n      };\n    }\n\n    return null;\n  }\n\n  validateQuantity(control: AbstractControl): ValidationErrors | null {\n    const value = control.value;\n    \n    if (value === null || value === undefined || value === '') {\n      return { required: true };\n    }\n\n    const numValue = Number(value);\n    \n    if (isNaN(numValue)) {\n      return { notANumber: true };\n    }\n\n    if (!Number.isInteger(numValue)) {\n      return { notAnInteger: true };\n    }\n\n    if (numValue  this.MAX_QUANTITY) {\n      return {\n        max: {\n          max: this.MAX_QUANTITY,\n          actual: numValue\n        }\n      };\n    }\n\n    return null;\n  }\n\n  validateImage(file: File | null): ValidationErrors | null {\n    if (!file) {\n      return { required: true };\n    }\n\n    if (!this.ALLOWED_FILE_TYPES.includes(file.type)) {\n      return {\n        invalidType: {\n          allowedTypes: this.ALLOWED_FILE_TYPES,\n          actual: file.type\n        }\n      };\n    }\n\n    if (file.size > this.MAX_FILE_SIZE) {\n      return {\n        maxSize: {\n          maxSize: this.MAX_FILE_SIZE,\n          actual: file.size\n        }\n      };\n    }\n\n    return null;\n  }\n\n  getErrorMessage(fieldName: string, errors: ValidationErrors): string {\n    if (!errors) return '';\n\n    switch (fieldName) {\n      case 'name':\n        if (errors['required']) {\n          return 'Le nom du produit est requis';\n        }\n        if (errors['pattern']) {\n          return 'Le nom du produit n\\'est pas valide (2-100 caractères, lettres, chiffres et tirets autorisés)';\n        }\n        break;\n\n      case 'price':\n        if (errors['required']) {\n          return 'Le prix est requis';\n        }\n        if (errors['notANumber']) {\n          return 'Le prix doit être un nombre valide';\n        }\n        if (errors['min']) {\n          return `Le prix minimum est de ${this.MIN_PRICE} FCFA`;\n        }\n        if (errors['max']) {\n          return `Le prix maximum est de ${this.MAX_PRICE.toLocaleString()} FCFA`;\n        }\n        break;\n\n      case 'quantity':\n        if (errors['required']) {\n          return 'La quantité est requise';\n        }\n        if (errors['notANumber']) {\n          return 'La quantité doit être un nombre valide';\n        }\n        if (errors['notAnInteger']) {\n          return 'La quantité doit être un nombre entier';\n        }\n        if (errors['min']) {\n          return `La quantité minimum est de ${this.MIN_QUANTITY}`;\n        }\n        if (errors['max']) {\n          return `La quantité maximum est de ${this.MAX_QUANTITY.toLocaleString()}`;\n        }\n        break;\n\n      case 'image':\n        if (errors['required']) {\n          return 'L\\'image du produit est requise';\n        }\n        if (errors['invalidType']) {\n          return 'Format de fichier non supporté. Utilisez JPG, PNG ou GIF';\n        }\n        if (errors['maxSize']) {\n          return 'Le fichier est trop volumineux (maximum 10MB)';\n        }\n        break;\n    }\n\n    return 'Champ invalide';\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/sidebar/sidebar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sidebar.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  standalone: true,\n  selector: 'app-sidebar',\n  imports: [],\n  templateUrl: './sidebar.component.html',\n  styleUrl: './sidebar.component.css'\n})\nexport class SidebarComponent {\n\n}\n\n    \n\n    \n        \n    \n      \n        \n          \n          Utilisateurs\n        \n        \n          \n          Produits\n        \n      \n    \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                      Utilisateurs                                    Produits                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DeleteModalComponent', 'selector': 'app-delete-modal'},{'name': 'FlashScreenComponent', 'selector': 'app-flash-screen'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModalComponent', 'selector': 'app-form-modal'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SkeletonComponent', 'selector': 'app-skeleton'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SkeletonComponent.html":{"url":"components/SkeletonComponent.html","title":"component - SkeletonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SkeletonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/skeleton/skeleton.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-skeleton\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./skeleton.component.html\n            \n\n\n\n            \n                styleUrl\n                ./skeleton.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                containerClass\n                            \n                            \n                                loading\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        containerClass\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/skeleton/skeleton.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/skeleton/skeleton.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :     \"card\" | \"table-row\" | \"list-item\" | \"custom\"\n\n                    \n                \n                \n                    \n                        Default value : 'card'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/skeleton/skeleton.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/skeleton/skeleton.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  standalone: true,\n  selector: 'app-skeleton',\n  imports: [CommonModule],\n  templateUrl: './skeleton.component.html',\n  styleUrl: './skeleton.component.css'\n})\nexport class SkeletonComponent implements OnInit {\n  @Input() type: 'card' | 'table-row' | 'list-item' | 'custom' = 'card';\n  @Input() containerClass = '';\n  @Input() loading = true; // Ajout du décorateur @Input()\n\n\n  ngOnInit() {\n    setTimeout(() => {\n      this.loading = false;\n    }, 5000);\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n      \n        \n        \n          \n          \n        \n        \n          \n          \n        \n      \n    \n\n    \n    \n      \n      \n      \n      \n    \n\n    \n    \n      \n      \n        \n        \n      \n    \n\n    \n    \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DeleteModalComponent', 'selector': 'app-delete-modal'},{'name': 'FlashScreenComponent', 'selector': 'app-flash-screen'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModalComponent', 'selector': 'app-form-modal'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SkeletonComponent', 'selector': 'app-skeleton'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SkeletonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Toast.html":{"url":"interfaces/Toast.html","title":"interface - Toast","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Toast\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/service/notification/toast.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"success\" | \"error\" | \"info\" | \"warning\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"success\" | \"error\" | \"info\" | \"warning\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Toast {\n    id: string;\n    message: string;\n    type: 'success' | 'error' | 'info' | 'warning';\n    duration?: number;\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToastComponent.html":{"url":"components/ToastComponent.html","title":"component - ToastComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToastComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/component/toast/toast.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-toast\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./toast.component.html\n            \n\n\n\n            \n                styleUrl\n                ./toast.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                toasts$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeToast\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(notificationService: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/component/toast/toast.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeToast\n                        \n                    \n                \n            \n            \n                \ncloseToast(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/component/toast/toast.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/component/toast/toast.component.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        toasts$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/component/toast/toast.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Toast } from '../../service/notification/toast.interface';\nimport { NotificationService } from '../../service/notification/notification.service';\nimport { Observable } from 'rxjs';\n@Component({\n  standalone:true,\n  selector: 'app-toast',\n  imports: [CommonModule ],\n  templateUrl: './toast.component.html',\n  styleUrl: './toast.component.css'\n})\nexport class ToastComponent  implements OnInit{\n  toasts$: Observable;\n\n  constructor(private notificationService: NotificationService) {\n    this.toasts$ = this.notificationService.getToasts();\n  }\n\n  ngOnInit(): void {}\n\n  closeToast(id: string): void {\n    this.notificationService.remove(id);\n  }\n\n\n}\n\n    \n\n    \n        \n    @for(toast of toasts$ | async; track toast.id) {\n      \n        \n          {{ toast.message }}\n          \n            ×\n          \n        \n      \n    }\n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    @for(toast of toasts$ | async; track toast.id) {                        {{ toast.message }}                      ×                            }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DeleteModalComponent', 'selector': 'app-delete-modal'},{'name': 'FlashScreenComponent', 'selector': 'app-flash-screen'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModalComponent', 'selector': 'app-form-modal'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SkeletonComponent', 'selector': 'app-skeleton'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToastComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdateProductDto.html":{"url":"interfaces/UpdateProductDto.html","title":"interface - UpdateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UpdateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/product/product.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            image\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            price\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            quantity\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:     string | File | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | File | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Product {\n  _id: string;\n  name: string;\n  price: number;\n  quantity: number;\n  image?: string | null;\n}\n\nexport interface CreateProductDto {\n  name: string;\n  price: number;\n  quantity: number;\n  image?: string | File | null;\n}\n\nexport interface UpdateProductDto {\n  name?: string;\n  price?: number;\n  quantity?: number;\n  image?: string | File | null;\n}\n\nexport interface FindProductDto {\n  name?: string;\n  price?: number;\n  quantity?: number;\n  page?: number;\n  limit?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdateUserDto.html":{"url":"interfaces/UpdateUserDto.html","title":"interface - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/user/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            address\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            firstname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastname\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  _id: string;\n  firstname: string;\n  lastname: string;\n  address: string;\n  isDeleted: boolean;\n  createdAt?: Date;\n  updatedAt?: Date;\n  DeletedAt?: Date;\n}\n\nexport interface CreateUserDto {\n  firstname: string;\n  lastname: string;\n  address: string;\n}\n\nexport interface UpdateUserDto {\n  firstname?: string;\n  lastname?: string;\n  address?: string;\n}\n\nexport interface FindUserDto {\n  firstname?: string;\n  lastname?: string;\n  address?: string;\n  page?: number;\n  limit?: number;\n  search?: string;\n}\n\nexport interface PaginationInfo {\n  totalItems: number;\n  itemsPerPage: number; \n  totalPages: number;\n  currentPage: number;\n}\n\nexport interface PaginatedResponse {\n  data: T[];\n  pagination: PaginationInfo;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/user/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            DeletedAt\n                                        \n                                \n                                \n                                        \n                                            firstname\n                                        \n                                \n                                \n                                        \n                                            isDeleted\n                                        \n                                \n                                \n                                        \n                                            lastname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DeletedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DeletedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isDeleted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isDeleted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  _id: string;\n  firstname: string;\n  lastname: string;\n  address: string;\n  isDeleted: boolean;\n  createdAt?: Date;\n  updatedAt?: Date;\n  DeletedAt?: Date;\n}\n\nexport interface CreateUserDto {\n  firstname: string;\n  lastname: string;\n  address: string;\n}\n\nexport interface UpdateUserDto {\n  firstname?: string;\n  lastname?: string;\n  address?: string;\n}\n\nexport interface FindUserDto {\n  firstname?: string;\n  lastname?: string;\n  address?: string;\n  page?: number;\n  limit?: number;\n  search?: string;\n}\n\nexport interface PaginationInfo {\n  totalItems: number;\n  itemsPerPage: number; \n  totalPages: number;\n  currentPage: number;\n}\n\nexport interface PaginatedResponse {\n  data: T[];\n  pagination: PaginationInfo;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserComponent.html":{"url":"components/UserComponent.html","title":"component - UserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/user/user.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            NgClass\n                            NgFor\n                            NgIf\n                            ReactiveFormsModule\n                                DeleteModalComponent\n                                FormModalComponent\n                                ToastComponent\n                                SkeletonComponent\n                                PaginationComponent\n                            AsyncPipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./user.component.html\n            \n\n\n\n            \n                styleUrl\n                ./user.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allUsers\n                            \n                            \n                                displayedUsers\n                            \n                            \n                                isEditing\n                            \n                            \n                                itemsPerPage\n                            \n                            \n                                lastAddedId\n                            \n                            \n                                loading\n                            \n                            \n                                showDeleteModal\n                            \n                            \n                                showFormModal\n                            \n                            \n                                userForm\n                            \n                            \n                                userToDelete\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createUserForm\n                            \n                            \n                                deleteUser\n                            \n                            \n                                getErrorMessage\n                            \n                            \n                                isFormValid\n                            \n                            \n                                    Private\n                                loadUsers\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFieldBlur\n                            \n                            \n                                onPageChange\n                            \n                            \n                                openAddModal\n                            \n                            \n                                openDeleteModal\n                            \n                            \n                                openEditModal\n                            \n                            \n                                refreshUsers\n                            \n                            \n                                saveUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, userService: UserService, userValidator: UserValidator, notificationService: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/user/user.component.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userValidator\n                                                  \n                                                        \n                                                                        UserValidator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createUserForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUserForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user/user.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     FormGroup\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user/user.component.ts:201\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMessage\n                        \n                    \n                \n            \n            \n                \ngetErrorMessage(fieldName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user/user.component.ts:221\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFormValid\n                        \n                    \n                \n            \n            \n                \nisFormValid()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user/user.component.ts:217\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user/user.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user/user.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFieldBlur\n                        \n                    \n                \n            \n            \n                \nonFieldBlur(fieldName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user/user.component.ts:136\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPageChange\n                        \n                    \n                \n            \n            \n                \nonPageChange(pageUsers: User[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user/user.component.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pageUsers\n                                            \n                                                            User[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openAddModal\n                        \n                    \n                \n            \n            \n                \nopenAddModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user/user.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDeleteModal\n                        \n                    \n                \n            \n            \n                \nopenDeleteModal(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user/user.component.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditModal\n                        \n                    \n                \n            \n            \n                \nopenEditModal(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user/user.component.ts:120\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshUsers\n                        \n                    \n                \n            \n            \n                \nrefreshUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user/user.component.ts:103\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveUser\n                        \n                    \n                \n            \n            \n                \nsaveUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user/user.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user/user.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user/user.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEditing\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user/user.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        itemsPerPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user/user.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastAddedId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user/user.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user/user.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDeleteModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user/user.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showFormModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user/user.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user/user.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userToDelete\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user/user.component.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NgClass, NgFor, NgIf, AsyncPipe } from '@angular/common';\nimport { FormBuilder, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { User, CreateUserDto, UpdateUserDto } from './user';\nimport { UserService } from './service/user.service';\nimport { UserValidator } from './user.validator';\nimport { NotificationService } from '../../shared/service/notification/notification.service';\nimport { DeleteModalComponent } from '../../shared/component/delete-modal/delete-modal.component';\nimport { FormModalComponent } from '../../shared/component/form-modal/form-modal.component';\nimport { ToastComponent } from '../../shared/component/toast/toast.component';\nimport { SkeletonComponent } from '../../shared/skeleton/skeleton.component';\nimport { PaginationComponent } from '../../shared/pagination/pagination.component';\nimport { Observable, map, catchError, of, finalize } from 'rxjs';\n\n@Component({\n  standalone: true,\n  selector: 'app-user',\n  imports: [\n    NgClass, \n    NgFor, \n    NgIf, \n    ReactiveFormsModule,\n    DeleteModalComponent, \n    FormModalComponent, \n    ToastComponent,\n    SkeletonComponent,\n    PaginationComponent,\n    AsyncPipe\n  ],\n  templateUrl: './user.component.html',\n  styleUrl: './user.component.css'\n})\nexport class UserComponent implements OnInit {\n  lastAddedId: string | null = null;\n  allUsers: User[] = []; // Tous les utilisateurs\n  displayedUsers: User[] = []; // Utilisateurs de la page courante\n  userForm: FormGroup;\n  loading = true;\n  \n  itemsPerPage = 10; // Nombre d'éléments par page\n  \n  showFormModal = false;\n  isEditing = false;\n  showDeleteModal = false;\n  userToDelete: User | null = null;\n\n  constructor(\n    private fb: FormBuilder,\n    private userService: UserService,\n    private userValidator: UserValidator,\n    private notificationService: NotificationService\n  ) {\n    this.userForm = this.createUserForm();\n  }\n\n  private createUserForm(): FormGroup {\n    return this.fb.group({\n      firstname: ['', { validators: [this.userValidator.validateFirstName.bind(this.userValidator)] }],\n      lastname: ['', { validators: [this.userValidator.validateLastName.bind(this.userValidator)] }],\n      address: ['', { validators: [this.userValidator.validateAddress.bind(this.userValidator)] }]\n    });\n  }\n\n  ngOnInit() {\n    this.refreshUsers();\n  }\n\n  private loadUsers(): Observable {\n    this.loading = true;\n    return this.userService.getAll().pipe(\n      map((response: any) => {\n        console.log('Response received:', response);\n        \n        let users: User[] = [];\n        if (response?.data?.data) {\n          users = response.data.data;\n        } else if (response?.data) {\n          users = response.data;\n        } else if (Array.isArray(response)) {\n          users = response;\n        } else {\n          console.error('Impossible de trouver les données dans la réponse:', response);\n          return [];\n        }\n        \n        return users.sort((a, b) => {\n          if (a._id === this.lastAddedId) return -1;\n          if (b._id === this.lastAddedId) return 1;\n          return b._id.localeCompare(a._id);\n        });\n      }),\n      catchError(error => {\n        console.error('Error loading users:', error);\n        this.notificationService.error('Erreur lors du chargement des utilisateurs');\n        return of([]);\n      }),\n      finalize(() => {\n        this.loading = false;\n      })\n    );\n  }\n  \n  refreshUsers() {\n    this.loadUsers().subscribe(users => {\n      this.allUsers = users;\n    });\n  }\n\n  // Méthode appelée lorsque la page change dans le composant de pagination\n  onPageChange(pageUsers: User[]) {\n    this.displayedUsers = pageUsers;\n  }\n\n  openAddModal() {\n    this.isEditing = false;\n    this.userForm.reset();\n    this.showFormModal = true;\n  }\n\n  openEditModal(user: User) {\n    this.isEditing = true;\n    this.userToDelete = user; // Stocker l'utilisateur à éditer\n    this.userForm.patchValue({\n      firstname: user.firstname,\n      lastname: user.lastname,\n      address: user.address\n    });\n    this.showFormModal = true;\n  }\n  \n  openDeleteModal(user: User) {\n    this.userToDelete = user;\n    this.showDeleteModal = true;\n  }\n\n  onFieldBlur(fieldName: string) {\n    const control = this.userForm.get(fieldName);\n    control?.markAsTouched();\n    control?.updateValueAndValidity();\n  }\n\n  saveUser() {\n    // Marquer tous les champs comme touchés\n    Object.keys(this.userForm.controls).forEach(key => {\n      const control = this.userForm.get(key);\n      control?.markAsTouched();\n      control?.updateValueAndValidity();\n    });\n\n    if (this.userForm.invalid) {\n      return;\n    }\n\n    const formValue = this.userForm.value;\n\n    if (this.isEditing && this.userToDelete?._id) {\n      const updateDto: UpdateUserDto = {\n        firstname: formValue.firstname,\n        lastname: formValue.lastname,\n        address: formValue.address\n      };\n      \n      this.userService.update(this.userToDelete._id, updateDto).subscribe({\n        next: () => {\n          this.showFormModal = false;\n          this.notificationService.success('Utilisateur modifié avec succès!');\n          this.refreshUsers();\n        },\n        error: (error) => {\n          this.notificationService.error('Erreur lors de la modification de l\\'utilisateur');\n          console.error('Error updating user:', error);\n        }\n      });\n    } else {\n      const createDto: CreateUserDto = {\n        firstname: formValue.firstname,\n        lastname: formValue.lastname,\n        address: formValue.address\n      };\n  \n      this.userService.create(createDto).subscribe({\n        next: (response) => {\n          this.showFormModal = false;\n          this.lastAddedId = response.data._id;\n          this.notificationService.success('Utilisateur créé avec succès!');\n          this.refreshUsers();\n          \n          setTimeout(() => {\n            this.lastAddedId = null;\n            this.refreshUsers();\n          }, 5000);\n        },\n        error: (error) => {\n          this.notificationService.error('Erreur lors de la création de l\\'utilisateur');\n          console.error('Error creating user:', error);\n        }\n      });\n    }\n  }\n\n  deleteUser(user: User) {\n    if (user && user._id) {\n      this.userService.delete(user._id).subscribe({\n        next: () => {\n          this.showDeleteModal = false;\n          this.notificationService.success('Utilisateur supprimé avec succès!');\n          this.refreshUsers();\n        },\n        error: (error) => {\n          this.notificationService.error('Erreur lors de la suppression de l\\'utilisateur');\n          console.error('Error deleting user:', error);\n        }\n      });\n    }\n  }\n\n  isFormValid(): boolean {\n    return this.userForm.valid;\n  }\n\n  getErrorMessage(fieldName: string): string {\n    const control = this.userForm.get(fieldName);\n    if (control?.errors) {\n      return this.userValidator.getErrorMessage(fieldName, control.errors);\n    }\n    return '';\n  }\n}\n    \n\n    \n        \n\n\n  \n    Gestion des Utilisateurs\n    \n      Ajouter un utilisateur\n    \n  \n\n  \n    \n      \n        \n          Prénom\n          Nom\n          Adresse\n          Actions\n        \n      \n      \n        \n          \n            \n              \n              \n            \n          \n        \n        \n        \n          \n            {{ user.firstname }}\n            {{ user.lastname }}\n            {{ user.address }}\n            \n              \n                \n                  \n                \n                \n                  \n                \n              \n            \n          \n          \n            \n              Aucun utilisateur trouvé\n            \n          \n        \n      \n    \n    \n    \n    \n    \n  \n\n\n\n\n\n  \n    \n      Prénom\n      \n      \n        {{ getErrorMessage('firstname') }}\n      \n    \n    \n    \n      Nom\n      \n      \n        {{ getErrorMessage('lastname') }}\n      \n    \n    \n    \n      Adresse\n      \n      \n        {{ getErrorMessage('address') }}\n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Gestion des Utilisateurs          Ajouter un utilisateur                                    Prénom          Nom          Adresse          Actions                                                                                                                                                  {{ user.firstname }}            {{ user.lastname }}            {{ user.address }}                                                                                                                                                                                                      Aucun utilisateur trouvé                                                                      Prénom                    {{ getErrorMessage(\\'firstname\\') }}                        Nom                    {{ getErrorMessage(\\'lastname\\') }}                        Adresse                    {{ getErrorMessage(\\'address\\') }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DeleteModalComponent', 'selector': 'app-delete-modal'},{'name': 'FlashScreenComponent', 'selector': 'app-flash-screen'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormModalComponent', 'selector': 'app-form-modal'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'ProductComponent', 'selector': 'app-product'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SkeletonComponent', 'selector': 'app-skeleton'},{'name': 'ToastComponent', 'selector': 'app-toast'},{'name': 'UserComponent', 'selector': 'app-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/user/service/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                endpoint\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/user/service/user.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(user: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user/service/user.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user/service/user.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(filter?: FindUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user/service/user.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            FindUserDto\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user/service/user.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, user: UpdateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user/service/user.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        endpoint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'users'\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user/service/user.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpService } from '../../../shared/service/http/http.service';\nimport { map, Observable } from 'rxjs';\nimport { User, CreateUserDto, FindUserDto, UpdateUserDto } from '../user';\nimport { HttpResponse } from '../../../shared/service/http/http-response.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private endpoint = 'users';\n\n  constructor(private http: HttpService) {}\n\n  getAll(filter?: FindUserDto): Observable> {\n    return this.http.get(this.endpoint);\n  }\n\n  getById(id: string): Observable> {\n    return this.http.get(`${this.endpoint}/${id}`);\n  }\n\n  create(user: CreateUserDto): Observable> {\n    return this.http.post(this.endpoint, user);\n  }\n\n  \n  update(id: string, user: UpdateUserDto): Observable> {\n    return this.http.put(`${this.endpoint}/${id}`, user);\n  }\n\n  delete(id: string): Observable> {\n    return this.http.delete(`${this.endpoint}/${id}`);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserValidator.html":{"url":"injectables/UserValidator.html","title":"injectable - UserValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/user/user.validator.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                ADDRESS_MAX_LENGTH\n                            \n                            \n                                    Private\n                                    Readonly\n                                ADDRESS_MIN_LENGTH\n                            \n                            \n                                    Private\n                                    Readonly\n                                NAME_PATTERN\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getErrorMessage\n                            \n                            \n                                validateAddress\n                            \n                            \n                                validateFirstName\n                            \n                            \n                                validateLastName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMessage\n                        \n                    \n                \n            \n            \n                \ngetErrorMessage(fieldName: string, errors: ValidationErrors)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user/user.validator.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                errors\n                                            \n                                                        ValidationErrors\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateAddress\n                        \n                    \n                \n            \n            \n                \nvalidateAddress(control: AbstractControl)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user/user.validator.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidationErrors | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateFirstName\n                        \n                    \n                \n            \n            \n                \nvalidateFirstName(control: AbstractControl)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user/user.validator.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidationErrors | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateLastName\n                        \n                    \n                \n            \n            \n                \nvalidateLastName(control: AbstractControl)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user/user.validator.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidationErrors | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        ADDRESS_MAX_LENGTH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 200\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user/user.validator.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        ADDRESS_MIN_LENGTH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user/user.validator.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        NAME_PATTERN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : /^[a-zA-ZÀ-ÿ\\s-]{2,50}$/\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user/user.validator.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AbstractControl, ValidationErrors } from '@angular/forms';\nimport { User, CreateUserDto, UpdateUserDto } from './user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserValidator {\n  private readonly NAME_PATTERN = /^[a-zA-ZÀ-ÿ\\s-]{2,50}$/;\n  private readonly ADDRESS_MIN_LENGTH = 2;\n  private readonly ADDRESS_MAX_LENGTH = 200;\n\n  validateFirstName(control: AbstractControl): ValidationErrors | null {\n    const value = control.value;\n    \n    if (!value) {\n      return { required: true };\n    }\n\n    if (!this.NAME_PATTERN.test(value)) {\n      return {\n        pattern: {\n          requiredPattern: this.NAME_PATTERN,\n          actualValue: value\n        }\n      };\n    }\n\n    return null;\n  }\n\n  validateLastName(control: AbstractControl): ValidationErrors | null {\n    const value = control.value;\n    \n    if (!value) {\n      return { required: true };\n    }\n\n    if (!this.NAME_PATTERN.test(value)) {\n      return {\n        pattern: {\n          requiredPattern: this.NAME_PATTERN,\n          actualValue: value\n        }\n      };\n    }\n\n    return null;\n  }\n\n  validateAddress(control: AbstractControl): ValidationErrors | null {\n    const value = control.value;\n    \n    if (!value) {\n      return { required: true };\n    }\n\n    if (value.length  this.ADDRESS_MAX_LENGTH) {\n      return {\n        maxlength: {\n          requiredLength: this.ADDRESS_MAX_LENGTH,\n          actualLength: value.length\n        }\n      };\n    }\n\n    return null;\n  }\n\n  getErrorMessage(fieldName: string, errors: ValidationErrors): string {\n    if (!errors) return '';\n\n    switch (fieldName) {\n      case 'firstname':\n      case 'lastname':\n        if (errors['required']) {\n          return `Le ${fieldName === 'firstname' ? 'prénom' : 'nom'} est requis`;\n        }\n        if (errors['pattern']) {\n          return `Le ${fieldName === 'firstname' ? 'prénom' : 'nom'} n'est pas valide (2-50 caractères, lettres uniquement)`;\n        }\n        break;\n\n      case 'address':\n        if (errors['required']) {\n          return \"L'adresse est requise\";\n        }\n        if (errors['minlength']) {\n          return `L'adresse doit contenir au moins ${this.ADDRESS_MIN_LENGTH} caractères`;\n        }\n        if (errors['maxlength']) {\n          return `L'adresse ne peut pas dépasser ${this.ADDRESS_MAX_LENGTH} caractères`;\n        }\n        break;\n    }\n\n    return 'Champ invalide';\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/component/flash-screen/flash-screen.component.ts\n            \n            component\n            FlashScreenComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/component/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/component/loader/loader.component.ts\n            \n            component\n            LoaderComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/component/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/component/sidebar/sidebar.component.ts\n            \n            component\n            SidebarComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/environneemnt/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/fcfa-currency.pipe.ts\n            \n            pipe\n            FcfaCurrencyPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/product/product.component.ts\n            \n            component\n            ProductComponent\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                src/app/pages/product/product.component.ts\n            \n            interface\n            ApiError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/pages/product/product.ts\n            \n            interface\n            CreateProductDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/pages/product/product.ts\n            \n            interface\n            FindProductDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/pages/product/product.ts\n            \n            interface\n            Product\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/pages/product/product.ts\n            \n            interface\n            UpdateProductDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/pages/product/product.validator.ts\n            \n            injectable\n            ProductValidator\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/pages/product/service/product.service.ts\n            \n            injectable\n            ProductService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/pages/user/service/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/pages/user/user.component.ts\n            \n            component\n            UserComponent\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                src/app/pages/user/user.ts\n            \n            interface\n            CreateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/pages/user/user.ts\n            \n            interface\n            FindUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/pages/user/user.ts\n            \n            interface\n            PaginatedResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pages/user/user.ts\n            \n            interface\n            PaginationInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/pages/user/user.ts\n            \n            interface\n            UpdateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/pages/user/user.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/pages/user/user.validator.ts\n            \n            injectable\n            UserValidator\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/component/delete-modal/delete-modal.component.ts\n            \n            component\n            DeleteModalComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/shared/component/form-modal/form-modal.component.ts\n            \n            component\n            FormModalComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/shared/component/toast/toast.component.ts\n            \n            component\n            ToastComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/pagination/pagination.component.ts\n            \n            component\n            PaginationComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/shared/service/http/api-response.interface.ts\n            \n            interface\n            ApiResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/service/http/http-response.interface.ts\n            \n            interface\n            HttpResponse\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/service/http/http-service.interface.ts\n            \n            interface\n            IHttpService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/service/http/http.service.ts\n            \n            injectable\n            HttpService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/service/notification/notification.service.ts\n            \n            injectable\n            NotificationService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/shared/service/notification/toast.interface.ts\n            \n            interface\n            Toast\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/skeleton/skeleton.component.ts\n            \n            component\n            SkeletonComponent\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^19.1.0\n        \n            @angular/common : ^19.1.0\n        \n            @angular/compiler : ^19.1.0\n        \n            @angular/core : ^19.1.0\n        \n            @angular/forms : ^19.1.0\n        \n            @angular/platform-browser : ^19.1.0\n        \n            @angular/platform-browser-dynamic : ^19.1.0\n        \n            @angular/router : ^19.1.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTeamxGroupAngular\nThis project was generated using Angular CLI version 19.1.6.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testRunning end-to-end tests\nFor end-to-end (e2e) testing, run:\nExample :ng e2eAngular CLI does not come with an end-to-end testing framework by default. You can choose one that suits your needs.\nAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\nTeamx-Group-Angular\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    13 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    15 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }), \n    provideRouter(routes),\n    provideHttpClient()\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/app/environneemnt/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    production: false,\n    apiUrl: 'http://localhost:3000/'\n  }\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
